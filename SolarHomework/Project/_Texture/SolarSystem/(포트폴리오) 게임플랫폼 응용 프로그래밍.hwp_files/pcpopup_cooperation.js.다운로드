var test_timer = null;
var loadingFirst = false;
var pageView = false;
var saveUrl = '';
var outlookData = {};
var multiShare = true;
var hwpWrite = false;

(function ($) {
	/* AOM-7556 */
	Array.prototype.contains = function (obj) {
		var i = this.length;
		while (i--) {
			if (this[i] === obj) {
				return true;
			}
		}
		return false;
	};

	var isIeBrowser = false;
	if (navigator.appName == 'Microsoft Internet Explorer' || (navigator.appName == 'Netscape' && navigator.userAgent.search('Trident') != -1) || (navigator.userAgent.toLowerCase().indexOf("msie") != -1)) {
		isIeBrowser = true;
	}

	try {
		sendMessageToNative('pc_CheckHWPShareMode');
	} catch (err) {
		console.log(err);
	}

	var cooperation = {
		'init': function (options, _cb) {
			loadingFirst = false;
			pageView = false;
			var settings;
			var $this = this;
			var ua = typeof gUA != 'undefined' ? gUA.toLowerCase() : navigator.userAgent.toLowerCase();
			var paymentParams = getUrlParam();
			if ($this.hasClass('init')) {
				settings = $.extend({
					'selector': {
						'bx': null,
						'user': null
					},
					'search': {
						'c': 100,
						'arr': [],
					},
					'log': {},
					'fileinfo': {
						'isPotype': false,
						'id': '',
						'name': '',
						'type': '',
						'workid': '',
						'realid': true,
						'externalAuthority': 0,
						'publicAuthority': 0,
						'User': [],
					},
					'fileinfoNew': [],
					'convert': {
						'user': [],
						'msg': ''
					},
					'size': {
						'width': 0,
						'height': 0
					},
					'self': false,
					'scroll': null,
					'stop': false,
					'readOnly': false,
					'readOnly2': true,
					'cilp': false,
					'id': 0,
					'email': '',
					'isOwner': true,
					'agent': false,
					'agentType': 0,
					'time': new Date().getTime().toString().substring(0, 10),
					'type': 'default',
					'changeType': 'default',
					'authType': 'read',
					'isClose': '0',
					'editcount': 0,
					'synccb': null,
					'appendLi': null,
					'inviteData': [],
					'inviteData2': [],
					'click': "ontouchend" in document ? true : false,
					'changetext': false,
					'docPos' : paymentParams['docpos'] || '',
					'posShare' : paymentParams['posshare'] || '',
					'viewerDocPos' : '',
					'checkedPosShare' : false
				}, options);

				if (multiShare) {
					var handle = {
						'create': layout.create,
						'setUser': layout.user.set,
						'useradd': layout.useradd,
						'setSearch': layout.search.set,
						'changeMode': layout.changeMode,
						//								GMX-5319
						'changeModeMulti': layout.changeModeMulti,
						'setdeniedList': layout.setdeniedList,
						'setrecentinvitedlist': layout.setrecentinvitedlist
					};
				} else {
					var handle = {
						'create': layout.create,
						'setUser': layout.user.set,
						'useradd': layout.useradd,
						'setSearch': layout.search.set,
						'changeMode': layout.changeMode,
						'setdeniedList': layout.setdeniedList,
						'setrecentinvitedlist': layout.setrecentinvitedlist
					};
				}

				settings.handle = $.extend(settings.handle, handle);

				$this.data('settings', settings);
				$this.removeClass('init');
				$this.bind('dragstart', function (event) {
					if ((event.target || event.srcElement).nodeName == 'A' ||
						(event.target || event.srcElement).nodeName == 'INPUT' ||
						(event.target || event.srcElement).nodeName == 'TEXTAREA' ||
						(event.target || event.srcElement).nodeName == 'OBJECT' ||
						(event.target || event.srcElement).nodeName == 'EMBED') {
						return false;
					}
				});
				$this.bind('selectstart', function (event) {
					if ((event.target || event.srcElement).nodeName !== 'INPUT' &&
						(event.target || event.srcElement).nodeName !== 'TEXTAREA') {
						return false;
					}
				});

				$this.bind('click', function (e) {
					if (e.stopPropagation) e.stopPropagation();
				});
				$this.bind('dblclick', function (e) {
					if (e.stopPropagation) e.stopPropagation();
				});

				if (settings.agent) {
					if (ua.search("polarisofficelink") != -1) {
						settings.agentType = 1;

						var ua_arr = ua.split('/');
						var version = ua_arr[ua_arr.length - 1];
						var subversion = version.split('.');
						var convert_version = '';
						for (var i = 0; i < subversion.length; i++) {
							if (i == 0) {
								convert_version += subversion[i];
							} else {
								if (subversion[i].length == 1) {
									convert_version += ('00' + subversion[i]);
								} else if (subversion[i].length == 2) {
									convert_version += ('0' + subversion[i]);
								} else {
									convert_version += subversion[i];
								}
							}
						}
						convert_version = parseInt(convert_version);
						if (convert_version < 2001000) {
							settings.HeightEvent = true;
						} else {
							settings.HeightEvent = false;
						}


					} else if (ua.search("polarispcoffice") != -1 || ua.indexOf('podialog') != -1 || ua.indexOf('macdialog') != -1) {
						settings.agentType = 2;
						settings.readOnly = false;
						settings.HeightEvent = false;
						if (!settings.isPcHome) {
							$('body').addClass('pc');
						}
					}

					if ($('#closecooperation').length) {
						defaultAlertCB = function (e) {
							if (e.preventDefault) e.preventDefault();
							if (e.stopPropagation) e.stopPropagation();

							settings.isClose = '1';
							sendMessageToNative('closecooperation');
						};
						showUnverifyPopMsg = function (_email) {
							var popupMessage = new Array();
							popupMessage[0] = LanguagePack.POPUP_SENDACCOUNTAUTHGUIDE(_email);
							var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, null, {
								popupMessage: popupMessage
							}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
							popup.create();
							popup.show();
							var $view = $('#popup_message_view');
							$this.cooperation('sendsize', $view.width(), $view.height());
						};
					}

					logout = function (e) {
						if (e.preventDefault) e.preventDefault();
						if (e.stopPropagation) e.stopPropagation();

						settings.isClose = '1';
						sendMessageToNative('closecooperation');
					};
					if (isIeBrowser) settings.cilp = true;
				}

				if (!settings.agent || settings.isPcHome) {
					$(window).resize(function (e) {
						if (settings.resizeTimer) {
							clearTimeout(settings.resizeTimer);
							settings.resizeTimer = null;
						}
						if ($this.is(':visible') && !$this.hasClass('allowScroll')) {
							settings.resizeTimer = setTimeout(function () {
								$this.cooperation('checkSize');
							}, 200);
						}
					});
				}

				if (isKT) {
					settings.readOnly = false;
				}
				settings.handle.create.apply($this);
				/*if(isMobile) {
					$this.css('position', 'absolute');
				}*/
			} else {
				settings = $this.data('settings');
				settings = $.extend(settings, options);
			}

			if (settings.agent && !settings.isPcHome) {
				if ($this.children('.share_popup').is(':visible')) {
					settings.handle.changeMode.apply($this, ['clear']);
				}
				var prevPopup = PopupManagement.getCurrentPopup();
				if (prevPopup != null) {
					prevPopup.destroy();
				}
			}

			var url = '';
			if (location.host == "pcofficewebview.polarisoffice.com" || location.host == "polarisoffice.com" || location.host == "www.polarisoffice.com") {
				url = location.protocol + '//' + 'www.polarisoffice.com';
			} else if (location.host == "verify-pcview.polarisoffice.com") {
				url = location.protocol + '//' + 'verifycloud.polarisoffice.com';
			} else if (location.host == "vf-ca-pcview.polarisoffice.com") {
				url = location.protocol + '//' + 'vf-ca-cloud.polarisoffice.com';
			} else {
				url = location.protocol + '//' + location.host;
			}
			url += '/d/' + $.encodeBase62(settings.fileinfo.id.toString());
			/*var url = location.protocol + '//' + location.host + '/d/' + $.encodeBase62(settings.fileinfo.id.toString());*/
			$this.find('.share_popup .shareBox div.weblnk p.copy input').val(url);

			if (settings.agent && !settings.isPcHome) {
				$this.css('margin-top', '0px');
				$this.css('width', 'auto');
				$this.css('position', 'absolute');
			}

			if (!settings.readOnly) {
				/*	settings.authType = 'write';
				settings.selector.box6.auth.removeAttr('class').addClass('write auth');*/
				settings.authType = 'read';
				settings.selector.box6.auth.removeAttr('class').addClass('read auth');
			}

			if (multiShare) {
				//					GMX-5319
				if ($.isArray(settings.fileinfo.id)) {
					if (settings.fileinfo.id.length > 1) {
						jsonResponse.getShareFileInfoMulti($this, settings.fileinfo, true, false, _cb);
					} else if (settings.fileinfo.id.length > 0) {
						jsonResponse.getShareFileInfo($this, settings.fileinfo, true, false, _cb);
					}

				} else {
					jsonResponse.getShareFileInfo($this, settings.fileinfo, true, false, _cb);
				}
			} else {
				jsonResponse.getShareFileInfo($this, settings.fileinfo, true, false, _cb);
			}

			if (addressData.complete) {
				addressData.jsonUpateAddress(function (res) {}, function (res) {});
			} else {
				addressData.jsonGetRevision(function (res) {}, function (res) {});
			}
			if (options.appendLi) {
				//console.log(options.appendLi);
			} else {
				settings.appendLi = null;
			}
			settings.isClose = '0';

			if (ua.indexOf("polarisofficelink") >= 0) {
				if (ua.indexOf("mac") >= 0)
					settings.log.dp = "ShareSetting.macsync";
				else
					settings.log.dp = "ShareSetting.winsync";
			} else if (ua.indexOf("polarispcoffice") >= 0 || ua.indexOf('podialog') >= 0) {
				settings.log.dp = "ShareSetting.pcoffice";
			} else if (ua.indexOf("macdialog") >= 0) {
				settings.log.dp = "ShareSetting.machome";
			} else {
				settings.log.dp = "ShareSetting.web";
			}
		},
		'changeTop': function (list) {
			var $this = this;
			var settings = $this.data('settings');
			settings.appendLi = list;

			var top;
			var top2;
			var height = $this.height();
			var height2 = settings.appendLi.height();

			if (settings.appendLi.closest('.list_box').length) {
				top = top2 = settings.appendLi.prop('offsetTop');
				$listbox = settings.appendLi.closest('.list_box');
				var visibleHeight = $listbox.outerHeight(true);
				var scrollTop = $listbox.scrollTop();
				if (top + height + height2 > scrollTop + visibleHeight) {
					$this.css('top', top2 - height);
				} else {
					$this.css('top', top2 + height2);
				}
			} else if (settings.appendLi.closest('.doc_list').length) {
				top2 = settings.appendLi.prop('offsetTop');
				if ($('#cloud .header').hasClass("sm")) {
					top = top2 + 60;
				} else {
					top = top2 + 254;
				}
				var scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;
				var visibleHeight = $('html').prop('clientHeight');
				if (top + height + height2 > visibleHeight + scrollTop) {
					$this.css('top', top2 - height);
				} else {
					$this.css('top', top2 + height2);
				}
			}
			$this.show();
		},
		'setShareFileInfo': function (fileInfo, change, sync) {
			var $this = this;
			var settings = $this.data('settings');

			var isWeblinkRequest = false;
			var isRequestAuthority = false;
			var isSync = false;
			var type = '';

			if ($('#loading_bar').length) {
				$('#loading_bar').remove();
			}
			settings.editcount = 0;
			if (settings.type == 'weblink') {
				isWeblinkRequest = true;
			} else if (settings.type == 'reqAuth') {
				isRequestAuthority = true;
			}
			if ($this.children('.convert_popup2').is(':visible')) {
				if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
					settings.agentfileinfo = fileInfo;
					sendMessageToNative('createfile', getCooperationFileInfo());
				}
				if (settings.type == 'custom' || settings.type == 'default') {
					settings.handle.changeMode.apply($this, ['clear']);
				}
				settings.selector.toast.hide();
			}

			if (settings.synccb && sync) {
				if (settings.fileinfo.id != fileInfo.work.fileInfo.id) {
					isSync = true;
				} else if (settings.fileinfo.workid != fileInfo.work.id) {
					isSync = true;
				} else if (settings.fileinfo.name != fileInfo.work.fileInfo.name) {
					isSync = true;
				} else {
					if (settings.fileinfo.publicAuthority == 0 && settings.fileinfo.User.length == 0) {
						if (fileInfo.work.publicAuthority || fileInfo.attendanceList.length) {
							isSync = true;
						}
					}
				}

				if (isSync) {
					settings.synccb.call(this, fileInfo.work.fileInfo.id);
				}
			}

			if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
				if ((typeof settings.fileinfo.workid != 'undefined' && settings.fileinfo.workid != fileInfo.work.id) || settings.fileinfo.name != fileInfo.work.fileInfo.name) {
					settings.agentfileinfo = fileInfo;
					if (fileInfo.work.id) {
						sendMessageToNative('sharecooperation');
					} else {
						sendMessageToNative('nosharecooperation');
					}
				}
			}

			if (settings.isClose == '1') {
				return;
			}

			settings.auth = -1;
			settings.fileinfo.publicAuthority = 0;
			settings.fileinfo.customMode = 0;
			settings.externalAuthority = 0;
			if (fileInfo.work.fileInfo.ownerId == settings.id) {
				settings.auth = 0;

				if ($USERINFO.getData('UNVERIFIED')) {
					unverifyShareMsg();
					return;
				}

			} else {
				for (var i = 0; i < fileInfo.attendanceList.length; i++) {
					if (fileInfo.attendanceList[i].userId && settings.id == fileInfo.attendanceList[i].userId) {
						settings.auth = fileInfo.attendanceList[i].authority;
						break;
					}
				}
			}


			settings.fileinfo.id = fileInfo.work.fileInfo.id;
			var url = '';
			if (location.host == "pcofficewebview.polarisoffice.com" || location.host == "polarisoffice.com" || location.host == "www.polarisoffice.com") {
				url = location.protocol + '//' + 'www.polarisoffice.com';
			} else if (location.host == "verify-pcview.polarisoffice.com") {
				url = location.protocol + '//' + 'verifycloud.polarisoffice.com';
			} else if (location.host == "vf-ca-pcview.polarisoffice.com") {
				url = location.protocol + '//' + 'vf-ca-cloud.polarisoffice.com';
			} else {
				url = location.protocol + '//' + location.host;
			}
			url += '/d/' + $.encodeBase62(settings.fileinfo.id.toString());

			if(settings.docPos != ''){
				if(settings.posShare == '1' || settings.checkedPosShare){
					url += '/l/' + settings.docPos;
					$this.find('.share_popup .docPosShare').prop('checked', true);
					settings.checkedPosShare = true;
				}
				$this.find('.share_popup .location_share').show();
			}

			if(settings.viewerDocPos){
				url += '/l/' + settings.viewerDocPos;
			}


			/*var url = location.protocol + '//' + location.host + '/d/' + $.encodeBase62(settings.fileinfo.id.toString());*/
			$this.find('.share_popup .shareBox div.weblnk p.copy input').val(url).show();

			settings.fileinfo.size = fileInfo.work.fileInfo.size;
			settings.fileinfo.name = fileInfo.work.fileInfo.name;
			var index = settings.fileinfo.name.lastIndexOf(".");
			var str = settings.fileinfo.name.substr(0, index);
			settings.fileinfo.type = settings.fileinfo.name.substr(index + 1, settings.fileinfo.name.length).toLowerCase();
			$this.find('.convert_popup .box dl dd span').text(settings.fileinfo.type);
			settings.fileinfo.shared = 0;
			if (fileInfo.work.shared) {
				settings.fileinfo.shared = fileInfo.work.shared;
			}
			settings.fileinfo.isPotype = false;
			if (settings.fileinfo.type == 'slide' || settings.fileinfo.type == 'sheet' || settings.fileinfo.type == 'word') {
				settings.fileinfo.isPotype = true;
			}
			if (!settings.readOnly) {
				var support = ["docx", "pptx", "xlsx", "hwp"];
				// if (common.checkHwpWrite()) {
				// 	hwpWrite = true;
				// } else {
				// 	hwpWrite = false;
				// }

				// if (typeof hwpWrite != 'undefined' && hwpWrite) {
				// 	support.push('hwp');
				// }

				if (support.contains(settings.fileinfo.type) || settings.fileinfo.isPotype) {
					settings.readOnly2 = false;
				} else {
					settings.readOnly2 = true;
				}
			}

			settings.fileinfo.workid = null;
			if (fileInfo.work.id) {
				settings.fileinfo.workid = fileInfo.work.id;
				settings.fileinfo.publicAuthority = fileInfo.work.publicAuthority ? fileInfo.work.publicAuthority : 0;
				if (fileInfo.work.customMode) {
					settings.fileinfo.customMode = 1;
				}
			}
			if (fileInfo.work.shareDeniedReason) {
				settings.externalAuthority = fileInfo.work.shareDeniedReason;
			}

			if (settings.externalAuthority == 1) {
				if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
					var resultcb2 = function () {
						if (checkUser || !stopShare) {
							var popupMessage = new Array();
							popupMessage[0] = LanguagePack.COOPERATION_AUTHENTICATEDFAIL_MSG5;
							var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
								popupMessage: popupMessage
							}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
							popup.create();
							popup.show();
							var $view = $('#popup_message_view');
							$this.cooperation('sendsize', $view.width(), $view.height());
							sendMessageToNative('layoutcomplete');
							return;
						} else {
							setTimeout(resultcb2, 30);
						}
					};
					setTimeout(resultcb2, 30);
				} else {
					var popupMessage = new Array();
					popupMessage[0] = LanguagePack.COOPERATION_AUTHENTICATEDFAIL_MSG5;
					var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
						popupMessage: popupMessage
					}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
					popup.create();
					popup.show();
					var $view = $('#popup_message_view');
					$this.cooperation('sendsize', $view.width(), $view.height());
					return;
				}

			} else if (settings.externalAuthority == 2) {
				if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
					var resultcb2 = function () {
						if (checkUser || !stopShare) {
							var popupMessage = new Array();
							popupMessage[0] = LanguagePack.BUSINESS_FILEMOVE_ERROR;
							var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
								popupMessage: popupMessage
							}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
							popup.create();
							popup.show();
							var $view = $('#popup_message_view');
							$this.cooperation('sendsize', $view.width(), $view.height());
							sendMessageToNative('layoutcomplete');
							return;
						} else {
							setTimeout(resultcb2, 30);
						}
					};
					setTimeout(resultcb2, 30);
				} else {
					var popupMessage = new Array();
					popupMessage[0] = LanguagePack.COOPERATION_AUTHENTICATEDFAIL_MSG4;
					var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
						popupMessage: popupMessage
					}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
					popup.create();
					popup.show();
					var $view = $('#popup_message_view');
					$this.cooperation('sendsize', $view.width(), $view.height());
					return;
				}

			} else if (settings.externalAuthority == 3) {
				if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
					var resultcb3 = function () {
						if (checkUser || !stopShare) {
							var popupMessage = new Array();
							popupMessage[0] = LanguagePack.POPUP_SHARENOTALLOWED_ASKOWNER;
							var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
								popupMessage: popupMessage
							}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
							popup.create();
							popup.show();
							var $view = $('#popup_message_view');
							$this.cooperation('sendsize', $view.width(), $view.height());
							sendMessageToNative('layoutcomplete');
							return;
						} else {
							setTimeout(resultcb3, 30);
						}
					};
					setTimeout(resultcb3, 30);
				} else {
					var popupMessage = new Array();
					popupMessage[0] = LanguagePack.POPUP_SHARENOTALLOWED_ASKOWNER;
					var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
						popupMessage: popupMessage
					}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
					popup.create();
					popup.show();
					var $view = $('#popup_message_view');
					$this.cooperation('sendsize', $view.width(), $view.height());
					return;
				}
			}

			settings.owner = fileInfo.work.owner;
			if (!settings.owner) {
				settings.owner = {
					'id': fileInfo.work.fileInfo.ownerId,
					'email': (settings.id == fileInfo.work.fileInfo.ownerId) ? settings.email : '',
					'name': fileInfo.work.fileInfo.ownerName
				};
			}
			if (JSON.stringify(settings.fileinfo.User) != JSON.stringify(fileInfo.attendanceList)) {
				settings.fileinfo.User = [];
				settings.fileinfo.User = fileInfo.attendanceList;
				settings.handle.setUser.apply(settings.selector.box6.userlist, [{
					'user': settings.fileinfo.User,
					'change': true,
				}]);
				if (settings.selector.box6.init.hasClass('userautochange')) {
					settings.selector.box6.init.removeClass('userautochange');
				}
			} else {
				settings.handle.setUser.apply(settings.selector.box6.userlist, [{
					'user': settings.fileinfo.User,
					'change': false
				}]);
			}

			settings.realid = true;
			if (settings.fileinfo.workid && !settings.fileinfo.publicAuthority && !settings.fileinfo.User.length && !settings.auth) {
				settings.realid = false;
			}
			if (settings.fileinfo.publicAuthority) {
				var img = new Image();
				img.src = location.protocol + '//' + location.host + GET_WEBLINK_THUMBNAIL + settings.fileinfo.id.toString();
			}

			settings.selector.box6.add.children('.notice').hide();
			if (settings.changetext) {
				settings.changetext = false;
				settings.selector.box6.add.children('h3').text(LanguagePack.SHARE_INVITE_ADDUSER);
			}

			if (isWeblinkRequest) {
				type = 'weblink';
				settings.type = 'weblink';
				if (settings.fileinfo.publicAuthority == 0) {
					if (settings.auth == 0) {
						var mode = settings.fileinfo.customMode;
						if (!mode) {
							mode = (settings.fileinfo.User.length ? true : false);
						}
						jsonResponse.modifyAuthorityWeblink($this, settings.fileinfo.id, 1, mode);
					}
				}
				if (settings.readOnly2) {
					settings.selector.box6.auth.addClass('off');
				} else {
					settings.selector.box6.auth.removeClass('off');
				}
				settings.handle.changeMode.apply($this, [type]);
			} else if (isRequestAuthority) {
				settings.selector.box6.add.children('h3').text(LanguagePack.SHARE_REQUEST_ADD_STR);
				settings.changetext = true;
				if (settings.auth != 0) {
					if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
						var resultcb1 = function () {
							if (checkUser || !stopShare) {
								var popupMessage = new Array();
								popupMessage[0] = LanguagePack.COOPERATION_AUTHENTICATEDFAIL_MSG2;
								var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
									popupMessage: popupMessage
								}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
								popup.create();
								popup.show();
								var $view = $('#popup_message_view');
								$this.cooperation('sendsize', $view.width(), $view.height());
								sendMessageToNative('layoutcomplete');
								return;
							} else {
								setTimeout(resultcb1, 30);
							}
						};
						setTimeout(resultcb1, 30);
					} else {
						var popupMessage = new Array();
						popupMessage[0] = LanguagePack.COOPERATION_AUTHENTICATEDFAIL_MSG2;
						var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
							popupMessage: popupMessage
						}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
						popup.create();
						popup.show();
						var $view = $('#popup_message_view');
						$this.cooperation('sendsize', $view.width(), $view.height());
						return;
					}
				}
				type = 'custom';
				settings.type = 'custom';
				if (settings.readOnly2) {
					settings.selector.box6.auth.addClass('off');
				} else {
					settings.selector.box6.auth.removeClass('off');
				}
				settings.handle.changeMode.apply($this, [type]);

				if (settings.fileinfo.reqUser) {
					if (settings.fileinfo.reqUser.length) {
						settings.selector.box6.token_box.children('span.name').remove();
						settings.selector.box6.token_box.parent().trigger('click');
						for (var i = 0; i < settings.fileinfo.reqUser.length; i++) {
							var data = null;
							for (var j = 0; j < settings.fileinfo.User.length; j++) {
								if (settings.fileinfo.reqUser[i].email == settings.fileinfo.User[j].email) {
									data = {
										'id': null,
										'uid': (settings.fileinfo.User[j].userId ? settings.fileinfo.User[j].userId : null),
										'n': (settings.fileinfo.User[j].username ? settings.fileinfo.User[j].username : settings.fileinfo.User[j].email),
										'e': settings.fileinfo.User[j].email
									};
									settings.fileinfo.User[j].exist = true;
									break;
								}
							}
							if (!data) {
								data = addressData.find({
									'e': settings.fileinfo.reqUser[i].email
								});
								if (!data) {
									data = {
										'id': null,
										'uid': (settings.fileinfo.reqUser[i].id ? settings.fileinfo.reqUser[i].id : null),
										'n': (settings.fileinfo.reqUser[i].name ? settings.fileinfo.reqUser[i].name : settings.fileinfo.reqUser[i].email),
										'e': settings.fileinfo.reqUser[i].email
									};
								}
							}

							settings.handle.useradd.apply($this, [data, 1]);
						}
						settings.selector.box6.token_box.children('label').addClass('off');
						var showFocus = function () {
							if ($this.children('.share_popup').is(':visible')) {
								settings.selector.box6.token_box.children('input').trigger('click');
								if (settings.selector.box6.recentlist.children().length) {
									settings.selector.box6.recentlist.parents('.user_addList').hide();
								}
							} else {
								setTimeout(showFocus, 100);
							}
						};
						showFocus();
					}
				}
			} else {
				if (settings.fileinfo.publicAuthority == 0) {
					if (settings.auth == 2) {
						if (settings.agentType != 2) {
							settings.selector.box6.add.children('.notice').show();
						}
					}
				} else {
					if (settings.auth != 0) {
						if (settings.agentType != 2 && settings.auth == 2) {
							settings.selector.box6.add.children('.notice').show();
						}
					}
					//WGB-1013
					if (settings.log.state == 'start') {
						if (settings.agentType == 0) {
							common.toast(settings.selector.toast, LanguagePack.send_toast_msg);
						} else {
							$this.children('.link_send').find('.shareBox div.weblnk p.copy a').trigger('click');
						}
					}
				}
				if ((settings.auth == 0 && settings.fileinfo.User.length) || settings.auth != 0 /*settings.auth == 2*/ ) {
					settings.type = 'custom';
					type = 'custom';
				}
				else if (settings.auth == 0 && settings.fileinfo.publicAuthority) {
					if (settings.fileinfo.publicAuthority == 1) {
						settings.type = 'read';
						type = 'read';
						//WGB-1013
						// if (settings.log.state == 'start' && sync) {
						// 	if (settings.agentType == 0) {
						// 		common.toast(settings.selector.toast, LanguagePack.send_toast_msg);
						// 	} else {
						// 		$this.children('.link_send').find('.shareBox div.weblnk p.copy a').trigger('click');
						// 	}
						// }
					} else {
						settings.type = 'edit';
						type = 'edit';
					}
				} else {
					if (settings.log.state == 'start') {
						if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
							var resultcb = function () {
								if (stopShare) {
									var $view = $('#popup_message_view');
									$this.cooperation('sendsize', $view.width(), $view.height());
									sendMessageToNative('layoutcomplete');
									return;
								} else {
									if (checkUser /*&& checkFile*/ ) {
										jsonResponse.modifyAuthorityWeblink($this, settings.fileinfo.id, 1, false);
									} else {
										setTimeout(resultcb, 30);
									}
								}
							};
							setTimeout(resultcb, 30);
							return;
						} else {
							jsonResponse.modifyAuthorityWeblink($this, settings.fileinfo.id, 1, false);
							return;
						}
					} else {
						settings.type = 'make';
						type = 'make';
					}
				}

				if (settings.readOnly2) {
					settings.selector.box6.auth.addClass('off');
				} else {
					settings.selector.box6.auth.removeClass('off');
				}

				if (settings.self && settings.type != 'custom') {
					type = 'custom';
					settings.type = 'custom';
				}
				settings.handle.changeMode.apply($this, [type]);
			}

			if (settings.log.state == 'start') {
				//logTracking
				var webData = $LOGMODEL.getData();
				webData['ti'].t = LogType.tracking.page;
				webData['obj'].dp = settings.log.dp;
				if (settings.type == "weblink") {
					webData['obj'].dt = "CopyShareLink";
				} else if (settings.type == "custom") {
					webData['obj'].dt = "ShareCommon.setting";
					if (settings.fileinfo.publicAuthority == 0) {
						$.extend(webData, {
							'cobj': {
								'setting': 1
							}
						});
					} else if (settings.fileinfo.publicAuthority == 1) {
						$.extend(webData, {
							'cobj': {
								'setting': 2
							}
						});
					} else if (settings.fileinfo.publicAuthority == 2) {
						$.extend(webData, {
							'cobj': {
								'setting': 3
							}
						});
					}

				} else if (settings.type == "read") {
					webData['obj'].dt = "ShareCommon";
					$.extend(webData, {
						'cobj': {
							'setting': 2
						}
					});
				} else if (settings.type == "edit") {
					webData['obj'].dt = "ShareCommon";
					$.extend(webData, {
						'cobj': {
							'setting': 3
						}
					});
				} else if (settings.type == "make") {
					webData['obj'].dt = "ShareCommon";
				}
				$LOGMODEL.sendData(webData);
			}
			settings.log.state = null;

			if ($this.css('display') == 'none') {
				/*if(settings.type == 'custom' || settings.type == 'read' || settings.type == 'edit') {*/
				if (settings.type != 'weblink') {
					if (!settings.agent || (settings.agent && settings.isPcHome) && !$this.hasClass('allowScroll')) {
						$this.css('margin-top', '0');
						$this.addClass('allowScroll');
						$this.prepend($('<div class="allowScrollMargin"></div>'));
					}
					$('body').append($this);

					if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
						var resultcb = function () {
							if (stopShare) {
								var $view = $('#popup_message_view');
								$this.cooperation('sendsize', $view.width(), $view.height());
								sendMessageToNative('layoutcomplete');
								return;
							} else {
								if (checkUser /*&& checkFile*/ ) {
									layout.dim.create();
									$this.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
									sendMessageToNative('layoutcomplete');
								} else {
									setTimeout(resultcb, 30);
								}
							}
						};
						setTimeout(resultcb, 30);
					} else {
						layout.dim.create();
						$this.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
					}
				} else {
					if (settings.appendLi) {
						if ($this.hasClass('allowScroll')) {
							$this.removeClass('allowScroll');
							$this.css('margin-top', '100px');
							$this.children('div.allowScrollMargin').remove();
						}

						if (typeof isShowWeblink != 'undefined') {
							isShowWeblink = true;
						}
						
						var top;
						var top2;
						var height = $this.height();
						var height2 = settings.appendLi.height();

						var $listbox;
						if (settings.appendLi.closest('.list_box').length) {
							
							top = top2 = settings.appendLi.prop('offsetTop');
							$listbox = settings.appendLi.closest('.list_box');
							var visibleHeight = $listbox.outerHeight(true);
							var scrollTop = $listbox.scrollTop();
							if (top + height + height2 > scrollTop + visibleHeight) {
								$this.css('top', top2 - height);
							} else {
								$this.css('top', top2 + height2);
							}
						} else if (settings.appendLi.closest('.doc_list').length) {
							top2 = settings.appendLi.prop('offsetTop');
							if ($('#cloud .header').hasClass("sm")) {
								top = top2 + 60;
							} else {
								top = top2 + 254;
							}
							var visibleHeight = $('html').prop('clientHeight');
							var scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;
							if (top + height + height2 > visibleHeight + scrollTop) {
								$this.css('top', top2 - height);
							} else {
								$this.css('top', top2 + height2);
							}
						}

						
						settings.appendLi.parent().children().last().after($this);						
						$('body').bind('click', closeCooper);
						$this.show();
					} else {
						if (!settings.agent || (settings.agent && settings.isPcHome) && !$this.hasClass('allowScroll')) {
							$this.css('margin-top', '0');
							$this.addClass('allowScroll');
							$this.prepend($('<div class="allowScrollMargin"></div>'));
						}
						$('body').addClass('noscroll');
						$this.css({
							'top': 0,
							'left': 0
						});

						$('body').append($this);
						layout.dim.create();
						$this.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
					}
					if (settings.type == 'weblink' && settings.agentType) {
						$this.children('.copy').find('.shareBox div.weblnk p.copy a').trigger('click');
					}
				}

				inviteList.a_get(function () {
					var list = inviteList.get();
					if (JSON.stringify(settings.inviteData) != JSON.stringify(list)) {
						settings.inviteData = list;
						settings.handle.setrecentinvitedlist.apply($this, []);
					}
				}, function (res) {});
			}
		},
		//							GMX-5319
		/* setShareFileInfoMulti  start  */
		'setShareFileInfoMulti': function (fileInfo, change, sync) {

			var $this = this;
			var settings = $this.data('settings');

			var isWeblinkRequest = false;
			var isRequestAuthority = false;
			var isSync = false;
			var type = '';
			var fileinfoNew_ = [];
			var fileinfoORG = settings.fileinfo;
			if ($('#loading_bar').length) {
				$('#loading_bar').remove();
			}
			settings.editcount = 0;
			if (settings.type == 'weblink') {
				isWeblinkRequest = true;
			} else if (settings.type == 'reqAuth') {
				isRequestAuthority = true;
			}

			if ($this.children('.convert_popup2').is(':visible')) {
				if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
					settings.agentfileinfo = fileInfo;
					sendMessageToNative('createfile', getCooperationFileInfo());
				}
				if (settings.type == 'custom' || settings.type == 'default') {
					settings.handle.changeModeMulti.apply($this, ['clear']);
				}
				settings.selector.toast.hide();
			}
			// hwp check
			if (settings.synccb && sync) {
				for (var i = 0; i < fileInfo.works.length; i++) {
					settings.synccb.call(this, fileInfo.works[i].fileInfo.id);
				}
			}

			if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
				if (typeof settings.fileinfo.workid != 'undefined' && settings.fileinfo.workid != fileInfo.works.id) {
					settings.agentfileinfo = fileInfo;
					if (fileInfo.works.id) {
						sendMessageToNative('sharecooperation');
					} else {
						sendMessageToNative('nosharecooperation');
					}
				}
			}

			if (settings.isClose == '1') {
				return;
			}

			settings.auth = -1;
			settings.fileinfo.publicAuthority = 0;
			settings.fileinfo.customMode = 0;
			settings.externalAuthority = 0;

			if (fileInfo.works.length) {
				//						settings.fileinfoNew = [];
				settings.fileinfo = [];
			}

			var readOnly2Cnt = 0;
			var supportedExtension = '';

			for (var i = 0; i < fileInfo.works.length; i++) {
				if (fileInfo.works[i].fileInfo.ownerId == settings.id) {
					settings.auth = 0;
					if ($USERINFO.getData('UNVERIFIED')) {
						unverifyShareMsg();
						return;
					}

					/*						if(settings.agent && !settings.isPcHome && settings.agentType == 2) {

											} else {
												if($USERINFO.getData('UNVERIFIED')) {
													unverifyShareMsg();
													return;
												}
											}*/
				} else {
					for (var j = 0; j < fileInfo.attendanceList.length; j++) {
						if (fileInfo.attendanceList[j].userId && settings.id == fileInfo.attendanceList[j].userId) {
							settings.auth = fileInfo.attendanceList[j].authority;
							break;
						}
					}
				}

				fileinfoNew_.id = fileInfo.works[i].fileInfo.id;
				fileinfoNew_.size = fileInfo.works[i].fileInfo.size;
				fileinfoNew_.name = fileInfo.works[i].fileInfo.name;
				fileinfoNew_.isPotype = false;
				fileinfoNew_.workid = null;
				settings.owner = fileInfo.works[i].owner;
				fileinfoNew_.shared = 0;

				var index = fileinfoNew_.name.lastIndexOf(".");
				var str = fileinfoNew_.name.substr(0, index);
				fileinfoNew_.type = fileinfoNew_.name.substr(index + 1, fileinfoNew_.name.length).toLowerCase();

				if (fileinfoNew_.type == 'docx' || fileinfoNew_.type == 'pptx' || fileinfoNew_.type == 'xlsx') {
					supportedExtension += (supportedExtension == '' ? '' : ',') + fileinfoNew_.type;
				}

				//$this.find('.convert_popup .box dl dd span').text(fileinfoNew_.type);

				if (fileInfo.works[i].shared) {
					fileinfoNew_.shared = fileInfo.works[i].shared;
				}

				if (fileinfoNew_.type == 'slide' || fileinfoNew_.type == 'sheet' || fileinfoNew_.type == 'word') {
					fileinfoNew_.isPotype = true;
				}

				var support = ["docx", "pptx", "xlsx", "hwp"];
				// if (common.checkHwpWrite()) {
				// 	hwpWrite = true;
				// } else {
				// 	hwpWrite = false;
				// }

				// if (typeof hwpWrite != 'undefined' && hwpWrite) {
				// 	support.push('hwp');
				// }
				if (support.contains(fileinfoNew_.type) || fileinfoNew_.isPotype) {
					settings.readOnly2 = false;
				} else {
					readOnly2Cnt++;
					settings.readOnly2 = true;
				}

				if (fileInfo.works[i].id) {
					fileinfoNew_.workid = fileInfo.works[i].id;
					fileinfoNew_.publicAuthority = fileInfo.works[i].publicAuthority ? fileInfo.works[i].publicAuthority : 0;
					if (fileInfo.works[i].customMode) {
						fileinfoNew_.customMode = 1;
					}
				}
				if (fileInfo.works[i].shareDeniedReason) {
					settings.externalAuthority = fileInfo.works[i].shareDeniedReason;
				}

				if (!settings.owner) {
					var owner_data_set = {
						'id': fileInfo.works[i].fileInfo.ownerId,
						'email': (settings.id == fileInfo.works[i].fileInfo.ownerId) ? settings.email : '',
						'name': fileInfo.works[i].fileInfo.ownerName
					};
					settings.owner = owner_data_set;
				}
				var _fileinfoNew = {
					'id': fileinfoNew_.id,
					'size': fileinfoNew_.size,
					'name': fileinfoNew_.name,
					'isPotype': fileinfoNew_.isPotype,
					'workid': fileinfoNew_.workid,
					'shared': fileinfoNew_.shared,
					'type': fileinfoNew_.type,
					'publicAuthority': fileinfoNew_.publicAuthority,
					'customMode': fileinfoNew_.customMode,
					'ownerId': fileInfo.works[i].fileInfo.ownerId,
				};
				settings.fileinfo.push(_fileinfoNew);
				fileinfoNew_ = [];
				_fileinfoNew = [];
			}

			$this.find('.convert_popup .box dl dd span').text(supportedExtension);

			if (settings.readOnly2 == false && fileInfo.works.length == readOnly2Cnt) settings.readOnly2 = true;

			var url = '';
			var copy_textarea = '';
			if (location.host == "pcofficewebview.polarisoffice.com" || location.host == "polarisoffice.com" || location.host == "www.polarisoffice.com") {
				url = location.protocol + '//' + 'www.polarisoffice.com';
			} else if (location.host == "verify-pcview.polarisoffice.com") {
				url = location.protocol + '//' + 'verifycloud.polarisoffice.com';
			} else if (location.host == "vf-ca-pcview.polarisoffice.com") {
				url = location.protocol + '//' + 'vf-ca-cloud.polarisoffice.com';
			} else {
				url = location.protocol + '//' + location.host;
			}

			//					url += '/d/' + $.encodeBase62(settings.fileinfo[0].id.toString());

			if (settings.fileinfo.length > 1) {
				for (var i = 0; i < settings.fileinfo.length; i++) {
					var fileName = settings.fileinfo[i].name.toString();
					var fileType = fileName.substring(fileName.lastIndexOf(".") + 1).toLowerCase();
					if (fileType == 'slide' || fileType == 'sheet' || fileType == 'word') {
						fileName = fileName.substr(0, fileName.lastIndexOf("."));
					}
					copy_textarea += (fileName + '\r\n');
					copy_textarea += (url + '/d/' + $.encodeBase62(settings.fileinfo[i].id.toString()) + (i < settings.fileinfo.length - 1 ? '\r\n\r\n' : ''));
				}
				$this.find('.share_popup .shareBox div.weblnk p.copy textarea').val(copy_textarea);
			} else if (settings.fileinfo.length > 0) {
				copy_textarea = url + '/d/' + $.encodeBase62(settings.fileinfo[0].id.toString());
				/*var url = location.protocol + '//' + location.host + '/d/' + $.encodeBase62(settings.fileinfo.id.toString());*/
				$this.find('.share_popup .shareBox div.weblnk p.copy textarea').val(copy_textarea);
			}


			if (settings.externalAuthority == 1) {
				if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
					var resultcb2 = function () {
						if (checkUser || !stopShare) {
							var popupMessage = new Array();
							popupMessage[0] = LanguagePack.COOPERATION_AUTHENTICATEDFAIL_MSG5;
							var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
								popupMessage: popupMessage
							}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
							popup.create();
							popup.show();
							var $view = $('#popup_message_view');
							$this.cooperation('sendsize', $view.width(), $view.height());
							sendMessageToNative('layoutcomplete');
							return;
						} else {
							setTimeout(resultcb2, 30);
						}
					};
					setTimeout(resultcb2, 30);
				} else {
					var popupMessage = new Array();
					popupMessage[0] = LanguagePack.COOPERATION_AUTHENTICATEDFAIL_MSG5;
					var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
						popupMessage: popupMessage
					}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
					popup.create();
					popup.show();
					var $view = $('#popup_message_view');
					$this.cooperation('sendsize', $view.width(), $view.height());
					return;
				}

			} else if (settings.externalAuthority == 2) {
				if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
					var resultcb2 = function () {
						if (checkUser || !stopShare) {
							var popupMessage = new Array();
							popupMessage[0] = LanguagePack.BUSINESS_FILEMOVE_ERROR;
							var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
								popupMessage: popupMessage
							}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
							popup.create();
							popup.show();
							var $view = $('#popup_message_view');
							$this.cooperation('sendsize', $view.width(), $view.height());
							sendMessageToNative('layoutcomplete');
							return;
						} else {
							setTimeout(resultcb2, 30);
						}
					};
					setTimeout(resultcb2, 30);
				} else {
					var popupMessage = new Array();
					popupMessage[0] = LanguagePack.BUSINESS_FILEMOVE_ERROR;
					var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
						popupMessage: popupMessage
					}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
					popup.create();
					popup.show();
					var $view = $('#popup_message_view');
					$this.cooperation('sendsize', $view.width(), $view.height());
					return;
				}

			} else if (settings.externalAuthority == 3) {
				if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
					var resultcb3 = function () {
						if (checkUser || !stopShare) {
							var popupMessage = new Array();
							popupMessage[0] = LanguagePack.POPUP_SHARENOTALLOWED_ASKOWNER;
							var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
								popupMessage: popupMessage
							}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
							popup.create();
							popup.show();
							var $view = $('#popup_message_view');
							$this.cooperation('sendsize', $view.width(), $view.height());
							sendMessageToNative('layoutcomplete');
							return;
						} else {
							setTimeout(resultcb3, 30);
						}
					};
					setTimeout(resultcb3, 30);
				} else {
					var popupMessage = new Array();
					popupMessage[0] = LanguagePack.POPUP_SHARENOTALLOWED_ASKOWNER;
					var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
						popupMessage: popupMessage
					}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
					popup.create();
					popup.show();
					var $view = $('#popup_message_view');
					$this.cooperation('sendsize', $view.width(), $view.height());
					return;
				}
			}

			if (JSON.stringify(settings.fileinfo[0].User) != JSON.stringify(fileInfo.attendanceList)) {
				settings.fileinfo[0].User = [];
				settings.fileinfo[0].User = fileInfo.attendanceList;
				settings.handle.setUser.apply(settings.selector.box6.userlist, [{
					'user': settings.fileinfo[0].User,
					'change': true,
				}]);
				if (settings.selector.box6.init.hasClass('userautochange')) {
					settings.selector.box6.init.removeClass('userautochange');
				}
			} else {
				settings.handle.setUser.apply(settings.selector.box6.userlist, [{
					'user': settings.fileinfo[0].User,
					'change': false
				}]);
			}

			settings.realid = true;

			var publicAuthority = null;
			for (var i = 0; i < settings.fileinfo.length; i++) {
				if (publicAuthority == null || settings.fileinfo[i].publicAuthority < publicAuthority) {
					publicAuthority = settings.fileinfo[i].publicAuthority;
				}
			}

			if (settings.fileinfo[0].workid && !publicAuthority && !settings.fileinfo[0].User.length && !settings.auth) {
				settings.realid = false;
			}
			if (publicAuthority) {
				var img = new Image();
				img.src = location.protocol + '//' + location.host + GET_WEBLINK_THUMBNAIL + settings.fileinfo[0].id.toString();
			}

			settings.selector.box6.add.children('.notice').hide();

			if (isWeblinkRequest) {
				type = 'weblink';
				settings.type = 'weblink';
				if (publicAuthority == 0) {
					if (settings.auth == 0) {
						var mode = settings.fileinfo[0].customMode;
						if (!mode) {
							mode = (settings.fileinfo[0].User.length ? true : false);
						}
						jsonResponse.modifyAuthorityWeblink($this, settings.fileinfo[0].id, 1, mode);
					}
				}
				if (settings.readOnly2) {
					settings.selector.box6.auth.addClass('off');
				} else {
					settings.selector.box6.auth.removeClass('off');
				}
				settings.handle.changeModeMulti.apply($this, [type]);
			} else if (isRequestAuthority) {
				if (settings.auth != 0) {
					if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
						var resultcb1 = function () {
							if (checkUser || !stopShare) {
								var popupMessage = new Array();
								popupMessage[0] = LanguagePack.COOPERATION_AUTHENTICATEDFAIL_MSG2;
								var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
									popupMessage: popupMessage
								}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
								popup.create();
								popup.show();
								var $view = $('#popup_message_view');
								$this.cooperation('sendsize', $view.width(), $view.height());
								sendMessageToNative('layoutcomplete');
								return;
							} else {
								setTimeout(resultcb1, 30);
							}
						};
						setTimeout(resultcb1, 30);
					} else {
						var popupMessage = new Array();
						popupMessage[0] = LanguagePack.COOPERATION_AUTHENTICATEDFAIL_MSG2;
						var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
							popupMessage: popupMessage
						}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
						popup.create();
						popup.show();
						var $view = $('#popup_message_view');
						$this.cooperation('sendsize', $view.width(), $view.height());
						return;
					}
				}
				type = 'custom';
				settings.type = 'custom';
				if (settings.readOnly2) {
					settings.selector.box6.auth.addClass('off');
				} else {
					settings.selector.box6.auth.removeClass('off');
				}
				settings.handle.changeModeMulti.apply($this, [type]);

				if (settings.fileinfo[0].reqUser) {
					if (settings.fileinfo[0].reqUser.length) {
						settings.selector.box6.token_box.parent().trigger('click');
						for (var i = 0; i < settings.fileinfo[0].reqUser.length; i++) {
							var data = null;
							for (var j = 0; j < settings.fileinfo[0].User.length; j++) {
								if (settings.fileinfo[0].reqUser[i].email == settings.fileinfo[0].User[j].email) {
									data = {
										'id': null,
										'uid': (settings.fileinfo[0].User[j].userId ? settings.fileinfo[0].User[j].userId : null),
										'n': (settings.fileinfo[0].User[j].username ? settings.fileinfo[0].User[j].username : settings.fileinfo[0].User[j].email),
										'e': settings.fileinfo[0].User[j].email
									};
									settings.fileinfo[0].User[j].exist = true;
									break;
								}
							}
							if (!data) {
								data = addressData.find({
									'e': settings.fileinfo[0].reqUser[i].email
								});
								if (!data) {
									data = {
										'id': null,
										'uid': (settings.fileinfo[0].reqUser[i].id ? settings.fileinfo[0].reqUser[i].id : null),
										'n': (settings.fileinfo[0].reqUser[i].name ? settings.fileinfo[0].reqUser[i].name : settings.fileinfo[0].reqUser[i].email),
										'e': settings.fileinfo[0].reqUser[i].email
									};
								}
							}

							settings.handle.useradd.apply($this, [data, 1]);
						}
						settings.selector.box6.token_box.children('label').addClass('off');
						var showFocus = function () {
							if ($this.children('.share_popup').is(':visible')) {
								settings.selector.box6.token_box.children('input').trigger('click');
								if (settings.selector.box6.recentlist.children().length) {
									settings.selector.box6.recentlist.parents('.user_addList').hide();
								}
							} else {
								setTimeout(showFocus, 100);
							}
						};
						showFocus();
					}
				}
			} else {
				if (publicAuthority == 0) {
					if (settings.auth == 2) {
						if (settings.agentType != 2) {
							settings.selector.box6.add.children('.notice').show();
						}
					}
				} else {
					if (settings.auth != 0) {
						if (settings.agentType != 2 && settings.auth == 2) {
							settings.selector.box6.add.children('.notice').show();
						}
					}
				}

				var isNotShared = false;
				var publicAuthority_arr_check = false; //공유가 된것인지 체크
				for (var i = 0; i < settings.fileinfo.length; i++) {
					if (typeof settings.fileinfo[i].publicAuthority == "undefined" && change) {
						if (publicAuthority_arr_check == false) {
							publicAuthority_arr_check = true;
						}
					}
					if (settings.fileinfo[i].publicAuthority == 0) isNotShared = true;
				}

				if ((settings.auth == 0 && settings.fileinfo[0].User.length) || (settings.auth != 0 && settings.fileinfo.length < 2) /*settings.auth == 2*/ ) {
					settings.type = 'custom';
					type = 'custom';
				}
				/*else if(settings.auth == 1) {
						settings.type = 'readonly';
						type = 'readonly';
					} */
				// publicAuthority가 undefined 아니면 공유되어 있는것임
				else if ((settings.auth == 0 && !publicAuthority_arr_check && !isNotShared) || (settings.auth != 0 && settings.fileinfo.length > 1)) { //publicAuthority 인경우 --> 모두 일경우만
					if (publicAuthority == 0 || (publicAuthority == 1 && !publicAuthority_arr_check)) {
						settings.type = 'read';
						type = 'read';
						if (settings.log.state == 'start' && sync) {
							if (settings.agentType == 0) {
								common.toast(settings.selector.toast, LanguagePack.send_toast_msg);
							} else {
								$this.children('.link_send').find('.shareBox div.weblnk p.copy a').trigger('click');
							}
						}
					} else if (publicAuthority == 2) {
						settings.type = 'edit';
						type = 'edit';
					} else {
						settings.type = 'make';
						type = 'make';
					}
				} else {
					if (settings.log.state == 'start') {
						var fileid_ = [];
						var fileidForMulti_ = [];
						var fileidNoLinkForMulti_ = [];
						for (var i = 0; i < settings.fileinfo.length; i++) {
							fileid_.push(settings.fileinfo[i].id);
							if (settings.fileinfo[i].workid == null || (settings.fileinfo[i].publicAuthority != 1 && settings.fileinfo[i].publicAuthority != 2)) {
								if (settings.fileinfo[i].ownerId != settings.id) {
									fileidForMulti_.push(settings.fileinfo[i]);
								} else {
									fileidNoLinkForMulti_.push(settings.fileinfo[i].id);
								}
							} else {
								fileidForMulti_.push(settings.fileinfo[i]);
							}
						}
						if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
							var resultcb = function () {
								if (stopShare) {
									var $view = $('#popup_message_view');
									$this.cooperation('sendsize', $view.width(), $view.height());
									sendMessageToNative('layoutcomplete');
									return;
								} else {
									if (checkUser /*&& checkFile*/ ) {
										jsonResponse.modifyAuthorityWeblinkMulti(this, fileid_, 1, false);
										//											jsonResponse.modifyAuthorityWeblink($this, settings.fileinfo.id, 1, false);
									} else {
										setTimeout(resultcb, 30);
									}
								}
							};
							setTimeout(resultcb, 30);
							return
						} else {
							jsonResponse.modifyAuthorityWeblinkMulti(this, fileidNoLinkForMulti_, 1, false, null, fileidForMulti_);
							//jsonResponse.modifyAuthorityWeblinkMulti(this, fileid_, 1, false);
							//								jsonResponse.modifyAuthorityWeblink($this, settings.fileinfo.id, 1, false);
							return;
						}
					} else {
						settings.type = 'make';
						type = 'make';
					}
				}

				if (settings.readOnly2) {
					settings.selector.box6.auth.addClass('off');
				} else {
					settings.selector.box6.auth.removeClass('off');
				}

				if (settings.self && settings.type != 'custom') {
					type = 'custom';
					settings.type = 'custom';
				}

				settings.handle.changeModeMulti.apply($this, [type]);
			}

			if (settings.log.state == 'start') {
				//logTracking
				var webData = $LOGMODEL.getData();
				webData['ti'].t = LogType.tracking.page;
				webData['obj'].dp = settings.log.dp;
				if (settings.type == "weblink") {
					webData['obj'].dt = "CopyShareLink";
				} else if (settings.type == "custom") {
					webData['obj'].dt = "ShareCommon.setting";
					if (settings.fileinfo[0].publicAuthority == 0) {
						$.extend(webData, {
							'cobj': {
								'setting': 1
							}
						});
					} else if (settings.fileinfo[0].publicAuthority == 1) {
						$.extend(webData, {
							'cobj': {
								'setting': 2
							}
						});
					} else if (settings.fileinfo[0].publicAuthority == 2) {
						$.extend(webData, {
							'cobj': {
								'setting': 3
							}
						});
					}

				} else if (settings.type == "read") {
					webData['obj'].dt = "ShareCommon";
					$.extend(webData, {
						'cobj': {
							'setting': 2
						}
					});
				} else if (settings.type == "edit") {
					webData['obj'].dt = "ShareCommon";
					$.extend(webData, {
						'cobj': {
							'setting': 3
						}
					});
				} else if (settings.type == "make") {
					webData['obj'].dt = "ShareCommon";
				}
				$LOGMODEL.sendData(webData);
			}
			settings.log.state = null;

			if (!$this.is(':visible')) {
				/*if(settings.type == 'custom' || settings.type == 'read' || settings.type == 'edit') {*/
				if (settings.type != 'weblink') {
					if (!settings.agent || (settings.agent && settings.isPcHome) && !$this.hasClass('allowScroll')) {
						$this.css('margin-top', '0');
						$this.addClass('allowScroll');
						$this.prepend($('<div class="allowScrollMargin"></div>'));
					}
					$('body').append($this);

					if (settings.agent && !settings.isPcHome && settings.agentType == 2) {
						var resultcb = function () {
							if (stopShare) {
								var $view = $('#popup_message_view');
								$this.cooperation('sendsize', $view.width(), $view.height());
								sendMessageToNative('layoutcomplete');
								return;
							} else {
								if (checkUser /*&& checkFile*/ ) {
									layout.dim.create();
									$this.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
									sendMessageToNative('layoutcomplete');
								} else {
									setTimeout(resultcb, 30);
								}
							}
						};
						setTimeout(resultcb, 30);
					} else {
						layout.dim.create();
						$this.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
					}
				} else {
					if (settings.appendLi) {
						if ($this.hasClass('allowScroll')) {
							$this.removeClass('allowScroll');
							$this.css('margin-top', '100px');
							$this.children('div.allowScrollMargin').remove();
						}

						if (typeof isShowWeblink != 'undefined') {
							isShowWeblink = true;
						}
						var top;
						var top2;
						var height = $this.height();
						var height2 = settings.appendLi.height();

						var $listbox;
						if (settings.appendLi.closest('.list_box').length) {
							top = top2 = settings.appendLi.prop('offsetTop');
							$listbox = settings.appendLi.closest('.list_box');
							var visibleHeight = $listbox.outerHeight(true);
							var scrollTop = $listbox.scrollTop();
							if (top + height + height2 > scrollTop + visibleHeight) {
								$this.css('top', top2 - height);
							} else {
								$this.css('top', top2 + height2);
							}
						} else if (settings.appendLi.closest('.doc_list').length) {
							top2 = settings.appendLi.prop('offsetTop');
							if ($('#cloud .header').hasClass("sm")) {
								top = top2 + 60;
							} else {
								top = top2 + 254;
							}
							var visibleHeight = $('html').prop('clientHeight');
							var scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;
							if (top + height + height2 > visibleHeight + scrollTop) {
								$this.css('top', top2 - height);
							} else {
								$this.css('top', top2 + height2);
							}
						}

						settings.appendLi.parent().children().last().after($this);
						$('body').bind('click', closeCooper);
						$this.show();
					} else {
						if (!settings.agent || (settings.agent && settings.isPcHome) && !$this.hasClass('allowScroll')) {
							$this.css('margin-top', '0');
							$this.addClass('allowScroll');
							$this.prepend($('<div class="allowScrollMargin"></div>'));
						}
						$('body').addClass('noscroll');
						$this.css({
							'top': 0,
							'left': 0
						});

						$('body').append($this);
						layout.dim.create();
						$this.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
					}
					if (settings.type == 'weblink' && settings.agentType) {
						$this.children('.copy').find('.shareBox div.weblnk p.copy a').trigger('click');
					}
				}

				inviteList.a_get(function () {
					var list = inviteList.get();
					if (JSON.stringify(settings.inviteData) != JSON.stringify(list)) {
						settings.inviteData = list;
						settings.handle.setrecentinvitedlist.apply($this, []);
					}
				}, function (res) {});
			}
		},
		/* setShareFileInfoMulti  end  */



		'close': function () {
			var $this = this;
			var settings = $this.data('settings');
			if ($this.parent('body').length == 0) {
				$this.children('.make').children('.shareBox').children('.box').children('a.btn_close').trigger('click');
			}
		},
		'getPosition': function () {
			var $this = this;
			var settings = $this.data('settings');
			//							GMX-5319
			if (multiShare) {
				if ($this.children('.convert_popup').is(':visible') || $this.children('.convert_popup2').is(':visible') || $this.children('.custom').is(':visible') || $this.children('.request').is(':visible')) {
					return 'center';
				} else {
					return 'init';
				}
			} else {
				if ($this.children('.convert_popup').is(':visible') || $this.children('.convert_popup2').is(':visible') || $this.children('.custom').is(':visible') || $this.children('.request').is(':visible')) {
					return 'center';
				} else {
					return 'init';
				}
			}
		},
		'checkSize': function (type) {
			var $this = this;
			var settings = $this.data('settings');

			if (!$this.is(':visible')) {
				return;
			}

			if ($this.hasClass('allowScroll')) {
				if (settings.type != 'weblink' && $this.css('left') != 0) {
					$('body').addClass('noscroll');
					$this.css({
						'top': 0,
						'left': 0
					});
					return;
				}
				return;
			}

			var top = 100;
			var height = $this.height();
			var width = $this.width();
			if ($this.children('.link_send').is(':visible')) {
				if (settings.selector.box5.changebox.parent().is(':visible')) {
					if (height < 160 + settings.selector.box5.changebox.parent().height()) {
						height = 160 + settings.selector.box5.changebox.parent().height();
					}
				}
			}
			/*else if(settings.selector.convert.is(':visible')) {
					width = settings.selector.convert.width();
				}*/
			/*if(settings.agentType == 2 && !settings.isPcHome) {
				height = height + 10;
				width = width + 10;
			}	*/

			if (settings.agent && !settings.isPcHome) {
				if (settings.size.height == height && settings.size.width == width) {
					return;
				}
				console.log('width: ' + width + ', height: ' + height);
				settings.size.height = height;
				settings.size.width = width;

				if (settings.HeightEvent) {
					sendMessageToNative('changeheight', getCooperationPopupHeight());
				} else {
					sendMessageToNative('changesize', getCooperationPopupSize());
				}
			} else {
				var $window = $(window);
				if (settings.type == 'weblink') {
					return;
				}
				if (top + height > $window.height()) {
					$this.css({
						'position': 'absolute',
						'top': $window.scrollTop() + 'px',
						'left': $window.scrollLeft() + 'px'
					});
				} else {
					$this.css({
						'position': 'fixed',
						'top': 0,
						'left': 0
					});
				}
			}
		},
		'sendsize': function (width, height) {
			var $this = this;
			var settings = $this.data('settings');

			if (settings.agent && !settings.isPcHome) {
				var $view = $('.popup_message_view_align');

				$view.css({
					'left': 'auto',
					'margin-left': 0,
					'width': '100%'
				});

				$view.css({
					'margin-top': '-' + $('#popup_message_view').height() / 2 + 'px'
				});
				settings.size.height = $('#popup_message_view').height();
				settings.size.width = $('#popup_message_view').width();

				if (settings.HeightEvent) {
					sendMessageToNative('changeheight', getCooperationPopupHeight());
				} else {
					sendMessageToNative('changesize', getCooperationPopupSize());
				}
			}
		},
		'getSize': function () {
			var $this = this;
			var settings = $this.data('settings');
			if (settings != null && settings.size != null) return JSON.stringify(settings.size);
			else {
				if ($('#changesize').length) {
					var $view = $('.popup_message_view_align');

					$view.css({
						'left': 'auto',
						'margin-left': 0,
						'width': '100%'
					});
					return JSON.stringify($('#changesize').data('settings').size);
				} else return;
			}
		},
		'getClose': function () {
			var $this = this;
			var settings = $this.data('settings');
			return settings.isClose;
		},
		'getinfo': function () {
			var $this = this;
			var settings = $this.data('settings');
			return JSON.stringify(settings.agentfileinfo);
		},
		'setemails': function (emails) {
			var $this = this;
			var settings = $this.data('settings');
			var count = 0;
			var isContain = false;
			var isOwner = false;
			var isMySelf = false;

			if (settings.type == 'request') {
				for (var i = 0; i < emails.length; i++) {
					var data = null;
					var email = emails[i].email.toLowerCase();
					if (settings.email.toLowerCase() == email) {
						data = true;
						isMySelf = true;
					} else if (settings.owner.email.toLowerCase() == email) {
						data = true;
						isOwner = true;
					} else if (settings.selector.box8.token_box.children('#invite_' + emails[i].email.replace(/@/g, '\\@').replace(/\./g, '\\.').replace(/\+/g, '\\+').replace(/\-/g, '\\-')).length) {
						data = true;
						isContain = true;
					}
					if (!data) {
						data = addressData.find({
							'e': emails[i].email
						});
						if (!data) {
							data = {
								'id': null,
								'uid': (emails[i].id ? emails[i].id : null),
								'n': (emails[i].name ? emails[i].name : emails[i].email),
								'e': emails[i].email
							};
						}
						count++;
						settings.handle.useradd.apply($this, [data, 1]);
					}
				}
				if (count) {
					settings.selector.box8.token_box.children('label').addClass('off');
					settings.selector.box8.init.children().addClass('focus');
					$this.cooperation('checkSize');
				} else {
					if (isOwner && !isContain) {
						common.toast(settings.selector.toast, LanguagePack.ALREADY_AUTHORITY);
					} else if (isMySelf && !isContain) {
						common.toast(settings.selector.toast, LanguagePack.NOTSHAREUSER);
					} else {
						common.toast(settings.selector.toast, LanguagePack.SHARE_PEOPLEADDERRORMSG);
					}
				}
			} else {
				for (var i = 0; i < emails.length; i++) {
					var data = null;
					var email = emails[i].email.toLowerCase();
					if (settings.email.toLowerCase() == email) {
						data = true;
						isMySelf = true;
					} else if (settings.owner.email.toLowerCase() == email) {
						data = true;
						isOwner = true;
					} else if (settings.selector.box6.token_box.children('#invite_' + emails[i].email.replace(/@/g, '\\@').replace(/\./g, '\\.').replace(/\+/g, '\\+').replace(/\-/g, '\\-')).length) {
						data = true;
						isContain = true;
					}

					/*if(emails[i].email == settings.email) {
						continue;
					}*/

					if (!data) {
						var $member = settings.selector.box6.userlist.children('li.user');
						for (var j = 0; j < $member.length; j++) {
							var data2 = $member.eq(j).data('data');
							if (emails[i].email.toLowerCase() == data2.email.toLowerCase()) {
								data = {
									'id': null,
									'uid': (data2.userId ? data2.userId : null),
									'n': data2.username ? data2.username : data2.email,
									'e': data2.email
								};
								count++;
								settings.handle.useradd.apply($this, [data, 1]);
								break;
							}
						}
					}
					if (!data) {
						data = addressData.find({
							'e': emails[i].email
						});
						if (!data) {
							data = {
								'id': null,
								'uid': (emails[i].id ? emails[i].id : null),
								'n': (emails[i].name ? emails[i].name : emails[i].email),
								'e': emails[i].email
							};
						}
						count++;
						settings.handle.useradd.apply($this, [data, 1]);
					}
				}
				if (count) {
					settings.selector.box6.token_box.children('label').addClass('off');
					var showFocus = function () {
						if ($this.children('.share_popup').is(':visible')) {
							settings.selector.box6.token_box.children('input').trigger('click');
							if (settings.selector.box6.recentlist.children().length) {
								settings.selector.box6.recentlist.parents('.user_addList').hide();
							}
						} else {
							setTimeout(showFocus, 100);
						}
					};
					showFocus();
				} else {
					if (isOwner && !isContain) {
						common.toast(settings.selector.toast, LanguagePack.ALREADY_AUTHORITY);
					} else if (isMySelf && !isContain) {
						common.toast(settings.selector.toast, LanguagePack.NOTSHAREUSER);
					} else {
						common.toast(settings.selector.toast, LanguagePack.SHARE_PEOPLEADDERRORMSG);
					}
				}
			}
		},
		'updateAddress': function () {
			if (addressData.complete) {
				addressData.jsonUpateAddress(function (res) {}, function (res) {});
			}
		},
		'readonly': function (readonly) {
			var $this = this;
			var settings = $this.data('settings');
			if (settings) {
				settings.readOnly = readonly;
				settings.readOnly2 = readonly;
			}
		}
	}
	var layout = {
		'dim': {
			'create': function () {
				var $dim = $('#dim');
				if (!$dim.length) {
					$('body').append('<div id="dim" class="dim"></div>');
					return;
				} else {
					$dim.css('z-index', parseInt($dim.css('z-index')) + 1);
				}
			},
			'remove': function () {
				var $dim = $('#dim');
				var zindex = $dim.css('z-index');
				if (zindex == '9') {
					$dim.remove();
				} else {
					$dim.css('z-index', parseInt($dim.css('z-index')) - 1);
				}
			},
			'getZindex': function () {
				var $dim = $('#dim');
				return parseInt($dim.css('z-index'));
			}
		},
		'create': function () {
			var $this = this;
			var settings = $this.data('settings');

			var $toast = $('<p class="try" style="display:none"><span></span></p>');
			var clientType = (navigator.userAgent.indexOf('macdialog') != -1) ? 'mac' : 'win';

			settings.selector.toast = $toast;
			settings.selector.txt_test = $('#Cooperation_txt_test');

			var $box4 = $('<div class="share_popup make">' +
				'<div class="shareBox">' +
				'<div class="box">' +
				'<h2>' + LanguagePack.KEYWORD_MYACTIVITY + '</h2>' +
				'<h3></h3>' //GMX-6957
				+
				'<a href="#" class="btn_close">' + LanguagePack.KEYWORD_CLOSE + '</a>' +
				'<p class="btn_link_make"><a href="#"><span>' + LanguagePack.SHARE_MAKE_LINK + '</span></a></p>' +
				'<p class="txt link_send"><span>' + LanguagePack.SHARE_INVITE_MESSAGE + '</span><a href="#">' + LanguagePack.COOPERATION_DETAIL_SETTING + '</a></p>' +
				'</div>' +
				'</div></div>');

			$box4.children('.shareBox').children('.box').children('a.btn_close').bind('click', events.close);
			$box4.children('.shareBox').children('.box').children('.btn_link_make').children('a').bind('click', events.makeLink);
			$box4.children('.shareBox').children('.box').children('.link_send').children('a').bind('click', events.showCustomMode);

			var link = '';
			var snsShare = ''; //GMX-6957
			if (settings.agentType) {
				if (ischina == "true") {
					link = '<li><a href="#" class="link_04">' + 'QQ' + '</a></li>';
					snsShare = '<a href="#" class="qq">QQ</a>'
				} else {
					if (!isIeBrowser) {
						link = '<li><a href="#" class="link_01">' + 'Facebook' + '</a></li>' +
							'<li><a href="#" class="link_02">' + 'Twitter' + '</a></li>';
						snsShare = '<a href="#" class="facebook">Facebook</a><a href="#" id="twitter_sp" class="twitter">Twitter</a>';
					}
					if (settings.agentType == 2) {
						var agnt = navigator.userAgent.toLowerCase();
						if (agnt.indexOf("mac") >= 0) {
							link += '<li><a href="#" class="link_03">' + 'Mail' + '</a></li>';
						} else {
							link += '<li><a href="#" class="link_03">' + 'Outlook' + '</a></li>';
						}
						snsShare += '<a href="#" class="mail">mail</a>';
					}
				}
			} else {
				if (ischina == "true") {
					link = '<li><a href="#" class="link_03">' + 'E-mail' + '</a></li>' +
						'<li><a href="#" class="link_04">' + 'QQ' + '</a></li>';
					snsShare = '<a href="#" class="mail">mail</a><a href="#" class="qq">QQ</a>'
				} else {
					if (isIeBrowser) {
						link = '<li><a href="#" class="link_03">' + 'E-mail' + '</a></li>';
						snsShare = '<a href="#" class="mail">mail</a>';
					} else {
						link = '<li><a href="#" class="link_01">' + 'Facebook' + '</a></li>' +
							'<li><a href="#" class="link_02">' + 'Twitter' + '</a></li>' +
							'<li><a href="#" class="link_03">' + 'E-mail' + '</a></li>';
						snsShare = '<a href="#" class="facebook">Facebook</a><a href="#" id="twitter_sp" class="twitter">Twitter</a><a href="#" class="mail">mail</a>';
					}
				}
			}

			var link2 = '<li><a href="#" class="link_01">' + LanguagePack.SHARE_PEOPLE + '</a></li>';
			if (settings.agentType == 2) {
				var agnt = navigator.userAgent.toLowerCase();
				if (agnt.indexOf("mac") >= 0) {
					link2 += '<li><a href="#" class="link_03">' + 'Mail' + '</a></li>';
				} else {
					link2 += '<li><a href="#" class="link_03">' + 'Outlook' + '</a></li>';
				}
			}

			var $box5 = $('<div class="share_popup link_send init">' +
				'<div class="shareBox">' +
				'<div class="box">' +
				'<h2>' + LanguagePack.KEYWORD_MYACTIVITY + '</h2>' +
				'<a id="share_popup_close" href="#" class="btn_close">' + LanguagePack.KEYWORD_CLOSE + '</a>' +
				'<dl class="doc_open">' +
				'<dt>' + LanguagePack.SHARE_SEND_LINK + '</dt>' +
				'<dd>'
				/*+ '<ul class="select share">'
					+ '<li class="read"><span>' + LanguagePack.COOPERATION_ENABLE_ANONYMOUS_READ + '</span></li>'
					+ '<li class="edit"><span>' + LanguagePack.COOPERATION_ENABLE_ANONYMOUS_WRITE + '</span></li>'
					+ '<li class="default"><span>' + LanguagePack.COOPERATION_ENABLE_PRIVATE_ACCESSS + '</span></li>'
				+ '</ul>'*/


				+
				'<ul id="share_popup_prechangeauth" class="select mine">' +
				'<li class="read"><a href="#" class="read"><span>' + LanguagePack.COOPERATION_ENABLE_ANONYMOUS_READ + '</span></a></li>' +
				'<li class="edit"><a href="#" class="edit"><span>' + LanguagePack.COOPERATION_ENABLE_ANONYMOUS_WRITE + '</span></a></li>' +
				'<li class="default"><a href="#" class="default grey"><span>' + LanguagePack.COOPERATION_LINK_UNSHARE + '</span></a></li>' +
				'<li class="various"><a href="#" class="various"><span>' + LanguagePack.SHARE_MULTI_VARIOUS_MSG + '</span></a></li>' +
				'</ul>' +
				'<div id="share_popup_changeauth" class="select_box">' +
				'<ul>' +
				'<li class="read"><a class="read"><strong>' + LanguagePack.COOPERATION_ENABLE_ANONYMOUS_READ + '</strong>' + LanguagePack.COOPERATION_ANONYMOUS_READ_MSG + '</a></li>' +
				'<li class="edit"><a class="edit"><strong>' + LanguagePack.COOPERATION_ENABLE_ANONYMOUS_WRITE + '</strong>' + LanguagePack.COOPERATION_ANONYMOUS_WRITE_MSG + '</a></li>' +
				'<li class="default"><a class="default grey"><strong>' + LanguagePack.COOPERATION_LINK_UNSHARE + '</strong>' + LanguagePack.COOPERATION_LINK_UNSHARE_MSG + '</a></li>' +
				'</ul>' +
				'<p class="btn"><a class="ok" href="#">' + LanguagePack.KEYWORD_CONFIRM + '</a><a class="cancel" href="#">' + LanguagePack.KEYWORD_CANCEL + '</a></p>' +
				'</div>'

				//GMX-6957
				+
				'<p id="share_popup_sns" class="btn_share">' + snsShare + '</p>' +
				'<div class="weblnk">' +
				'<fieldset>' +
				'<legend>link</legend>' +
				'<p id="share_popup_weblnk" class="copy">' +
				'<input type="input" value="http://www.polarisoffice.com/a/MXjpMU0" readonly="readonly"><a href="#">' + LanguagePack.KEYWORD_COPY + '</a>'
				//							GMX-5319(multiShare)
				+
				'<textarea readonly="readonly"></textarea><a href="#">' + LanguagePack.KEYWORD_COPY + '</a>' +
				'</p>' +
				'</fieldset>' +
				'</div>' +
				'<div class="location_share"  style="display:none"><label><input type="checkbox" class="docPosShare"><span>' + LanguagePack.DOCPOSSHARE +'<a href="#">info</a></span></label>'+				
					'<ul class="location_share_txt" style="display:none">'+
						'<li>'+ LanguagePack.DOCPOSSHARE_STR01 +'</li>'+
						'<li>'+ LanguagePack.DOCPOSSHARE_STR02 +'<p>' + LanguagePack.DOCPOSSHARE_LINK + '</p></li>'+
						'<li>'+ LanguagePack.DOCPOSSHARE_STR03 +'</li>'+
					'</ul>'+
				'</div>'+
				'<p class="txt notice">' + LanguagePack.COOPERATION_EDITMODE_HELP_MSG + /*LanguagePack.COOPERATION_EDITMODE_HELP_MSG2  +*/ '</p>' +
				'<p class="txt link_send"><span>' + LanguagePack.SHARE_INVITE_MESSAGE + '</span><a id="share_popup_custom" href="#">' + LanguagePack.COOPERATION_DETAIL_SETTING + '</a></p>' +
				'</div>' +
				'</div></div>');

			if (!settings.isPcHome && getCookie('sharebtnHide')) {
				$box5.find('#share_popup_close').remove();
			} else {
				$box5.find('#share_popup_close').bind('click', events.close);
			}

			$box5.find('#share_popup_prechangeauth').bind('click', events.preChangeMode);
			$box5.find('#share_popup_changeauth').children('ul').children('li').bind('click', events.checkChangeMode);
			$box5.find('#share_popup_changeauth').children('p.btn').children('.ok').bind('click', events.afterChangeMode);
			$box5.find('#share_popup_changeauth').children('p.btn').children('.cancel').bind('click', events.cancelChangeMode);
			$box5.find('#share_popup_toogle_sns').bind('click', events.toogle);

			//GMX-6957
			$box5.find('#share_popup_sns').children('a.facebook').bind('click', events.external.sendfacebook);
			$box5.find('#share_popup_sns').children('a.twitter').bind('click', events.external.sendtwitter);
			$box5.find('#share_popup_sns').children('a.mail').bind('click', events.external.sendemail);
			$box5.find('#share_popup_sns').children('a.qq').bind('click', events.external.sendqq);

			$box5.find('#share_popup_sns').children('li').children('a.link_01').bind('click', events.external.sendfacebook);
			$box5.find('#share_popup_sns').children('li').children('a.link_02').bind('click', events.external.sendtwitter);
			$box5.find('#share_popup_sns').children('li').children('a.link_03').bind('click', events.external.sendemail);
			$box5.find('#share_popup_sns').children('li').children('a.link_04').bind('click', events.external.sendqq);
			$box5.find('#share_popup_weblnk').children('input').bind('click', events.select);
			$box5.find('#share_popup_weblnk').children('a').bind('click', events.clip);
			$box5.find('#share_popup_custom').on('click', events.showCustomMode);
			$box5.find('.docPosShare').on('change', events.showDocPos);
			$box5.find('.location_share label span a').on('click', events.showDocPosInfo);
			$box5.find('.location_share_txt a.addCommentShareLink').on('click', events.addCommentShareLink);


			settings.selector.box5 = {};
			settings.selector.box5.changebox = $box5.find('#share_popup_changeauth').children('ul');

			var $box6 = $('<div class="share_popup custom init">' +
				'<div class="inner_dim"></div>' +
				'<div class="shareBox">' +
				'<div id="share_popup_box" class="box">' +
				'<h2>' + LanguagePack.KEYWORD_MYACTIVITY + '</h2>' +
				'<a id="share_popup_close" href="#" class="btn_close">' + LanguagePack.KEYWORD_CLOSE + '</a>' +
				'<dl class="doc_open">' +
				'<dt>' + LanguagePack.SHARE_SEND_LINK + '</dt>' +
				'<dd>'
				/*+ '<ul class="select share">'
					+ '<li class="read"><span>' + LanguagePack.COOPERATION_ENABLE_ANONYMOUS_READ + '</span></li>'
					+ '<li class="edit"><span>' + LanguagePack.COOPERATION_ENABLE_ANONYMOUS_WRITE + '</span></li>'
					+ '<li class="default"><span>' + LanguagePack.COOPERATION_ENABLE_PRIVATE_ACCESSS + '</span></li>'
				+ '</ul>'*/
				+
				'<ul id="share_popup_prechangeauth" class="select mine">' +
				'<li class="read"><a href="#" class="read"><span>' + LanguagePack.COOPERATION_ENABLE_ANONYMOUS_READ + '</span></a></li>' +
				'<li class="edit"><a href="#" class="edit"><span>' + LanguagePack.COOPERATION_ENABLE_ANONYMOUS_WRITE + '</span></a></li>' +
				'<li class="default"><a href="#" class="default"><span>' + LanguagePack.COOPERATION_ENABLE_PRIVATE_ACCESSS + '</span></a></li>' +
				'<span class="transparent"></span>' +
				'</ul>' +
				'<div id="share_popup_changeauth" class="select_box">' +
				'<ul>' +
				'<li class="read"><a class="read"><strong>' + LanguagePack.COOPERATION_ENABLE_ANONYMOUS_READ + '</strong>' + LanguagePack.COOPERATION_ANONYMOUS_READ_MSG + '</a></li>' +
				'<li class="edit"><a class="edit"><strong>' + LanguagePack.COOPERATION_ENABLE_ANONYMOUS_WRITE + '</strong>' + LanguagePack.COOPERATION_ANONYMOUS_WRITE_MSG + '</a></li>' +
				'<li class="default"><a class="default"><strong>' + LanguagePack.COOPERATION_LINK_UNSHARE + ' - ' + LanguagePack.COOPERATION_ENABLE_PRIVATE_ACCESSS + '</strong>' /*+ LanguagePack.COOPERATION_PRIVATE_ACCESSS_MSG*/ + '</a></li>' +
				'</ul>' +
				'<p class="btn"><a class="ok" href="#">' + LanguagePack.KEYWORD_CONFIRM + '</a><a class="cancel" href="#">' + LanguagePack.KEYWORD_CANCEL + '</a></p>' +
				'</div>'
				//GMX-6957 사용자 지정
				+
				'<p id="share_popup_sns" class="btn_share">' + snsShare + '</p>'
				//+ '<dl class="invite sns">'
				//+ '<dt><a id="share_popup_toogle_sns" href="#">sns open</a></dt>'
				//+ '<dd>'
				//	+ '<ul id="share_popup_sns">'
				//		+ link
				//	+ '</ul>'
				//+ '</dd></dl>'
				+
				'</dd></dl>' +
				'<div class="weblnk">' +
				'<fieldset>' +
				'<legend>link</legend>' +
				'<p id="share_popup_weblnk" class="copy">' +
				'<input type="input" value="http://www.polarisoffice.com/a/MXjpMU0" readonly="readonly"><a href="#">' + LanguagePack.KEYWORD_COPY + '</a>' +
				'</p>' +
				'<div class="read">' + LanguagePack.SHARE_READ_MESSAGE + '</div>' +
				'<div class="edit">' + LanguagePack.SHARE_EDIT_MESSAGE + '</div>' +
				'<div class="default">' + LanguagePack.SHARE_PRIVATE_MESSAGE + '</div>' +
				'</fieldset>'+
				'</div>' +
				'<div class="location_share"  style="display:none"><label><input type="checkbox" class="docPosShare"><span>' + LanguagePack.DOCPOSSHARE +'<a href="#">info</a></span></label>'+				
					'<ul class="location_share_txt" style="display:none">'+
						'<li>'+ LanguagePack.DOCPOSSHARE_STR01 +'</li>'+
						'<li>'+ LanguagePack.DOCPOSSHARE_STR02 +'<p>' + LanguagePack.DOCPOSSHARE_LINK + '</p></li>'+
						'<li>'+ LanguagePack.DOCPOSSHARE_STR03 +'</li>'+
					'</ul>'+
				'</div>'+
				'<div class="mode user">' +
				'<div class="user_list">' +
				'<h3 class="mine">' + LanguagePack.KEYWORD_USER + '</h3>' +
				'<h3 class="share">' + LanguagePack.SHARE_ACCESSABLE_USER + '</h3>' +
				'<ul id="share_popup_userlist"></ul>' +
				'</div>'
				//	공유팝업관련								+ '<p class="read_change">'	
				//									+ '모든 사용자를 <em>읽기 가능 ▼</em> (으)로 변경 <a href="#">적용하기</a>'
				//									+ '</p>'
				+
				'<div id="share_popup_add" class="add">' +
				'<h3>' + LanguagePack.SHARE_INVITE_ADDUSER + '<span class="kt_share" style="display:none">' + LanguagePack.KTSHARE_STR1_KT_ONLY + '</span></h3>' +
				'<dl class="invite user">' +
				'<dt><a id="share_popup_address" href="#">address</a></dt>' +
				'<dd><ul id="share_popup_importaddress">' +
				link2 +
				'</ul></dd></dl>' +
				'<fieldset>' +
				'<legend>' + LanguagePack.SHARE_INVITE_ADDUSER + '</legend>' +
				'<div class="token">' +
				'<div id="share_popup_token_box" class="token_box">' +
				'<label for="share_popup_input1">' + LanguagePack.INPUT_INSERT_MSG(clientType) + '</label>' +
				'<input type="text" id="share_popup_input1" size="2" maxlength="60" autocomplete="off">' +
				'</div>' +
				'<div id="share_popup_recentlist" class="user_addList">' +
				'<dl>' +
				'<dt>' + LanguagePack.COOPERATION_RECENT_LIST + '<span><a class="delete" href="#">' + LanguagePack.COOPERATION_RECENT_REMOVE_LIST + '</a><a href="#" class="btn close">' + LanguagePack.KEYWORD_CLOSE + '</a></span></dt>' +
				'<dd><ul></ul></dd></dl>' +
				'</div>' +
				'<ul id="share_popup_searchlist" class="auto_search"></ul>' +
				'</div>' +
				'<p class="textarea"><label for="share_popup_textarea1">' + LanguagePack.WEBLINK_LABEL + '</label><textarea id="share_popup_textarea1"></textarea></p>' +
				'<dl id="share_popup_auth" class="auth">' +
				'<dt>' + LanguagePack.TEAM_AUTHORITY + '</dt>' +
				'<dd>' +
				'<span class="read">' + LanguagePack.COOPERATION_ENABLE_READ + '</span>' +
				'<span class="edit">' + LanguagePack.COOPERATION_ENABLE_WRITE + '</span>' +
				'<ul>' +
				'<li><a class="read" href="#">' + LanguagePack.COOPERATION_ENABLE_READ + '</a></li>' +
				'<li><a class="edit" href="#">' + LanguagePack.COOPERATION_ENABLE_WRITE + '</a></li>' +
				'</ul>' +
				'</dd></dl>' +
				'</fieldset>' +
				'<p class="alert">' + LanguagePack.PRE_CONFIRM_MSG + '</p>' +
				'<p class="txt notice">' + LanguagePack.COOPERATION_EDITMODE_HELP_MSG + /*'<br>' + LanguagePack.COOPERATION_EDITMODE_HELP_MSG2  +*/ '</p>' +
				'</div>' +
				'<span class="depth">' +
				'<a class="read" href="#">' + LanguagePack.COOPERATION_ENABLE_READ + '</a>' +
				'<a class="edit" href="#">' + LanguagePack.COOPERATION_ENABLE_WRITE + '</a>' +
				'<a class="delete" href="#">' + LanguagePack.SHARE_STOP + '</a>' +
				'</span>' +
				'</div>' +
				'<p class="btn btn1">' +
				'<a class="close" href="#">' + LanguagePack.KEYWORD_CLOSE + '</a>' +
				'</p>' +
				'<p class="btn btn2">' +
				'<a class="ok" href="#" style="display: none;">' + LanguagePack.KEYWORD_CONFIRM + '</a>' +
				'<a class="cancel" href="#">' + LanguagePack.KEYWORD_CANCEL + '</a>' +
				'</p>' +
				'<p class="btn btn3">' +
				'<a class="ok" href="#">' + LanguagePack.KEYWORD_CONFIRM + '</a>' +
				'<a class="cancel" href="#">' + LanguagePack.KEYWORD_CANCEL + '</a>' +
				'</p>' +
				'<p class="btn btn4">' +
				'<a class="ok" href="#">' + LanguagePack.COOPERATION_AUTHENTICATED + '</a>' +
				'<a class="cancel" href="#">' + LanguagePack.KEYWORD_CANCEL + '</a>' +
				'</p>' +
				'</div>' +
				'</div></div>');

			if (!settings.isPcHome && getCookie('sharebtnHide')) {
				$box6.find('#share_popup_close').remove();
			} else {
				$box6.find('#share_popup_close').bind('click', events.close);
			}
			$box6.find('#share_popup_prechangeauth').bind('click', events.preChangeMode);
			$box6.find('#share_popup_changeauth').children('ul').children('li').bind('click', events.checkChangeMode);
			$box6.find('#share_popup_changeauth').children('p.btn').children('.ok').bind('click', events.afterChangeMode);
			$box6.find('#share_popup_changeauth').children('p.btn').children('.cancel').bind('click', events.cancelChangeMode);
			$box6.find('#share_popup_toogle_sns').bind('click', events.toogle);

			//GMX-6957
			$box6.find('#share_popup_sns').children('a.facebook').bind('click', events.external.sendfacebook);
			$box6.find('#share_popup_sns').children('a.twitter').bind('click', events.external.sendtwitter);
			$box6.find('#share_popup_sns').children('a.mail').bind('click', events.external.sendemail);
			$box6.find('#share_popup_sns').children('a.qq').bind('click', events.external.sendqq);

			$box6.find('#share_popup_weblnk').children('input').bind('click', events.select);
			$box6.find('#share_popup_weblnk').children('a').bind('click', events.clip);
			$box6.find('#share_popup_address').bind('click', events.toogle);
			$box6.find('#share_popup_importaddress').children('li').children('a.link_01').bind('click', events.appendPeople);
			$box6.find('#share_popup_importaddress').children('li').children('a.link_03').bind('click', events.appendOutlook);
			$box6.find('#share_popup_token_box').parent().bind('click', events.addUser.focus).bind('mousedown', events.prevent);
			$box6.find('#share_popup_input1').bind('keydown', events.addUser.keydown).bind('keypress', events.addUser.keypress)
				.bind('keyup', events.addUser.keyup).bind('blur', events.addUser.blur);
			if (settings.agent) {
				$box6.find('#share_popup_input1').attr('size', 63);
			}
			$box6.find('#share_popup_recentlist').children('dl').children('dt').children('span').children('.delete').bind('click', events.recent.removeall);
			$box6.find('#share_popup_recentlist').children('dl').children('dt').children('span').children('.close').bind('click', events.recent.close);
			$box6.find('#share_popup_auth').children('dd').children('span').bind('click', events.preChangeAuto);
			$box6.find('#share_popup_auth').children('dd').children('ul').children('li').children('a').bind('click', events.afterChangeAuto);
			$box6.find('#share_popup_add').next().children('a').bind('click', events.user.change_authority);
			$box6.find('#share_popup_box').children('p.btn1').children('a').bind('click', events.close);
			$box6.find('#share_popup_box').children('p.btn2').children('a.ok').bind('click', events.share);
			$box6.find('#share_popup_box').children('p.btn2').children('a.cancel').bind('click', events.cancel);
			$box6.find('#share_popup_box').children('p.btn3').children('a.ok').bind('click', events.user.userChangeAuto);
			$box6.find('#share_popup_box').children('p.btn3').children('a.cancel').bind('click', events.user.cancelChangeAuto);
			$box6.find('#share_popup_box').children('p.btn4').children('a.ok').bind('click', events.showReqReshare);
			$box6.find('#share_popup_box').children('p.btn4').children('a.cancel').bind('click', events.close);
			$box6.find('.docPosShare').on('change', events.showDocPos);
			$box6.find('.location_share label span a').on('click', events.showDocPosInfo);
			$box6.find('.location_share_txt a.addCommentShareLink').on('click', events.addCommentShareLink);

			settings.selector.box6 = {};
			settings.selector.box6.init = $box6;
			settings.selector.box6.auth = $box6.find('#share_popup_auth');
			settings.selector.box6.token_box = $box6.find('#share_popup_token_box');
			settings.selector.box6.msg = $box6.find('#share_popup_textarea1');
			settings.selector.box6.add = $box6.find('#share_popup_add');
			settings.selector.box6.userlist = $box6.find('#share_popup_userlist');
			settings.selector.box6.recentlist = $box6.find('#share_popup_recentlist').children('dl').children('dd').children('ul');
			settings.selector.box6.searchlist = $box6.find('#share_popup_searchlist');
			settings.selector.box6.changeauth = settings.selector.box6.add.next();
			settings.selector.box6.changebox = $box6.find('#share_popup_changeauth').children('ul');
			settings.selector.box6.btn2 = $box6.find('#share_popup_box').children('p.btn2');

			mozillaForceKeyup('input#share_popup_input1');
			$box6.find('#share_popup_input1').bind("keyup", keyupPlaceHolderEvent2).bind("focus", clickPlaceHolderEvent2);

			mozillaForceKeyup('textarea#share_popup_textarea1');
			$box6.find('#share_popup_textarea1').bind("keyup", keyupPlaceHolderEvent).bind("focus", clickPlaceHolderEvent);

			var $box7 = $('<div class="share_popup link copy init">' +
				'<div class="shareBox">' +
				'<div class="box">' +
				'<a id="share_popup_close" href="#" class="btn_close">' + LanguagePack.KEYWORD_CLOSE + '</a>' +
				'<dl class="doc_open">' +
				'<dd>' +
				'<ul class="select mine share">' +
				'<li class="agent">' + LanguagePack.COOPERATION_COPYED_CLIPBOARD + '</li>' +
				'<li class="web">' + LanguagePack.POPUP_URL_COPY + '</li>' +
				'</ul>'
				/*+ '<dl class="invite sns">'
				+ '<dt><a id="share_popup_toogle_sns" href="#">sns open</a></dt>'
				+ '<dd>'
					+ '<ul id="share_popup_sns">'
						+ link
					+ '</ul>'
				+ '</dd></dl>'*/
				+
				'</dd></dl>'
				//GMX-6957
				+
				'<p id="share_popup_sns" class="btn_share">' + snsShare + '</p>' +
				'<div class="weblnk">' +
				'<fieldset>' +
				'<legend>link</legend>' +
				'<p id="share_popup_weblnk" class="copy">' +
				'<input type="input" value="http://www.polarisoffice.com/a/MXjpMU0" readonly="readonly" class="clipboards"><a href="#">' + LanguagePack.KEYWORD_COPY + '</a>' +
				'</p>' +
				'</fieldset>' +
				'</div>' +
				'<div class="location_share"  style="display:none"><label><input type="checkbox" class="docPosShare"><span>' + LanguagePack.DOCPOSSHARE +'<a href="#">info</a></span></label>'+				
					'<ul class="location_share_txt" style="display:none">'+
						'<li>'+ LanguagePack.DOCPOSSHARE_STR01 +'</li>'+
						'<li>'+ LanguagePack.DOCPOSSHARE_STR02 +'<p>' + LanguagePack.DOCPOSSHARE_LINK + '</p></li>'+
						'<li>'+ LanguagePack.DOCPOSSHARE_STR03 +'</li>'+
					'</ul>'+
				'</div>'+
				'<p class="txt link_send">' +
				'<span class="read">' + LanguagePack.COOPERATION_ENABLE_ANONYMOUS_READ + '</span>' +
				'<span class="edit">' + LanguagePack.COOPERATION_ENABLE_ANONYMOUS_WRITE + '</span>' +
				'<span class="default">' + LanguagePack.COOPERATION_ENABLE_PRIVATE_ACCESSS + '</span>' +
				'<a id="share_popup_custom" href="#">' + LanguagePack.COOPERATION_SETTING_SHARE + '</a></p>' +
				'</div>' +
				'</div></div>');

			if (!settings.isPcHome && getCookie('sharebtnHide')) {
				$box7.find('#share_popup_close').remove();
			} else {
				$box7.find('#share_popup_close').bind('click', events.close);
			}
			$box7.find('#share_popup_toogle_sns').bind('click', events.toogle);
			//GMX-6957
			$box7.find('#share_popup_sns').children('a.facebook').bind('click', events.external.sendfacebook);
			$box7.find('#share_popup_sns').children('a.twitter').bind('click', events.external.sendtwitter);
			$box7.find('#share_popup_sns').children('a.mail').bind('click', events.external.sendemail);
			$box7.find('#share_popup_sns').children('a.qq').bind('click', events.external.sendqq);

			$box7.find('#share_popup_weblnk').children('input').bind('click', events.select);
			$box7.find('#share_popup_weblnk').children('a').bind('click', events.clip);
			$box7.find('#share_popup_custom').bind('click', events.showCustomMode);
			if (isKT) {
				$box7.find('#share_popup_custom').hide();
			}
			$box7.find('.docPosShare').on('change', events.showDocPos);
			$box7.find('.location_share label span a').on('click', events.showDocPosInfo);
			$box7.find('.location_share_txt a.addCommentShareLink').on('click', events.addCommentShareLink);

			var $box8 = $('<div class="share_popup request">' +
				'<div class="shareBox">' +
				'<div id="share_popup_box" class="box">' +
				'<h2>' + LanguagePack.COOPERATION_AUTHENTICATED + '</h2>' +
				'<a id="share_popup_close" href="#" class="btn_close">' + LanguagePack.KEYWORD_CLOSE + '</a>' +
				'<p class="txt auth">' + LanguagePack.COOPERATION_AUTHENTICATED_MSG + '<br><span class="kt_share" style="display:none">' + LanguagePack.KTSHARE_REQUEST_KT_ONLY + '</span></p>' +
				'<div class="mode user">' +
				'<div id="share_popup_add" class="add">' +
				'<h3>' + LanguagePack.SHARE_REQUEST_ADDUSER + '</h3>' +
				'<dl class="invite user">' +
				'<dt><a id="share_popup_address" href="#">address</a></dt>' +
				'<dd><ul id="share_popup_importaddress">' +
				link2 +
				'</ul></dd></dl>' +
				'<fieldset>' +
				'<legend>' + LanguagePack.SHARE_REQUEST_ADDUSER + '</legend>' +
				'<div class="token">' +
				'<div id="share_popup_token_box" class="token_box">' +
				'<label for="share_popup_input2">' + LanguagePack.INPUT_INSERT_MSG(clientType) + '</label>' +
				'<input type="text" id="share_popup_input2" size="2" maxlength="60" autocomplete="off">' +
				'</div>' +
				'<div id="share_popup_recentlist" class="user_addList">' +
				'<dl>' +
				'<dt>' + LanguagePack.COOPERATION_RECENT_LIST + '<span><a class="delete" href="#">' + LanguagePack.COOPERATION_RECENT_REMOVE_LIST + '</a><a href="#" class="btn close">' + LanguagePack.KEYWORD_CLOSE + '</a></span></dt>' +
				'<dd><ul></ul></dd></dl>' +
				'</div>' +
				'<ul id="share_popup_searchlist" class="auto_search"></ul>' +
				'</div>' +
				'<p class="textarea"><label for="share_popup_textarea2">' + LanguagePack.WEBLINK_LABEL + '</label><textarea id="share_popup_textarea2"></textarea></p>' +
				'</fieldset>' +
				'</div></div>' +
				'<p class="btn btn1">' +
				'<a class="close" href="#">' + LanguagePack.KEYWORD_CLOSE + '</a>' +
				'</p>' +
				'<p class="btn btn2">' +
				'<a class="ok" href="#">' + LanguagePack.KEYWORD_REQUEST + '</a>' +
				'<a class="cancel" href="#">' + LanguagePack.KEYWORD_CANCEL + '</a>' +
				'</p>' +
				'</div>' +
				'</div></div>');

			if (!settings.isPcHome && getCookie('sharebtnHide')) {
				$box8.find('#share_popup_close').remove();
			} else {
				$box8.find('#share_popup_close').bind('click', events.close);
			}
			$box8.find('#share_popup_toogle_sns').bind('click', events.toogle);
			$box8.find('#share_popup_sns').children('li').children('a.link_01').bind('click', events.external.sendfacebook);
			$box8.find('#share_popup_sns').children('li').children('a.link_02').bind('click', events.external.sendtwitter);
			$box8.find('#share_popup_sns').children('li').children('a.link_03').bind('click', events.external.sendemail);
			$box8.find('#share_popup_sns').children('li').children('a.link_04').bind('click', events.external.sendqq);
			$box8.find('#share_popup_address').bind('click', events.toogle);
			$box8.find('#share_popup_importaddress').children('li').children('a.link_01').bind('click', events.appendPeople);
			$box8.find('#share_popup_importaddress').children('li').children('a.link_03').bind('click', events.appendOutlook);
			$box8.find('#share_popup_token_box').parent().bind('click', events.addUser.focus2).bind('mousedown', events.prevent);
			$box8.find('#share_popup_input2').bind('keydown', events.addUser.keydown).bind('keypress', events.addUser.keypress)
				.bind('keyup', events.addUser.keyup).bind('blur', events.addUser.blur);
			if (settings.agent) {
				$box6.find('#share_popup_input2').attr('size', 63);
			}
			$box8.find('#share_popup_recentlist').children('dl').children('dt').children('span').children('.delete').bind('click', events.recent.removeall);
			$box8.find('#share_popup_recentlist').children('dl').children('dt').children('span').children('.close').bind('click', events.recent.close);
			$box8.find('#share_popup_box').children('p.btn1').children('a').bind('click', events.close);
			$box8.find('#share_popup_box').children('p.btn2').children('a.ok').bind('click', events.authreq);
			$box8.find('#share_popup_box').children('p.btn2').children('a.cancel').bind('click', events.cancel);

			settings.selector.box8 = {};
			settings.selector.box8.init = $box8;
			settings.selector.box8.token_box = $box8.find('#share_popup_token_box');
			settings.selector.box8.msg = $box8.find('#share_popup_textarea2');
			settings.selector.box8.add = $box8.find('#share_popup_add');
			settings.selector.box8.userlist = $box8.find('#share_popup_userlist');
			settings.selector.box8.recentlist = $box8.find('#share_popup_recentlist').children('dl').children('dd').children('ul');
			settings.selector.box8.searchlist = $box8.find('#share_popup_searchlist');

			mozillaForceKeyup('input#share_popup_input2');
			$box8.find('#share_popup_input2').bind("keyup", keyupPlaceHolderEvent2).bind("focus", clickPlaceHolderEvent2);

			mozillaForceKeyup('textarea#share_popup_textarea2');
			$box8.find('#share_popup_textarea2').bind("keyup", keyupPlaceHolderEvent).bind("focus", clickPlaceHolderEvent);

			var $convert;
			var agnt = navigator.userAgent.toLowerCase();
			if (agnt.indexOf("mac") >= 0) {
				$convert = $('<div class="convert_popup">' +
					'<div class="box">' +
					'<h2>' + LanguagePack.CREATE_POFORMAT_POPUP_GUIDE_TITEL + '<span style="visibility:hidden;">1</span></h2>' +
					'<a class="btn_close btn_close2" href="#">' + LanguagePack.KEYWORD_CLOSE + '</a>' +
					'<dl>' +
					'<dt><img src="' + CF_PATH + '/maxage1/common/img/popup/convert/pop_save.png"></dt>' +
					'<dd>' + LanguagePack.CREATE_POFORMAT_POPUP_MSG1('<span></span>') + '</dd>' +
					'</dl>'
					//								GMX-5319(multiShare)
					+
					'<label for="no_again" ><input id="DOCUMENT_EDITING_POPUP_CHECKED" type="checkbox"> ' + LanguagePack.KEYWORD_NOVIEW + '</label>' +
					'<p class="btn_save"><a href="#">' + LanguagePack.CREATE_POFORMAT_POPUP_TITEL + '</a></p>' +
					'</div></div>');
			} else {
				$convert = $('<div class="convert_popup">' +
					'<div class="box">' +
					'<h2>' + LanguagePack.CREATE_POFORMAT_POPUP_GUIDE_TITEL + '<span style="visibility:hidden;">1</span></h2>' +
					'<a class="btn_close btn_close2" href="#">' + LanguagePack.KEYWORD_CLOSE + '</a>' +
					'<dl>' +
					'<dt><img src="' + CF_PATH + '/maxage1/common/img/popup/convert/pop_save.png"></dt>' +
					'<dd>' + LanguagePack.CREATE_POFORMAT_POPUP_MSG1('<span></span>') + '</dd>' +
					'</dl>' +
					'<p class="txt">' + LanguagePack.CREATE_POFORMAT_POPUP_MSG2 + '</p>'
					//								GMX-5319(multiShare)
					+
					'<label for="no_again" ><input id="DOCUMENT_EDITING_POPUP_CHECKED" type="checkbox"> ' + LanguagePack.KEYWORD_NOVIEW + '</label>' +
					'<p class="btn_save"><a href="#">' + LanguagePack.CREATE_POFORMAT_POPUP_TITEL + '</a></p>' +
					'</div></div>');
			}

			$convert.children('.box').children('a').bind('click', events.popup.poclose);
			$convert.children('.box').children('p.btn_save').children('a').bind('click', events.popup.pocreate);
			//							GMX-5319

			var $convert2 = $('<div class="convert_popup2">' +
				'<div class="box">' +
				'<h2>' + LanguagePack.CREATE_POFORMAT_POPUP_TITEL + '<span style="visibility:hidden;">1</span></h2>' +
				'<dl class="progress">' +
				'<dt>' + LanguagePack.SHARE_CONVERTING_MSG + '</dt>' +
				'<dd><img src="' + CF_PATH + '/maxage1/common/img/loading_bar.gif"></dd>' +
				'</dl>' +
				'</div></div>');

			//					$convert2.children('.box').children('a').bind('click', events.popup.poclose2);

			var $popup1 = $('<div class="popup pop1">' +
				'<h3>' +
				'<span>' + LanguagePack.COOPERATION_CONFIRM_CHANGE_AUTHENTICATED + '</span>' +
				'<a class="btn_close" href="#"><img src="' + CF_PATH + '/resources/image/Polaris/popup_button_close.png" alt="close"></a>' +
				'</h3>' +
				'<div>' +
				'<p class="title">' + LanguagePack.COOPERATION_PRE_CHECK_REMOVEUSER_MSG + '</p>' +
				'<p class="btn">' +
				'<a class="remove" href="#">' + LanguagePack.COOPERATION_CONFIRM_REMOVEUSER_MSG + '</a>' +
				'<a class="remain" href="#">' + LanguagePack.KEYWORD_REMAIN_USER + '</a>' +
				'<a class="cancel" href="#">' + LanguagePack.KEYWORD_CANCEL + '</a>' +
				'</p>' +
				'</div></div>');

			$popup1.children('h3').children('a').bind('click', events.popup.close);
			$popup1.children('div').children('p.btn').children('.remove').bind('click', events.popup.userremove);
			$popup1.children('div').children('p.btn').children('.remain').bind('click', events.popup.userremain);
			$popup1.children('div').children('p.btn').children('.cancel').bind('click', events.popup.close);

			var $popup2 = $('<div class="popup pop2">' +
				'<h3>' +
				'<span>' + LanguagePack.KEYWORD_ALERT + '</span>' +
				'<a class="btn_close" href="#"><img src="' + CF_PATH + '/resources/image/Polaris/popup_button_close.png" alt="close"></a>' +
				'</h3>' +
				'<div>' +
				'<p class="title">' + LanguagePack.COOPERATION_PRE_CHECK_REMOVEMY_MSG + '</p>' +
				'<p class="btn">' +
				'<a class="ok" href="#">' + LanguagePack.KEYWORD_CONFIRM + '</a>' +
				'<a class="cancel" href="#">' + LanguagePack.KEYWORD_CANCEL + '</a>' +
				'</p>' +
				'</div></div>');

			$popup2.children('h3').children('a').bind('click', events.popup.close);
			$popup2.children('div').children('p.btn').children('.ok').bind('click', events.popup.changeme);
			$popup2.children('div').children('p.btn').children('.cancel').bind('click', events.popup.close);
			//							GMX-5319
			$this.append($toast).append($box4).append($box5).append($box6.append($popup1).append($popup2)).append($box7).append($box8).append($convert).append($convert2);

			if (isKT) {
				$('.kt_share').show();
			}
		},
		'changeMode': function (type, isPoClose) {
			var $this = this,
				settings = $this.data('settings'),
				isClose = typeof isPoClose != 'undefined' ? isPoClose : '';

			if (pageView)
				pageView = false;

			settings.stop = false;

			if ($this.children('.convert_popup2').is(':visible')) {
				$this.children('.convert_popup2').hide();
			}

			if (settings.fileinfo.length > 1) {
				$('div.share_popup.make > div.shareBox > div.box > h2').text(LanguagePack.POPUP_URL_COPY);
				$('div.share_popup.link_send > div.shareBox > div.box > h2').text(LanguagePack.POPUP_URL_COPY);
			} else {
				$('div.share_popup.make > div.shareBox > div.box > h2').text(LanguagePack.KEYWORD_MYACTIVITY);
				$('div.share_popup.link_send > div.shareBox > div.box > h2').text(LanguagePack.KEYWORD_MYACTIVITY);
			}

			if (type == 'clear') {
				if (settings.type == 'request') {
					$this.children('.request').children('.shareBox').removeClass('focus');
					$this.children('.request').children('.shareBox').children('.btn1').children().removeClass('click');
					$this.children('.request').children('.shareBox').children('.btn2').children().removeClass('disable');
					settings.selector.box8.token_box.children('span.name').remove();
					settings.selector.box8.token_box.children('input').val('').trigger('keyup').blur();
					settings.selector.box8.msg.val('').trigger('keyup');
					if (!settings.readOnly && !settings.readOnly2) {
						settings.authType = 'read';
						/*settings.authType = 'write';*/
					}
				} else {
					if (settings.type == 'custom') {
						$this.children('.custom').children('.shareBox').removeClass('focus');
						$this.children('.custom').children('.shareBox').children('.btn1').children().removeClass('click');
						$this.children('.custom').children('.shareBox').children('.btn2').children().removeClass('disable');
						settings.selector.box6.token_box.children('span.name').remove();
						settings.selector.box6.token_box.children('input').val('').trigger('keyup').blur();
						settings.selector.box6.msg.val('').trigger('keyup');
						if (!settings.readOnly && !settings.readOnly2) {
							/*settings.authType = 'write';
							settings.selector.box6.auth.removeAttr('class').addClass('write auth');*/
							settings.authType = 'read';
							settings.selector.box6.auth.removeAttr('class').addClass('read auth');
						}
						settings.selector.box6.changebox.parent().hide();
					}

					if (settings.agentType != 2 && settings.auth != 2) {
						settings.selector.box6.add.children('.notice').hide();
					}

					settings.selector.box5.changebox.parent().hide();
				}
				if (multiShare) {
					$('#share_popup_weblnk > textarea').hide();
					$('#share_popup_weblnk > textarea').next('a').hide();
					$('#share_popup_weblnk > input').show();
					$('#share_popup_weblnk > input').next('a').show();
				}
			} else {
				if (settings.auth == 0) {
					$this.children('.share_popup').addClass('mine');
				} else {
					$this.children('.share_popup').addClass('share');
					if (settings.auth == -1 || settings.auth == 1 || $USERINFO.getData('UNVERIFIED')) {
						$this.children('.share_popup').addClass('noadd');
					} else {
						$this.children('.share_popup').removeClass('noadd');
					}
				}

				if (type == 'make') {
					//							GMX-5319
					if (multiShare) {
						//$('div.share_popup.make > div.shareBox > div.box > h3').text(LanguagePack.SHARE_SEND_LINK);
						$('div.share_popup.make > div.shareBox > div.box > p.txt.link_send > span').text(LanguagePack.SHARE_INVITE_MESSAGE);
						$('div.share_popup.make > div.shareBox > div.box > p.txt.link_send > span').show();
						$('div.share_popup.make > div.shareBox > div.box > p.txt.link_send > a').show();
					}
					$this.children('.share_popup').hide();
					$this.children('.make').show();

				} else if (type == 'custom' || type == 'readonly') {
					if (type == 'custom' && isClose != 'poclose') $this.children('.custom').children('.shareBox').removeClass('focus');
					if (type == 'custom' && settings.owner != undefined && settings.owner.id == settings.id) {
						$this.children('.share_popup.custom').find('.doc_open').removeClass('type02');
					} else {
						$this.children('.share_popup.custom').find('.doc_open').addClass('type02');
					}

					$this.children('.share_popup').hide();
					$this.children('.share_popup.custom').show();
					if (settings.fileinfo.publicAuthority == 1) {
						$this.children('.custom').removeClass('default edit various').addClass('read');
						$this.children('.custom').children('.shareBox').children('.box').children('.notice').hide();
					} else if (settings.fileinfo.publicAuthority == 2) {
						$this.children('.custom').removeClass('default read various').addClass('edit');
						$this.children('.custom').children('.shareBox').children('.box').children('.notice').show();
					} else {
						$this.children('.custom').removeClass('read edit various').addClass('default');
						$this.children('.custom').children('.shareBox').children('.box').children('.notice').hide();
					}
					if (settings.selector.box6.searchlist.is(':visible')) {
						settings.selector.box6.searchlist.hide();
					}
					if (!settings.readOnly && settings.readOnly2) {
						settings.authType = 'read';
					}
					if (settings.agentType != 2 && settings.auth != 2) {
						if (settings.authType == 'edit') {
							settings.selector.box6.add.children('.notice').show();
						} else {
							settings.selector.box6.add.children('.notice').hide();
						}
					}
					if(settings.checkedPosShare){
						$this.find('.share_popup .docPosShare').prop('checked', true);
					}
				} else if (type == 'weblink') {
					$this.children('.share_popup').hide();
					$this.children('.copy').show();
					if (settings.fileinfo.publicAuthority == 1) {
						$this.children('.copy').removeClass('default edit various').addClass('read');
					} else if (settings.fileinfo.publicAuthority == 2) {
						$this.children('.copy').removeClass('default read various').addClass('edit');
					} else {
						$this.children('.copy').removeClass('read edit various').addClass('default');
					}
				} else if (type == 'request') {
					$this.children('.share_popup').hide();
					$this.children('.request').show();

					if (JSON.stringify(settings.inviteData2) != JSON.stringify(settings.inviteData)) {
						settings.inviteData2 = settings.inviteData;
						settings.handle.setrecentinvitedlist.apply($this, []);
					}
				} else {
					//							GMX-5319
					if (multiShare) {
						$('div.share_popup.link_send.init').removeClass('multi');
						$('div.share_popup.link_send.init > div.shareBox > div.box >  dl.doc_open >  dt ').text(LanguagePack.SHARE_SEND_LINK)
						$('div.share_popup.link_send.init > div.shareBox > div.box >  dl.doc_open >  dd > p.txt.link_send > span').text(LanguagePack.SHARE_INVITE_MESSAGE);
						$('div.share_popup.link_send.init > div.shareBox > div.box >  dl.doc_open >  dd > p.txt.link_send > a').show();
						$('#share_popup_weblnk > textarea').hide();
						$('#share_popup_weblnk > textarea').next('a').hide();
						$('#share_popup_weblnk > input').show();
						$('#share_popup_weblnk > input').next('a').show();			
					}

					$this.children('.share_popup').hide();
					$this.children('.link_send').show();

					if (settings.fileinfo.publicAuthority == 1) {
						$this.children('.link_send').removeClass('default edit various').addClass('read');
						$this.children('.link_send').children('.shareBox').children('.box').children('.notice').hide();
					} else if (settings.fileinfo.publicAuthority == 2) {
						$this.children('.link_send').removeClass('default read various').addClass('edit');
						$this.children('.link_send').children('.shareBox').children('.box').children('.notice').show();
					} else {
						$this.children('.link_send').removeClass('read edit various').addClass('default');
						$this.children('.link_send').children('.shareBox').children('.box').children('.notice').hide();
					}
				}

				if (!settings.cilp) {
					if ($.fn.zclip && !isMobile && CheckFlashPlayer()) {
						if ($this.children('.init').length == 0) {
							settings.cilp = true;
						} else {
							var initClip = false;
							var $clip;
							var $selector;
							if (type == 'custom' || type == 'readonly') {
								$selector = $this.children('.custom');
							} else if (type == 'weblink') {
								$selector = $this.children('.copy');
							} else if (type == 'read' || type == 'edit') {
								$selector = $this.children('.link_send');
							}
							if ($selector && $selector.hasClass('init')) {
								$clip = $selector.find('.shareBox div.weblnk p.copy a');
								initClip = true;
								if (!isIeBrowser) {
									$selector.removeClass('init');
								} else {
									$clip.zclip('remove').unbind();
								}
							}

							if (initClip) {
								var result2 = function () {
									if ($selector.is(':visible')) {
										$clip.zclip({
											path: '/common/lib/swfupload/ZeroClipboard.swf',
											copy: function (e) {
												if (e.preventDefault) e.preventDefault();

												//logTracking
												var webData = $LOGMODEL.getData();
												webData['ti'].t = LogType.tracking.event;
												webData['obj'].ec = 'ux';
												webData['obj'].ea = 'cl';
												webData['obj'].di = settings.fileinfo.id;
												webData['obj'].el = "copy";
												webData['obj'].dp = settings.log.dp;
												if (settings.type == "weblink") {
													webData['obj'].dt = "CopyShareLink";
												} else {
													webData['obj'].dt = "ShareCommon";
												}
												$LOGMODEL.sendData(webData);

												return $(this).prev().val();
											},
											afterCopy: function () {
												common.toast(settings.selector.toast, LanguagePack.COOPERATION_COPYED_CLIPBOARD);
											}
										});
									} else {
										setTimeout(result2, 200);
									}
								}
								setTimeout(result2, 200);
							}
						}
					} else {
						settings.cilp = true;
						//if(settings.agentType == 0) {
						$this.addClass('noclip');
						//}
					}
				}
			}
			var result = function () {
				if ($this.is(':visible')) {
					$this.cooperation('checkSize');
				} else {
					setTimeout(result, 30);
				}
			};
			setTimeout(result, 30);
		},
		//							GMX-5319
		'changeModeMulti': function (type) {
			var $this = this;
			var settings = $this.data('settings');

			if (pageView)
				pageView = false;

			settings.stop = false;

			if (settings.fileinfo.length > 1) {
				$('div.share_popup.make > div.shareBox > div.box > h2').text(LanguagePack.POPUP_URL_COPY);
				$('div.share_popup.link_send > div.shareBox > div.box > h2').text(LanguagePack.POPUP_URL_COPY);
			} else {
				$('div.share_popup.make > div.shareBox > div.box > h2').text(LanguagePack.KEYWORD_MYACTIVITY);
				$('div.share_popup.link_send > div.shareBox > div.box > h2').text(LanguagePack.KEYWORD_MYACTIVITY);
			}

			if ($this.children('.convert_popup2').is(':visible')) {
				$this.children('.convert_popup2').hide();
			}
			if (type == 'clear') {
				if (settings.type == 'request') {
					$this.children('.request').children('.shareBox').removeClass('focus');
					$this.children('.request').children('.shareBox').children('.btn1').children().removeClass('click');
					$this.children('.request').children('.shareBox').children('.btn2').children().removeClass('disable');
					settings.selector.box8.token_box.children('span.name').remove();
					settings.selector.box8.token_box.children('input').val('').trigger('keyup').blur();
					settings.selector.box8.msg.val('').trigger('keyup');
					if (!settings.readOnly && !settings.readOnly2) {
						settings.authType = 'read';
						/*settings.authType = 'write';*/
					}
				} else {
					if (settings.type == 'custom') {
						$this.children('.custom').children('.shareBox').removeClass('focus');
						$this.children('.custom').children('.shareBox').children('.btn1').children().removeClass('click');
						$this.children('.custom').children('.shareBox').children('.btn2').children().removeClass('disable');
						settings.selector.box6.token_box.children('span.name').remove();
						settings.selector.box6.token_box.children('input').val('').trigger('keyup').blur();
						settings.selector.box6.msg.val('').trigger('keyup');
						if (!settings.readOnly && !settings.readOnly2) {
							/*settings.authType = 'write';
							settings.selector.box6.auth.removeAttr('class').addClass('write auth');*/
							settings.authType = 'read';
							settings.selector.box6.auth.removeAttr('class').addClass('read auth');
						}
						settings.selector.box6.changebox.parent().hide();
					}

					if (settings.agentType != 2 && settings.auth != 2) {
						settings.selector.box6.add.children('.notice').hide();
					}

					settings.selector.box5.changebox.parent().hide();
				}
			} else {
				if (settings.auth == 0) {
					$this.children('.share_popup').addClass('mine');
				} else {
					$this.children('.share_popup').addClass('share');
					if (settings.auth == -1 || settings.auth == 1 || $USERINFO.getData('UNVERIFIED')) {
						$this.children('.share_popup').addClass('noadd');
					} else {
						$this.children('.share_popup').removeClass('noadd');
					}
				}

				var publicAuthority = null;
				var publicAuthorityReadCnt = 0;
				var publicAuthorityEditCnt = 0;
				var noSharedCnt = 0;
				var inviteSharedCnt = 0;
				if (settings.fileinfo.length > 0) {
					for (var i = 0; i < settings.fileinfo.length; i++) {
						//alert(JSON.stringify(settings.fileinfo[i]));
						if (publicAuthority == null || settings.fileinfo[i].publicAuthority < publicAuthority) {
							publicAuthority = settings.fileinfo[i].publicAuthority;
						}
						if (settings.fileinfo[i].publicAuthority == 1) publicAuthorityReadCnt++;
						if (settings.fileinfo[i].publicAuthority == 2) publicAuthorityEditCnt++;
						if (!(settings.fileinfo[i].workid == 0 || settings.fileinfo[i].workid == null)) noSharedCnt++;
						if (settings.fileinfo[i].ownerId != settings.id) inviteSharedCnt++;
					}
				}

				if (type == 'make' || (type == 'read' && ((publicAuthorityReadCnt + publicAuthorityEditCnt) == 0 || (publicAuthorityReadCnt + publicAuthorityEditCnt) == inviteSharedCnt) && settings.log.state != 'start')) {

					$this.children('.share_popup').hide();

					//AOM-4669
					$('div.share_popup.make > div.shareBox > div.box > h3').text(LanguagePack.SHARE_SEND_LINK_DOC(settings.fileinfo.length));
					if (settings.fileinfo.length) {
						if (publicAuthorityReadCnt + publicAuthorityEditCnt > 0 || noSharedCnt > 0) {
							$('div.share_popup.make > div.shareBox > div.box > p.txt.link_send > span').text(LanguagePack.SHARE_MULTI_LINK_MSG);
						} else {
							//alert('here');
							$('div.share_popup.make > div.shareBox > div.box > p.txt.link_send > span').text('');
						}

						//$('div.share_popup.make > div.shareBox > div.box > p.txt.link_send > span').hide();
						$('div.share_popup.make > div.shareBox > div.box > p.txt.link_send > a').hide();
					}

					$this.children('.make').show();
				} else if (type == 'custom' || type == 'readonly') {
					$this.children('.share_popup').hide();
					$this.children('.share_popup.custom').show();

					if (publicAuthority == 1) {
						$this.children('.custom').removeClass('default edit various').addClass('read');
						$this.children('.custom').children('.shareBox').children('.box').children('.notice').hide();
					} else if (publicAuthority == 2) {
						$this.children('.custom').removeClass('default read various').addClass('edit');
						$this.children('.custom').children('.shareBox').children('.box').children('.notice').show();
					} else {
						$this.children('.custom').removeClass('read edit various').addClass('default');
						$this.children('.custom').children('.shareBox').children('.box').children('.notice').hide();
					}
					if (settings.selector.box6.searchlist.is(':visible')) {
						settings.selector.box6.searchlist.hide();
					}
					if (!settings.readOnly && settings.readOnly2) {
						settings.authType = 'read';
					}
					if (settings.agentType != 2 && settings.auth != 2) {
						if (settings.authType == 'edit') {
							settings.selector.box6.add.children('.notice').show();
						} else {
							settings.selector.box6.add.children('.notice').hide();
						}
					}
				} else if (type == 'weblink') {
					$this.children('.share_popup').hide();
					$this.children('.copy').show();
					if (publicAuthority == 1) {
						$this.children('.copy').removeClass('default edit various').addClass('read');
						
					} else if (publicAuthority == 2) {
						$this.children('.copy').removeClass('default read various').addClass('edit');
					} else {
						$this.children('.copy').removeClass('read edit various').addClass('default');
					}
				} else if (type == 'request') {
					$this.children('.share_popup').hide();
					$this.children('.request').show();

					if (JSON.stringify(settings.inviteData2) != JSON.stringify(settings.inviteData)) {
						settings.inviteData2 = settings.inviteData;
						settings.handle.setrecentinvitedlist.apply($this, []);
					}
				} else {
					$this.children('.share_popup').hide();
					$this.children('.link_send').show();
					//AOM-4669

					$('div.share_popup.link_send.init').addClass('multi');
					$('div.share_popup.link_send.init > div.shareBox > div.box >  dl.doc_open >  dt ').text(LanguagePack.SHARE_SEND_LINK_DOC(settings.fileinfo.length))
					/*if(publicAuthority == 1 && publicAuthorityEditCnt > 0) {
						$('div.share_popup.link_send.init > div.shareBox > div.box >  dl.doc_open >  dd > p.txt.link_send > span').text(LanguagePack.SHARE_MULTI_EDIT_MSG);
					} else if(publicAuthority == 2 && settings.fileinfo.length != publicAuthorityEditCnt) {
					    $('div.share_popup.link_send.init > div.shareBox > div.box >  dl.doc_open >  dd > p.txt.link_send > span').text(LanguagePack.SHARE_MULTI_EDIT_MSG);
					} else if(publicAuthority == 1 && settings.fileinfo.length != publicAuthorityReadCnt){
					    $('div.share_popup.link_send.init > div.shareBox > div.box >  dl.doc_open >  dd > p.txt.link_send > span').text(LanguagePack.SHARE_MULTI_LINK_MSG);
					} else if(publicAuthority == 0 && settings.fileinfo.length != (publicAuthorityReadCnt + publicAuthorityEditCnt)) {
					    $('div.share_popup.link_send.init > div.shareBox > div.box >  dl.doc_open >  dd > p.txt.link_send > span').text(LanguagePack.SHARE_MULTI_LINK_MSG);
					} else {
						//$('div.share_popup.link_send.init > div.shareBox > div.box >  dl.doc_open >  dd > p.txt.link_send > span').text(LanguagePack.SHARE_MULTI_LINK_MSG);
						$('div.share_popup.link_send.init > div.shareBox > div.box >  dl.doc_open >  dd > p.txt.link_send > span').text('');
					}*/
					//if(publicAuthorityReadCnt > 0 && publicAuthorityEditCnt > 0) {
					//	$('div.share_popup.link_send.init > div.shareBox > div.box >  dl.doc_open >  dd > p.txt.link_send > span').text(LanguagePack.SHARE_MULTI_EDIT_MSG);
					//}
					$('div.share_popup.link_send.init > div.shareBox > div.box >  dl.doc_open >  dd > p.txt.link_send > span').text(LanguagePack.SHARE_MULTI_LINK_MSG);

					$('div.share_popup.link_send.init > div.shareBox > div.box >  dl.doc_open >  dd > p.txt.link_send > a').hide();

					$('#share_popup_weblnk > textarea').show();
					$('#share_popup_weblnk > textarea').next('a').show();
					$('#share_popup_weblnk > input').hide();
					$('#share_popup_weblnk > input').next('a').hide();

					if (settings.fileinfo.length != publicAuthorityReadCnt && settings.fileinfo.length != publicAuthorityEditCnt && (publicAuthorityReadCnt + publicAuthorityEditCnt != 0)) {
						$this.children('.link_send').removeClass('read edit default').addClass('various');
						$this.children('.link_send').children('.shareBox').children('.box').children('.notice').show();
					} else if (publicAuthority == 1) {
						$this.children('.link_send').removeClass('default edit various').addClass('read');
						$this.children('.link_send').children('.shareBox').children('.box').children('.notice').show();
					} else if (publicAuthority == 2) {
						$this.children('.link_send').removeClass('default read various').addClass('edit');
						$this.children('.link_send').children('.shareBox').children('.box').children('.notice').show();
					} else if (settings.fileinfo.length == inviteSharedCnt) {
						$this.children('.share_popup').addClass('mine');
						$this.children('.link_send').removeClass('default edit various').addClass('read');
						$this.children('.link_send').children('.shareBox').children('.box').children('.notice').show();						
					} else {
						$this.children('.link_send').removeClass('read edit various').addClass('default');
						$this.children('.link_send').children('.shareBox').children('.box').children('.notice').hide();
					}
				}

				if (!settings.cilp) {
					if ($.fn.zclip && !isMobile && CheckFlashPlayer()) {
						if ($this.children('.init').length == 0) {
							settings.cilp = true;
						} else {
							var initClip = false;
							var $clip;
							var $selector;
							if (type == 'custom' || type == 'readonly') {
								$selector = $this.children('.custom');
							} else if (type == 'weblink') {
								$selector = $this.children('.copy');
							} else if (type == 'read' || type == 'edit') {
								$selector = $this.children('.link_send');
							}
							if ($selector && $selector.hasClass('init')) {
								$clip = $selector.find('.shareBox div.weblnk p.copy a');
								initClip = true;
								if (!isIeBrowser) {
									$selector.removeClass('init');
								} else {
									$clip.zclip('remove').unbind();
								}
							}

							if (initClip) {
								var result2 = function () {
									if ($selector.is(':visible')) {
										$clip.zclip({
											path: '/common/lib/swfupload/ZeroClipboard.swf',
											copy: function (e) {
												if (e.preventDefault) e.preventDefault();

												//logTracking
												var webData = $LOGMODEL.getData();
												webData['ti'].t = LogType.tracking.event;
												webData['obj'].ec = 'ux';
												webData['obj'].ea = 'cl';
												webData['obj'].di = settings.fileinfo.id;
												webData['obj'].el = "copy";
												webData['obj'].dp = settings.log.dp;
												if (settings.type == "weblink") {
													webData['obj'].dt = "CopyShareLink";
												} else {
													webData['obj'].dt = "ShareCommon";
												}
												$LOGMODEL.sendData(webData);

												return $(this).prev().val();
											},
											afterCopy: function () {
												common.toast(settings.selector.toast, LanguagePack.COOPERATION_COPYED_CLIPBOARD);
											}
										});
									} else {
										setTimeout(result2, 200);
									}
								}
								setTimeout(result2, 200);
							}
						}
					} else {
						settings.cilp = true;
						if (settings.agentType == 0) {
							$this.addClass('noclip');
						}
					}
				}
			}

			var result = function () {
				if ($this.is(':visible')) {
					$this.cooperation('checkSize');
				} else {
					setTimeout(result, 30);
				}
			};
			setTimeout(result, 30);

		},

		'setdeniedList': function (list) {
			var $this = this;
			var settings = $this.data('settings');
			for (var i = 0; i < list.length; i++) {
				var $li = settings.selector.box6.token_box.children('#invite_' + list[i].email.replace(/@/g, '\\@').replace(/\./g, '\\.').replace(/\+/g, '\\+').replace(/\-/g, '\\-'));
				if ($li.length) {
					$li.removeClass('normal').addClass('error');
				}
			}
		},
		'setrecentinvitedlist': function () {
			var $this = this;
			var settings = $this.data('settings');
			var inviteDataList;

			if (settings.type == 'request') {
				settings.selector.box8.recentlist.children().remove();
				inviteDataList = settings.inviteData2;
			} else {
				settings.selector.box6.recentlist.children().remove();
				inviteDataList = settings.inviteData;
			}
			for (var i = 0; i < inviteDataList.length; i++) {
				var inviteData = inviteDataList[i];
				var count = 0;
				var str = '';
				var str2 = '';
				var ismore = false;
				settings.selector.txt_test.text('');
				if (inviteData.inviteGroup.length == 0) {
					continue;
				}
				if (LanguagePack.CURRENT_LAN == 'ar') {
					for (var j = 0; j < inviteData.inviteGroup.length; j++) {
						var inviteGroup = inviteData.inviteGroup[j];
						var txt = '';
						if (j == inviteData.inviteGroup.length - 1) {
							txt = ' <' + inviteGroup.name + ' <' + inviteGroup.email;
						} else {
							txt = inviteGroup.name + ' <' + inviteGroup.email + '>, ';
						}
						str2 += txt;
						if (!ismore) {
							str += txt;
							settings.selector.txt_test.text(str);
							count++;
							if (settings.selector.txt_test.width() > 340) {
								ismore = true;
							}
						}
					}
				} else {
					for (var j = 0; j < inviteData.inviteGroup.length; j++) {
						var inviteGroup = inviteData.inviteGroup[j];
						var txt = '';
						if (j == inviteData.inviteGroup.length - 1) {
							txt = inviteGroup.name + ' <' + inviteGroup.email + '>';
						} else {
							txt = inviteGroup.name + ' <' + inviteGroup.email + '>, ';
						}
						str2 += txt;
						if (!ismore) {
							str += txt;
							settings.selector.txt_test.text(str);
							count++;
							if (LanguagePack.CURRENT_LAN == 'ru' || LanguagePack.CURRENT_LAN == 'fr') {
								if (settings.selector.txt_test.width() > 270) {
									ismore = true;
								}
							} else {
								if (settings.selector.txt_test.width() > 340) {
									ismore = true;
								}
							}
						}
					}
				}

				var $li = $('<li />', {
					'id': 'cooper_recent_' + inviteData.inviteGroup[0].idInvite,
				});
				$li.data('data', inviteData.inviteGroup);

				var $a1 = $('<a />', {
					'href': '#',
					'class': 'invite',
					'click': events.recent.invite
				});
				var $name = $('<span />', {
					'text': str
				});
				var $a2 = $('<a />', {
					'href': '#',
					'class': 'del',
					'click': events.recent.remove
				});
				if (count != inviteData.inviteGroup.length) {
					if (LanguagePack.CURRENT_LAN == 'ru') {
						$li.append($a1.append('Пользователи: ').append($name).append(LanguagePack.COOPERATION_RECENT_COUNT(inviteData.inviteGroup.length - count))).append($a2);
					} else {
						$li.append($a1.append($name).append(LanguagePack.COOPERATION_RECENT_COUNT(inviteData.inviteGroup.length - count))).append($a2);
					}
				} else {
					$li.append($a1.append($name)).append($a2);
				}
				if (ismore) {
					var $a3 = $('<a />', {
						'href': '#',
						'class': 'view',
						'text': 'view',
						'click': events.recent.detail,
					});
					$li.addClass('last').prepend($a3);
					var $member_etc = $('<div />', {
						'class': 'member_etc',
					});
					var $member_etc_ul = $('<ul />');
					var $member_etc_li = $('<li />', {
						'text': str2
					});
					$li.append($member_etc.append($member_etc_ul.append($member_etc_li)));
				}
				if (settings.type == 'request') {
					settings.selector.box8.recentlist.append($li);
				} else {
					settings.selector.box6.recentlist.append($li);
				}
			}
		},
		'useradd': function () {
			var $this = $(this);
			var settings = $this.data('settings');
			var arg = arguments;
			var data = arg[0];

			var $span = $('<span />', {
				'id': 'invite_' + data.e,
				'class': 'name normal',
				'title': data.n
			});
			var $span_img = $('<span />', {
				'class': 'pic'
			});
			var imgurl = CF_PATH + '/maxage1/common/img/account/no_thum.svg';
			if (data.uid) {
				imgurl = '/api/1/account/download/portrait/' + data.uid + '?' + settings.time;
			}
			var $img = $('<img />', {
				'class': 'myimg',
				'src': imgurl,
				'alt': 'img'
			});

			var $del = $('<a />', {
				'class': 'btn_close',
				'href': '#',
				'click': events.addUser.remove
			});
			$span.append($span_img.append($img)).append('<span class="bg"></span>').append(data.n).append($del);
			$span.data('data', data);

			if (settings.type == 'request') {
				settings.selector.box8.token_box.children('label').before($span);
			} else {
				settings.selector.box6.token_box.children('label').before($span);
			}
			$this.cooperation('checkSize');

			/*var $div = settings.selector.user.parent();
			$div.scrollTop($div.prop('scrollHeight'));*/
		},
		'search': {
			'set': function () {
				var $this = $(this);
				var settings = $this.data('settings');

				if (settings.search.c < 0) {
					return;
				}
				var prev = settings.search.c * 100;
				var last = prev + 100;
				var arr = [];

				var origin = settings.search.arr;
				var peoplearr = settings.search.sarr;

				if (last > origin.length) {
					if (!prev) {
						arr = origin.slice(prev, origin.length);
					} else {
						arr = origin.slice(prev - 100, origin.length);
					}
					for (var i = 0; i < arr.length; i++) {
						peoplearr.push(arr[i]);
					}
				} else {
					if (!prev) {
						arr = origin.slice(prev, last);
					} else {
						arr = origin.slice(prev - 100, last);
					}
					peoplearr = arr;
				}
				if (settings.type == 'request') {
					settings.selector.box8.searchlist.children().remove();
				} else {
					settings.selector.box6.searchlist.children().remove();
				}

				for (var i = 0; i < peoplearr.length; i++) {
					var data = peoplearr[i];
					var $li = $('<li />', {
						'id': 'search_cooper' + data.e,
						'title': data.n + '<' + data.e + '>'
					});
					var $a = $('<a />', {
						'href': '#',
						'click': events.addUser.addandremove
					});
					var $name = $('<em />', {
						'class': 'em',
						'text': data.n
					});
					var $semail = $('<span />', {
						'text': ' ' + data.e
					});

					$li.append($a.append($name).append($semail));
					$li.data('data', data);

					if (settings.type == 'request') {
						settings.selector.box8.searchlist.append($li);
					} else {
						settings.selector.box6.searchlist.append($li);
					}
				}
				if (settings.type == 'request') {
					var $child = settings.selector.box8.token_box.children('span.name');
					for (var i = 0; i < $child.length; i++) {
						var data = $child.eq(i).data('data');
						settings.selector.box8.searchlist.children('#search_cooper' + data.e.replace(/@/g, '\\@').replace(/\./g, '\\.').replace(/\+/g, '\\+').replace(/\-/g, '\\-')).addClass('focus');
					}
				} else {
					var $child = settings.selector.box6.token_box.children('span.name');

					for (var i = 0; i < $child.length; i++) {
						var data = $child.eq(i).data('data');
						settings.selector.box6.searchlist.children('#search_cooper' + data.e.replace(/@/g, '\\@').replace(/\./g, '\\.').replace(/\+/g, '\\+').replace(/\-/g, '\\-')).addClass('focus');
					}
				}

			},
		},
		'user': {
			'set': function (data) {
				var $this = this;
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				var aUser = data.user;
				var authority = settings.auth;
				var readOnly = settings.readOnly2;

				/*if(settings.externalAuthority == 2) {
					$this.children('h3').children('span').removeClass('off');
				} else {
					$this.children('h3').children('span').addClass('off');
				}*/
				if (data.change) {
					$this.children().remove();

					var $ul = $this;

					if (aUser.length == 0) {
						/*if(!settings.owner) {
							$this.parent().addClass('off');
							return;
						}*/
						var $li = $('<li />');
						var $p = $('<p />');
						var $span = $('<span />', {
							'class': 'pic'
						});
						var $span_bg = $('<span />', {
							'class': 'bg'
						});

						var $img = $('<img />', {
							'src': '/api/1/account/download/portrait/' + settings.owner.id + '?' + settings.time,
							'alt': 'img'
						});

						var $str;
						var $name;
						if (authority == 0) {
							$str = $('<span />', {
								'class': 'txt',
								'title': settings.owner.name + ' ' + settings.owner.email
							});
							$name = $('<strong />', {
								'text': ' ' + settings.owner.name
							});
							$str.append($name);
							$str.append(' ' + settings.owner.email);
						} else {
							$str = $('<span />', {
								'class': 'txt',
								'title': settings.owner.name
							});
							$name = $('<strong />', {
								'text': ' ' + settings.owner.name
							});
							$str.append($name);
						}

						$li.append($p.append($span.append($img).append($span_bg)).append($str));

						var $auth_info = $('<span />', {
							'class': 'rt'
						});
						$auth_info.append(LanguagePack.ACTIVITY_OWNER);
						$p.append($auth_info);

						if (authority == 0) {
							$p.append('<img src="' + CF_PATH + '/maxage1/common/img/share/me.svg" alt="owner" class="admin">');
							$li.addClass('me');
						}

						$ul.append($li);
					} else {
						var sort_aUser = jsonData.sort('email', aUser);
						var count = 0;

						for (var i = 0; i < sort_aUser.length; i++) {
							var data2 = sort_aUser[i];
							var $li = $('<li />', {
								'id': 'sharedUser_' + data2.email,
								'class': 'user'
							});
							var $p = $('<p />');
							var $span = $('<span />', {
								'class': 'pic'
							});
							var $span_bg = $('<span />', {
								'class': 'bg'
							});

							var imgurl = CF_PATH + '/maxage1/common/img/btb/pic_no.png';

							if (data2.userId) {
								imgurl = '/api/1/account/download/portrait/' + data2.userId + '?' + settings.time;
							}
							var $img = $('<img />', {
								'src': imgurl,
								'alt': 'img'
							});
							var $str;
							if (data2.username) {
								if (authority == 0 || authority == 2) {
									$str = $('<span />', {
										'class': 'txt',
										'title': data2.username + ' ' + data2.email
									});
									var $name = $('<strong />', {
										'text': ' ' + data2.username
									});
									$str.append($name);
									$str.append(' ' + data2.email);
								} else {
									$str = $('<span />', {
										'class': 'txt',
										'title': data2.username
									});
									var $name = $('<strong />', {
										'text': ' ' + data2.username
									});
									$str.append($name);
								}
							} else {
								$str = $('<span />', {
									'class': 'txt',
									'title': data2.email
								});
								$str.append(' ' + data2.email);
							}

							$li.append($p.append($span.append($img).append($span_bg)).append($str));
							if (settings.id == aUser[i].userId) {
								$p.append('<img src="' + CF_PATH + '/maxage1/common/img/share/me.svg" alt="owner" class="admin">');
								$li.addClass('me');
							}
							var $auth_info = '';
							if (settings.auth == -1 || settings.auth == 1) {
								$auth_info = $('<span />', {
									'class': 'rt'
								});
								var $del = '';
								if (authority) {
									if (data2.authority == 0) {
										$auth_info_a = LanguagePack.ACTIVITY_OWNER;
									} else if (data2.authority == 1) {
										$auth_info_a = $('<span />', {
											'text': LanguagePack.COOPERATION_ENABLE_READ
										});
									} else if (data2.authority == 2) {
										$auth_info_a = $('<span />', {
											'text': LanguagePack.COOPERATION_ENABLE_WRITE
										});
									}
								} else {
									if (data2.authority == 0) {
										$auth_info_a = LanguagePack.ACTIVITY_OWNER;
									} else if (data2.authority == 1) {
										$auth_info_a = $('<span />', {
											'text': LanguagePack.COOPERATION_ENABLE_READ
										});
									} else if (data2.authority == 2) {
										$auth_info_a = $('<span />', {
											'text': LanguagePack.COOPERATION_ENABLE_WRITE
										});
									}
								}
								$auth_info.append($auth_info_a);
							} else {
								$auth_info = $('<span />', {
									'class': 'rt'
								});
								var $auth_info_a = '';
								var $del = '';
								if (data2.authority == 0) {
									$auth_info_a = LanguagePack.ACTIVITY_OWNER;
								} else if (data2.authority == 1) {
									$auth_info_a = $('<a />', {
										'href': '#',
										'text': LanguagePack.COOPERATION_ENABLE_READ + ' ▼',
										'click': events.user.preChangeUserAuto
									});
								} else if (data2.authority == 2) {
									$auth_info_a = $('<a />', {
										'href': '#',
										'text': LanguagePack.COOPERATION_ENABLE_WRITE + ' ▼',
										'click': events.user.preChangeUserAuto
									});
								}

								$auth_info.append($auth_info_a);
							}
							$p.append($auth_info);

							var data3 = {}
							data3 = $.extend(data3, data2);
							data3 = $.extend(data3, {
								'count': count++
							});

							$li.data('data', data3);

							if (data2.authority == 0) {
								if ($this.children().length) {
									$ul.children().first().before($li);
								} else {
									$ul.append($li);
								}
							} else {
								$ul.append($li);
							}
						}
					}

					if (settings.fileinfo.publicAuthority) {
						var $li = $('<li />', {
							'class': 'file_auth'
						});
						var $p = $('<p />');
						var $span = $('<span />', {
							'class': 'pic'
						});
						var $span_bg = $('<span />', {
							'class': 'bg'
						});

						var $img = $('<img />', {
							'src': '/api/1/account/download/portrait/ddd',
							'alt': 'img'
						});
						var $str = $('<span />', {
							'class': 'txt',
							'title': LanguagePack.SHARE_KNOWN_USER
						});
						var $name = $('<strong />', {
							'text': LanguagePack.SHARE_KNOWN_USER
						});
						$str.append($name);

						$li.append($p.append($span.append($img).append($span_bg)).append($str));

						var $auth_info = $('<span />', {
							'class': 'rt'
						});
						$auth_info.append((settings.fileinfo.publicAuthority == 1 ? LanguagePack.COOPERATION_ENABLE_READ : LanguagePack.COOPERATION_ENABLE_WRITE));
						$p.append($auth_info);

						if ($this.children().length) {
							$ul.children().first().before($li);
						} else {
							$ul.append($li);
						}
					}
				} else {
					var $ul = $this;
					if (settings.fileinfo.publicAuthority == 0) {
						var $auth = $ul.children('.file_auth');
						if ($auth.length) {
							$auth.hide();
						}
					} else {
						var $auth = $ul.children('.file_auth');
						if ($auth.length) {
							if (settings.fileinfo.publicAuthority == 1) {
								$auth.children('p').children('span.rt').text(LanguagePack.COOPERATION_ENABLE_READ);
							} else if (settings.fileinfo.publicAuthority == 2) {
								$auth.children('p').children('span.rt').text(LanguagePack.COOPERATION_ENABLE_WRITE);
							}
							$auth.show();
						} else {
							var $li = $('<li />', {
								'class': 'file_auth'
							});
							var $p = $('<p />');
							var $span = $('<span />', {
								'class': 'pic'
							});
							var $span_bg = $('<span />', {
								'class': 'bg'
							});

							var $img = $('<img />', {
								'src': '/api/1/account/download/portrait/ddd',
								'alt': 'img'
							});
							var $str = $('<span />', {
								'class': 'txt',
								'title': LanguagePack.SHARE_KNOWN_USER
							});
							var $name = $('<strong />', {
								'text': LanguagePack.SHARE_KNOWN_USER
							});
							$str.append($name);

							$li.append($p.append($span.append($img).append($span_bg)).append($str));

							var $auth_info = $('<span />', {
								'class': 'rt'
							});
							$auth_info.append((settings.fileinfo.publicAuthority == 1 ? LanguagePack.COOPERATION_ENABLE_READ : LanguagePack.COOPERATION_ENABLE_WRITE));
							$p.append($auth_info);

							if ($this.children().length) {
								$ul.children().first().before($li);
							} else {
								$ul.append($li);
							}
						}
					}
				}
				if (settings.auth == 0) {
					if (settings.fileinfo.publicAuthority == 0 && aUser.length == 0) {
						$this.parent().addClass('off');
					} else {
						$this.parent().removeClass('off');
					}
				} else {
					$this.parent().removeClass('off');
				}
			}
		}
	};

	var mousedown;

	var events = {
		'clip': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');
			if (settings.agentType) {

				if ($this.prev('textarea').length > 0) {
					saveUrl = $this.prev('textarea').val();
				} else {
					saveUrl = $this.prev('input').val();
				}
				sendMessageToNative('clip_url', getLinkUrl());
				common.toast(settings.selector.toast, LanguagePack.COOPERATION_COPYED_CLIPBOARD);
			}

			//logTracking
			var webData = $LOGMODEL.getData();
			webData['ti'].t = LogType.tracking.event;
			webData['obj'].ec = 'ux';
			webData['obj'].ea = 'cl';
			webData['obj'].di = settings.fileinfo.id;
			webData['obj'].el = "Copy";
			webData['obj'].dp = settings.log.dp;
			if (settings.type == "weblink") {
				webData['obj'].dt = "CopyShareLink";
			} else {
				var $div = $this.parents('div.share_popup');
				if ($div.hasClass('link_send')) {
					webData['obj'].dt = "ShareCommon";
				} else if ($div.hasClass('custom')) {
					webData['obj'].dt = "ShareCommon.setting";
				}
			}

			$LOGMODEL.sendData(webData);
		},
		'showCustomMode': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');

			//logTracking
			var webData = $LOGMODEL.getData();
			webData['ti'].t = LogType.tracking.page;
			webData['obj'].dp = settings.log.dp;
			webData['obj'].dt = "ShareCommon.setting";
			if (settings.type == "make") {
				$.extend(webData, {
					'cobj': {
						'setting': 1
					}
				})
			} else if (settings.type == "read") {
				$.extend(webData, {
					'cobj': {
						'setting': 2
					}
				})
			}
			$LOGMODEL.sendData(webData);

			settings.type = 'custom';
			settings.self = true;
			if (settings.agentType == 2 && !settings.isPcHome) {
				sendMessageToNative('change_custom');
			}
			settings.handle.changeMode.apply($root, ['custom']);

			if (!$root.parent('body').length) {
				if (!$root.hasClass('allowScroll')) {
					$root.css('margin-top', '0');
					$root.addClass('allowScroll');
					$root.prepend($('<div class="allowScrollMargin"></div>'));
				}
				if (typeof isShowWeblink != 'undefined') {
					isShowWeblink = false;
				}
				$('body').unbind('click', closeCooper);

				$('body').append($root);
				layout.dim.create();
				$root.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
				$root.cooperation('checkSize', 1);
			}
		},
		'makeLink': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');
			//logTracking
			var webData = $LOGMODEL.getData();
			webData['ti'].t = LogType.tracking.event;
			webData['obj'].dp = settings.log.dp;
			webData['obj'].dt = "ShareCommon";
			webData['obj'].di = settings.fileinfo.id;
			webData['obj'].ec = "ux";
			webData['obj'].ea = "cl";
			webData['obj'].el = "CreateLink";
			$LOGMODEL.sendData(webData);
			//							GMX-5319
			if (multiShare) {
				//					if($.isArray(settings.fileinfo.id)) {
				if (settings.fileinfo.length) {
					var fileid_ = [];
					for (var i = 0; i < settings.fileinfo.length; i++) {
						fileid_.push(settings.fileinfo[i].id);
					}
					jsonResponse.modifyAuthorityWeblinkMulti($root, fileid_, 1, false);
				} else {
					jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 1, false);
				}
			} else {
				jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 1, false);
			}

		},
		'prevent': function (e) {
			if ((e.target || e.srcElement).nodeName != 'INPUT') {
				if (e.preventDefault) e.preventDefault();
			}

			mousedown = true;
			setTimeout(function () {
				mousedown = false;
			}, 200);
		},
		'toogle': function (e) {
			if (e.preventDefault) e.preventDefault();
			if (e.stopPropagation) e.stopPropagation();
			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');
			var $dd = $this.parent().next();
			var isshow = true;

			if ($dd.is(':visible')) {
				$dd.hide();
				isshow = false;
			}

			$root.trigger('click');

			if (!isshow) {
				return;
			}

			$dd.show();
			$root.one('click', function () {
				$dd.hide();
			});
		},
		'appendPeople': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');

			if (settings.agent) {
				if (settings.isPcHome) {
					showGroup({
						type: 'people',
						agent: true,
						isPcHome: true
					});
				} else {
					if (settings.agentType == 2) {
						$('body').addClass('progress');
						if (test_timer) {
							clearTimeout(test_timer);
						}
						test_timer = setTimeout(function () {
							$('body').removeClass('progress');
							test_timer = null;
						}, 1500);

						setTimeout(function () {
							sendMessageToNative('showpeople');
						}, 1500);
					} else {
						sendMessageToNative('showpeople');
					}
				}
			} else {
				showGroup({
					type: 'people'
				});
			}
		},
		'appendOutlook': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');

			if (settings.agent) {
				sendMessageToNative('outlook_get');
			}
		},
		'msg': {
			'keyup': function (e) {
				if (e.stopPropagation) e.stopPropagation();
			}
		},

		'select': function (e) {
			var $this = $(this);
			if (isMobile) {
				this.setSelectionRange(0, $this.val().length);
			} else {
				$this.select();
			}
		},
		'share': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);

			if ($this.hasClass('disable')) {
				return;
			}
			if ($this.hasClass('click')) {
				return;
			}

			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');

			if (settings.stop) {
				return;
			}
			var auth = 1;
			if (settings.authType == 'edit') {
				auth = 2;
			}

			var arr = [];
			var modifyArr = [];
			var arr = {
				'add': [],
				'modify': [],
				'notmodify': []
			};

			if (settings.selector.box6.token_box.children('span.name.error').length) {
				common.toast(settings.selector.toast, LanguagePack.COOPERATION_CONSTRAINT_TEAMFOLDER_MSG2);
				return;
			}
			var text = settings.selector.box6.token_box.children('input').val();

			if (text.length) {
				var press = jQuery.Event("keyup");
				press.keyCode = 186;
				settings.selector.box6.token_box.children('input').trigger(press).blur();
			}
			var $children = settings.selector.box6.token_box.children('span.name');
			if ($children.length == 0) {
				return;
			}

			$this.addClass('click');
			for (var i = 0; i < $children.length; i++) {
				var $li = $children.eq(i);
				var data = $li.data('data');
				var user = {};
				if (data.uid) {
					user.idUser = data.uid;
				}
				user.email = data.e;
				user.authority = auth;
				var $li = settings.selector.box6.userlist.children('li#sharedUser_' + data.e.replace(/@/g, '\\@').replace(/\./g, '\\.').replace(/\+/g, '\\+').replace(/\-/g, '\\-'));
				if ($li.length) {
					var data2 = $li.data('data');
					if (data2.authority != auth) {
						arr.modify.push(user);
					} else {
						arr.notmodify.push(user);
					}
				} else {
					arr.add.push(user);
				}
			}

			var msg = settings.selector.box6.msg.val();

			var type = 1;
			if (!settings.fileinfo.workid || (settings.fileinfo.workid && auth == 2 && !settings.fileinfo.isPotype)) {
				type = 2;
			}
			if (type == 1) {
				if (arr.modify.length) {
					if (arr.add.length) {
						var result = function () {
							jsonResponse.addShareUser($root, settings.fileinfo.workid, arr.add, settings.fileinfo.publicAuthority, msg, $this);
						}
						jsonResponse.modifyAuthority($root, settings.fileinfo.workid, arr.modify, result);
					} else {
						jsonResponse.modifyAuthority($root, settings.fileinfo.workid, arr.modify, null, $this);
					}
				} else {
					if (arr.add.length) {
						jsonResponse.addShareUser($root, settings.fileinfo.workid, arr.add, settings.fileinfo.publicAuthority, msg, $this);
					} else {
						common.toast(settings.selector.toast, LanguagePack.ALREADY_AUTHORITY);
						settings.handle.changeMode.apply($root, ['clear']);
						settings.handle.changeMode.apply($root, [settings.type]);
						$this.removeClass('click');
						if (settings.changetext) {
							settings.changetext = false;
							settings.selector.box6.add.children('h3').text(LanguagePack.SHARE_INVITE_ADDUSER);
						}
					}
				}
			} else if (type == 2) {
				var arr2 = arr.add.concat(arr.modify, arr.notmodify);
				var arr = [];
				for (var i = 0; i < settings.fileinfo.User.length; i++) {
					var isexist = false;
					for (var j = 0; j < arr2.length; j++) {
						if (arr2[j].email == settings.fileinfo.User[i].email) {
							isexist = true;
							break;
						}
					}
					if (isexist) {
						continue;
					}
					/*if(settings.fileinfo.User[i].exist) {
						continue;
					}*/
					var user = {};
					if (settings.fileinfo.User[i].userId) {
						user.idUser = settings.fileinfo.User[i].userId;
					}
					user.email = settings.fileinfo.User[i].email;
					user.authority = settings.fileinfo.User[i].authority;
					arr.push(user);
				}
				arr = arr.concat(arr2);
				if (auth == 2 && !settings.fileinfo.isPotype) {
					$root.children('.share_popup').hide();

					if (getCookie('DOCUMENT_EDITING_POPUP_CHECKED')) {
						jsonResponse.createSharedFile($root, settings.fileinfo.id, arr, false, msg);
						$root.children('.convert_popup2').show();
					} else {
						settings.convert.cb = function () {
							jsonResponse.createSharedFile($root, settings.fileinfo.id, arr, false, msg, null, 1);
						};
						$root.children('.convert_popup').show();
					}

					$root.cooperation('checkSize', 3);
					$this.removeClass('click');
				} else {
					jsonResponse.createSharedFile($root, settings.fileinfo.id, arr, false, msg, $this);
				}
			}
		},
		'authreq': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			if ($this.hasClass('click')) {
				return;
			}
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');
			if (settings.stop) {
				return;
			}
			var text = settings.selector.box8.token_box.children('input').val();

			if (text.length) {
				var press = jQuery.Event("keyup");
				press.keyCode = 186;
				settings.selector.box8.token_box.children('input').trigger(press);
			}
			var $children = settings.selector.box8.token_box.children('span.name');
			if ($children.length == 0) {
				return;
			}
			$this.addClass('click');

			var arr = [];

			var auth = 1;
			if (settings.authType == 'edit') {
				auth = 2;
			}

			for (var i = 0; i < $children.length; i++) {
				var $li = $children.eq(i);
				var data = $li.data('data');
				var user = {};
				if (data.uid) {
					if (data.uid == settings.id) {
						continue;
					}
					user.idUser = data.uid;
				}
				user.email = data.e
				user.authority = auth;
				arr.push(user);
			}
			var msg = settings.selector.box8.msg.val();

			//logTracking
			var webData1 = $LOGMODEL.getData();
			webData1['ti'].t = LogType.tracking.event;
			webData1['obj'].dp = "ShareSetting.web";
			webData1['obj'].dt = settings.log.dp;
			webData1['obj'].ec = "ux";
			webData1['obj'].ea = "cl";
			webData1['obj'].el = "Yes";
			$LOGMODEL.sendData(webData1);
			jsonResponse.reshare($root, {
				'id': settings.fileinfo.id,
				'workid': (settings.fileinfo.workid) ? settings.fileinfo.workid : settings.workid
			}, arr, msg, $this);
		},
		'cancel': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');

			if ($this.hasClass('disable')) {
				return;
			}

			settings.handle.changeMode.apply($root, ['clear']);
		},
		'close': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');
			settings.self = false;
			settings.handle.changeMode.apply($root, ['clear']);

			if (settings.fileinfo.reqUser) {
				settings.fileinfo.reqUser = [];
			}

			settings.isClose = '1';
			if (settings.agent && !settings.isPcHome) {
				sendMessageToNative('closecooperation');
				return;
			} else {
				if ($root.parent('body').length == 0) {
					if (typeof isShowWeblink != 'undefined') {
						isShowWeblink = false;
					}
					$('body').unbind('click', closeCooper);
					$('body').append($root);
					$root.hide();
				} else {
					$root.hide().removeClass('other');
					layout.dim.remove();
					$('body').removeClass('noscroll');
					if ($root.hasClass('allowScroll')) {
						$root.removeClass('allowScroll');
						$root.css('margin-top', '100px');
						$root.children('div.allowScrollMargin').remove();
					}

				}
				$root.css({
					'top': '-9999px',
					'left': '50%'
				});
				/*settings.selector.box6.init.removeAttr('Class').addClass('share_popup custom');*/

				if (typeof e.isTrigger == 'undefined') {
					if (settings.type == 'request') {
						if (settings.type == 'request') {
							//logTracking
							var webData1 = $LOGMODEL.getData();
							webData1['ti'].t = LogType.tracking.event;
							webData1['obj'].dp = settings.log.dp;
							webData1['obj'].dt = "RequestAccessRole";
							webData1['obj'].ec = "ux";
							webData1['obj'].ea = "cl";
							webData1['obj'].el = "No";
							$LOGMODEL.sendData(webData1);
						}
					} else {
						//logTracking
						var webData = $LOGMODEL.getData();
						webData['ti'].t = LogType.tracking.event;
						webData['obj'].ec = 'ux';
						webData['obj'].ea = 'cl';
						webData['obj'].di = settings.fileinfo.id;
						webData['obj'].dp = settings.log.dp;
						webData['obj'].el = "Close";
						if (settings.type != 'weblink') {
							if ($this.parents('div.share_popup').hasClass('custom')) {
								webData['obj'].dt = "ShareCommon.setting";
							} else {
								webData['obj'].dt = "ShareCommon";
							}
							$LOGMODEL.sendData(webData);
						} else {
							webData['obj'].dt = "CopyShareLink";
							$LOGMODEL.sendData(webData);
						}
					}
				}

				settings.type = 'default';
			}
			$root.children('.share_popup').removeClass('mine share noadd read edit default');
			if (settings.changetext) {
				settings.changetext = false;
				settings.selector.box6.add.children('h3').text(LanguagePack.SHARE_INVITE_ADDUSER);
			}
		},
		'preChangeMode': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');
			var $selectBox = $this.next('div.select_box');

			//							GMX-5319
			if (multiShare) {
				var multi_fileid = [];
				for (var i = 0; i < settings.fileinfo.length; i++) {
					multi_fileid.push(settings.fileinfo[i].id);
				}
			}

			if (settings.stop) {
				return;
			}

			if (settings.selector.box6.init.hasClass('userautochange')) {
				return;
			}
			if ($selectBox.is(':visible')) {
				$selectBox.hide();
				$selectBox.parent().find('dl.invite.sns dd').removeClass('off');
			} else {
				settings.changeType = settings.type;
				$selectBox.children('ul').children('li.check').removeClass('check');
				//							GMX-5319
				var isVarious = false;
				var inviteSharedCnt = 0;
				if (multiShare) {
					if (multi_fileid.length) {
						var publicAuthority = null;
						for (var i = 0; i < settings.fileinfo.length; i++) {
							if (publicAuthority != null && settings.fileinfo[i].publicAuthority != publicAuthority) isVarious = true;
							if (publicAuthority == null || settings.fileinfo[i].publicAuthority < publicAuthority) {
								publicAuthority = settings.fileinfo[i].publicAuthority;
							}
							if (settings.fileinfo[i].ownerId != settings.id) inviteSharedCnt++;
						}

						var type = '';
						if (isVarious) {
							type = 'various';
						} else if (publicAuthority == 0) {
							type = 'default';
						} else if (publicAuthority == 1) {
							type = 'read';
						} else {
							type = 'edit';
						}

						if (settings.fileinfo.length == inviteSharedCnt) {
							type = 'read';
						}

					} else {
						var type = '';
						if (settings.fileinfo.publicAuthority == 0) {
							type = 'default';
						} else if (settings.fileinfo.publicAuthority == 1) {
							type = 'read';
						} else {
							type = 'edit';
						}
					}
				} else {
					var type = '';
					if (settings.fileinfo.publicAuthority == 0) {
						type = 'default';
					} else if (settings.fileinfo.publicAuthority == 1) {
						type = 'read';
					} else {
						type = 'edit';
					}
				}
				//alert(isVarious);
				if (!isVarious) {
					settings.changeType = type;
					$selectBox.children('ul').children('li.' + type).addClass('check');
				}

				if (settings.readOnly2) {
					$selectBox.children('ul').children('li.edit').hide();
				} else {
					$selectBox.children('ul').children('li.edit').show();
				}
				$selectBox.show();
				$selectBox.parent().find('dl.invite.sns dd').addClass('off');
			}
			$root.cooperation('checkSize', 1);
		},
		'afterChangeMode': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');
			var $selectbox = $this.parents('.select_box');
			//							GMX-5319
			if (multiShare) {
				var multi_fileid = [];
				for (var i = 0; i < settings.fileinfo.length; i++) {
					multi_fileid.push(settings.fileinfo[i].id);
				}
			}

			$selectbox.hide();
			$selectbox.parent().find('dl.invite.sns dd').removeClass('off');

			if (multiShare) {
				if (multi_fileid.length) {

					//logTracking
					var webData = $LOGMODEL.getData();
					webData['ti'].t = LogType.tracking.event;
					webData['obj'].dp = settings.log.dp;

					//        				webData['obj'].di = settings.fileinfo.id;
					//    							GMX-5319
					webData['obj'].di = multi_fileid;

					if ($this.parents('div.share_popup').hasClass('link_send')) {
						webData['obj'].dt = 'ShareCommon';
						if (settings.changeType == 'read') {
							$.extend(webData, {
								'cobj': {
									'setting': 2
								}
							});
						} else if (settings.changeType == 'edit') {
							$.extend(webData, {
								'cobj': {
									'setting': 3
								}
							});
						} else if (settings.changeType == 'default') {
							$.extend(webData, {
								'cobj': {
									'setting': 5
								}
							});
						}
					} else {
						webData['obj'].dt = 'ShareCommon.setting';
						if (settings.changeType == 'read') {
							$.extend(webData, {
								'cobj': {
									'setting': 2
								}
							});
						} else if (settings.changeType == 'edit') {
							$.extend(webData, {
								'cobj': {
									'setting': 3
								}
							});
						} else if (settings.changeType == 'default') {
							$.extend(webData, {
								'cobj': {
									'setting': 1
								}
							});
						}
					}

					$LOGMODEL.sendData(webData);
					//    							GMX-5319
					var type;
					var publicAuthority = null;
					for (var i = 0; i < settings.fileinfo.length; i++) {
						if (publicAuthority == null || settings.fileinfo[i].publicAuthority < publicAuthority) {
							publicAuthority = settings.fileinfo[i].publicAuthority;
						}
					}

					if (publicAuthority == 0) {
						type = 'default';
					} else if (publicAuthority == 1) {
						type = 'read';
					} else {
						type = 'edit';
					}

					if ($selectbox.parent().parent().parent().parent().parent().hasClass('various') || settings.changeType != type) {
						if (settings.changeType == 'default') {
							jsonResponse.modifyAuthorityWeblinkMulti($root, multi_fileid, 0, false);
							// warn

							//$('div.share_popup.make > div.shareBox > div.box > p.txt.link_send > span').text(LanguagePack.SHARE_MULTI_LINK_MSG);
						} else if (settings.changeType == 'read' || settings.changeType == 'edit') {
							var isCustomMode = false;
							if (settings.fileinfo[0].User.length) {
								isCustomMode = true;
							}

							var isPotypeFinal = true;

							for (var i = 0; i < settings.fileinfo.length; i++) {
								//if(!settings.fileinfo[i].isPotype) isPotypeFinal = false

								var fileName = settings.fileinfo[i].name;
								var fileExt = fileName.substr(fileName.lastIndexOf(".") + 1, fileName.length).toLowerCase();
								if (fileExt == 'docx' || fileExt == 'pptx' || fileExt == 'xlsx') {
									isPotypeFinal = false;
								}
							}

							if (isCustomMode && !isPotypeFinal && settings.changeType == 'edit') {
								/*$root.children('.custom').addClass('showpopup');*/
								if (settings.changeType == 'read') {
									settings.type = settings.changeType;
									jsonResponse.modifyAuthorityWeblinkMulti($root, multi_fileid, 1, true);
								} else if (settings.changeType == 'edit') {
									if (isPotypeFinal) {
										jsonResponse.modifyAuthorityWeblinkMulti($root, multi_fileid, 2, true);
									} else {
										if ($root.parent('body').length == 0) {
											$('body').append($root);
											layout.dim.create();
											$root.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
										}
										$root.children('.share_popup').hide();
										if (getCookie('DOCUMENT_EDITING_POPUP_CHECKED')) {
											jsonResponse.modifyAuthorityWeblinkMulti($root, multi_fileid, 2, true);
											$root.children('.convert_popup2').show();
										} else {
											settings.convert.cb = function () {
												jsonResponse.modifyAuthorityWeblinkMulti($root, multi_fileid, 2, true);
											};
											$root.children('.convert_popup').show();
										}

										$root.cooperation('checkSize', 3);
									}
								}
								return;
							}

							if (settings.changeType == 'read') {
								jsonResponse.modifyAuthorityWeblinkMulti($root, multi_fileid, 1, isCustomMode);
							} else if (settings.changeType == 'edit') {
								//jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, isCustomMode);
								if (isPotypeFinal) {
									jsonResponse.modifyAuthorityWeblinkMulti($root, multi_fileid, 2, isCustomMode);
								} else {

									if ($root.parent('body').length == 0) {
										$('body').append($root);
										layout.dim.create();
										$root.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
									}
									$root.children('.share_popup').hide();

									if (getCookie('DOCUMENT_EDITING_POPUP_CHECKED')) {
										jsonResponse.modifyAuthorityWeblinkMulti($root, multi_fileid, 2, isCustomMode);
										$root.children('.convert_popup2').show();
									} else {
										settings.convert.cb = function () {
											jsonResponse.modifyAuthorityWeblinkMulti($root, multi_fileid, 2, isCustomMode);
										};
										$root.children('.convert_popup').show();
									}

									$root.cooperation('checkSize', 3);
									return;
								}
							}
						} else if (settings.changeType == 'clear') {
							if (settings.fileinfo[0].workid && settings.auth == 0) {
								settings.stop = true;
								jsonResponse.deleteSharedFile($root, [settings.fileinfo[0].workid]);
							}
						} else if (settings.changeType == 'custom') {
							jsonResponse.modifyAuthorityWeblinkMulti($root, multi_fileid, settings.fileinfo[0].publicAuthority, true);
						}
						if (settings.changeType != 'clear') {
							settings.type = settings.changeType;
						}
					} else {
						$root.cooperation('checkSize', 2);
					}
				} else {
					//logTracking
					var webData = $LOGMODEL.getData();
					webData['ti'].t = LogType.tracking.event;
					webData['obj'].dp = settings.log.dp;

					webData['obj'].di = settings.fileinfo.id;

					if ($this.parents('div.share_popup').hasClass('link_send')) {
						webData['obj'].dt = 'ShareCommon';
						if (settings.changeType == 'read') {
							$.extend(webData, {
								'cobj': {
									'setting': 2
								}
							});
						} else if (settings.changeType == 'edit') {
							$.extend(webData, {
								'cobj': {
									'setting': 3
								}
							});
						} else if (settings.changeType == 'default') {
							$.extend(webData, {
								'cobj': {
									'setting': 5
								}
							});
						}
					} else {
						webData['obj'].dt = 'ShareCommon.setting';
						if (settings.changeType == 'read') {
							$.extend(webData, {
								'cobj': {
									'setting': 2
								}
							});
						} else if (settings.changeType == 'edit') {
							$.extend(webData, {
								'cobj': {
									'setting': 3
								}
							});
						} else if (settings.changeType == 'default') {
							$.extend(webData, {
								'cobj': {
									'setting': 1
								}
							});
						}
					}

					$LOGMODEL.sendData(webData);

					var type;
					if (settings.fileinfo.publicAuthority == 0) {
						type = 'default';
					} else if (settings.fileinfo.publicAuthority == 1) {
						type = 'read';
					} else {
						type = 'edit';
					}
					if ($selectbox.parent().parent().parent().parent().parent().hasClass('various') || settings.changeType != type) {
						if (settings.changeType == 'default') {
							jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 0, false);
						} else if (settings.changeType == 'read' || settings.changeType == 'edit') {
							var isCustomMode = false;
							var isPotype = true;

							if (settings.fileinfo.length > 0) {
								if (settings.fileinfo[0].User.length) isCustomMode = true;
								for (var j = 0; j < settings.fileinfo.length; j++) {
									if (settings.fileinfo[j].isPotype == false) isPotype = false;
								}
							} else {
								isPotype = settings.fileinfo.isPotype;
							}

							if (isCustomMode && !isPotype && settings.changeType == 'edit') {
								/*$root.children('.custom').addClass('showpopup');*/
								if (settings.changeType == 'read') {
									settings.type = settings.changeType;
									jsonResponse.modifyAuthorityWeblinkMulti($root, multi_fileid, 1, true);
								} else if (settings.changeType == 'edit') {

									if (isPotype) {
										jsonResponse.modifyAuthorityWeblinkMulti($root, multi_fileid, 2, true);
									} else {
										if ($root.parent('body').length == 0) {
											$('body').append($root);
											layout.dim.create();
											$root.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
										}
										$root.children('.share_popup').hide();
										if (getCookie('DOCUMENT_EDITING_POPUP_CHECKED')) {
											jsonResponse.modifyAuthorityWeblinkMulti($root, multi_fileid, 2, true);
											$root.children('.convert_popup2').show();
										} else {
											settings.convert.cb = function () {
												jsonResponse.modifyAuthorityWeblinkMulti($root, multi_fileid, 2, true);
											};
											$root.children('.convert_popup').show();
										}

										$root.cooperation('checkSize', 3);
									}
								}
								return;
							}

							if (settings.changeType == 'read') {
								jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 1, isCustomMode);
							} else if (settings.changeType == 'edit') {
								//jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, isCustomMode);
								if (isPotype) { //if(settings.fileinfo.isPotype) {
									jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, isCustomMode);
								} else {
									if ($root.parent('body').length == 0) {
										$('body').append($root);
										layout.dim.create();
										$root.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
									}
									$root.children('.share_popup').hide();
									//    									$root.children('.convert_popup').show();

									if (getCookie('DOCUMENT_EDITING_POPUP_CHECKED')) {
										jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, isCustomMode);
										$root.children('.convert_popup2').show();
									} else {
										settings.convert.cb = function () {
											jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, isCustomMode);
										};
										$root.children('.convert_popup').show();
									}

									$root.cooperation('checkSize', 3);
									return;
								}
							}
						} else if (settings.changeType == 'clear') {
							if (settings.fileinfo.workid && settings.auth == 0) {
								settings.stop = true;
								jsonResponse.deleteSharedFile($root, [settings.fileinfo.workid]);
							}
						} else if (settings.changeType == 'custom') {
							jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, settings.fileinfo.publicAuthority, true);
						}
						if (settings.changeType != 'clear') {
							settings.type = settings.changeType;
						}
					} else {
						$root.cooperation('checkSize', 2);
					}
				}
			} else {
				//logTracking
				var webData = $LOGMODEL.getData();
				webData['ti'].t = LogType.tracking.event;
				webData['obj'].dp = settings.log.dp;

				webData['obj'].di = settings.fileinfo.id;

				if ($this.parents('div.share_popup').hasClass('link_send')) {
					webData['obj'].dt = 'ShareCommon';
					if (settings.changeType == 'read') {
						$.extend(webData, {
							'cobj': {
								'setting': 2
							}
						});
					} else if (settings.changeType == 'edit') {
						$.extend(webData, {
							'cobj': {
								'setting': 3
							}
						});
					} else if (settings.changeType == 'default') {
						$.extend(webData, {
							'cobj': {
								'setting': 5
							}
						});
					}
				} else {
					webData['obj'].dt = 'ShareCommon.setting';
					if (settings.changeType == 'read') {
						$.extend(webData, {
							'cobj': {
								'setting': 2
							}
						});
					} else if (settings.changeType == 'edit') {
						$.extend(webData, {
							'cobj': {
								'setting': 3
							}
						});
					} else if (settings.changeType == 'default') {
						$.extend(webData, {
							'cobj': {
								'setting': 1
							}
						});
					}
				}

				$LOGMODEL.sendData(webData);

				var type;
				if (settings.fileinfo.publicAuthority == 0) {
					type = 'default';
				} else if (settings.fileinfo.publicAuthority == 1) {
					type = 'read';
				} else {
					type = 'edit';
				}
				if ($selectbox.parent().parent().parent().parent().parent().hasClass('various') || settings.changeType != type) {
					if (settings.changeType == 'default') {
						jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 0, false);
					} else if (settings.changeType == 'read' || settings.changeType == 'edit') {
						var isCustomMode = false;
						if (settings.fileinfo.User.length) {
							isCustomMode = true;
						}
						if (isCustomMode && !settings.fileinfo.isPotype && settings.changeType == 'edit') {
							/*$root.children('.custom').addClass('showpopup');*/
							if (settings.changeType == 'read') {
								settings.type = settings.changeType;
								jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 1, true);
							} else if (settings.changeType == 'edit') {
								if (settings.fileinfo.isPotype) {
									jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, true);
								} else {
									if ($root.parent('body').length == 0) {
										$('body').append($root);
										layout.dim.create();
										$root.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
									}
									$root.children('.share_popup').hide();
									if (getCookie('DOCUMENT_EDITING_POPUP_CHECKED')) {
										jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, true);
										$root.children('.convert_popup2').show();
									} else {
										settings.convert.cb = function () {
											jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, true);
										};
										$root.children('.convert_popup').show();
									}

									$root.cooperation('checkSize', 3);
								}
							}
							return;
						}

						if (settings.changeType == 'read') {
							jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 1, isCustomMode);
						} else if (settings.changeType == 'edit') {
							//jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, isCustomMode);
							if (settings.fileinfo.isPotype) {
								jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, isCustomMode);
							} else {

								if ($root.parent('body').length == 0) {
									$('body').append($root);
									layout.dim.create();
									$root.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
								}
								$root.children('.share_popup').hide();
								if (getCookie('DOCUMENT_EDITING_POPUP_CHECKED')) {
									jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, isCustomMode);
									$root.children('.convert_popup2').show();
								} else {
									settings.convert.cb = function () {
										jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, isCustomMode);
									};
									$root.children('.convert_popup').show();
								}

								$root.cooperation('checkSize', 3);
								return;
							}
						}
					} else if (settings.changeType == 'clear') {
						if (settings.fileinfo.workid && settings.auth == 0) {
							settings.stop = true;
							jsonResponse.deleteSharedFile($root, [settings.fileinfo.workid]);
						}
					} else if (settings.changeType == 'custom') {
						jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, settings.fileinfo.publicAuthority, true);
					}
					if (settings.changeType != 'clear') {
						settings.type = settings.changeType;
					}
				} else {
					$root.cooperation('checkSize', 2);
				}
			}
		},


		'checkChangeMode': function (e) {
			if (e.preventDefault) e.preventDefault();
			if (e.stopPropagation) e.stopPropagation();
			var $this = $(this);
			var $ul = $this.parent();
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');

			$ul.children().removeClass('check');
			settings.changeType = $this.attr('Class');
			$this.addClass('check');
		},
		'cancelChangeMode': function (e) {
			if (e.preventDefault) e.preventDefault();
			if (e.stopPropagation) e.stopPropagation();

			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');
			var $selectbox = $this.parents('.select_box');

			$selectbox.hide();
			$selectbox.parent().find('dl.invite.sns dd').removeClass('off');
			$root.cooperation('checkSize', 2);
		},
		'preChangeAuto': function (e) {
			if (e.preventDefault) e.preventDefault();
			if (e.stopPropagation) e.stopPropagation();
			var $this = $(this);
			var $dd = $this.parent('dd');
			var $ul = $dd.children('ul');

			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');

			if (settings.type != 'request') {
				if ($ul.is(':visible')) {
					$ul.hide();
				} else {
					$ul.show();
					$root.one('click', function () {
						$ul.hide();
					});
				}
			}
		},
		'afterChangeAuto': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');
			var $ul = $this.parent().parent();
			var type = $this.attr('Class');

			if (settings.type != 'request') {
				$ul.hide();
				if (settings.authType != type) {
					settings.authType = type;
					$ul.parents('#share_popup_auth').removeAttr('Class').addClass('auth ' + type);
					if (settings.agentType != 2 && settings.auth == 0) {
						if (type == 'edit') {
							settings.selector.box6.add.children('.notice').show();
						} else {
							settings.selector.box6.add.children('.notice').hide();
						}
						$root.cooperation('checkSize');
					}
				}
			}
		},
		'showChangePopup': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');
			if (settings.selector.box6.init.hasClass('userautochange')) {
				return;
			}

			if (settings.readOnly2) {
				settings.selector.ah2.children('.link_edit').hide();
			} else {
				settings.selector.ah2.children('.link_edit').show();
			}
			settings.selector.box6.init.addClass('autochange');
			settings.selector.ah2.children('li').eq(settings.fileinfo.publicAuthority).children('label').children('input').attr('checked', true);

			$root.cooperation('checkSize');
		},
		'changeAutoPopup': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');
			var type = settings.selector.ah2.find('li > label > input:checked').val();
			if (type == '2' && !settings.fileinfo.isPotype) {
				if ($root.parent('body').length == 0) {
					$('body').append($root);
					layout.dim.create();
					$root.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
				}
				$root.children('.share_popup').hide();
				if (getCookie('DOCUMENT_EDITING_POPUP_CHECKED')) {
					jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, type, true);
					$root.children('.convert_popup2').show();
				} else {
					settings.convert.cb = function () {
						jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, type, true);
					};
					$root.children('.convert_popup').show();

				}
				$root.cooperation('checkSize', 3);
			} else {
				jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, type, true);
			}
			settings.selector.box6.init.removeClass('autochange');
			//logTracking
			var webData = $LOGMODEL.getData();
			webData['ti'].t = LogType.tracking.event;
			webData['obj'].dp = settings.log.dp;
			webData['obj'].dt = 'ShareRoleSetting';
			webData['obj'].ec = 'ux';
			webData['obj'].ea = 'cl';
			if (type == '0')
				$.extend(webData, {
					'cobj': {
						'setting': 41
					}
				})
			else if (type == '1')
				$.extend(webData, {
					'cobj': {
						'setting': 42
					}
				})
			else if (type == '2')
				$.extend(webData, {
					'cobj': {
						'setting': 43
					}
				})
			if (typeof (webData['cobj']) != 'undefined' && webData['cobj'].setting)
				$LOGMODEL.sendData(webData);
			pageView = true;
		},
		'hideChangePopup': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');
			settings.selector.box6.init.removeClass('autochange');
			$root.cooperation('checkSize');
		},
		'showCooperation': function (e) {
			if (e.preventDefault) e.preventDefault();

			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');

			if (!settings.agent) {
				settings.log.state = 'start';
			}

			settings.type = 'default';
			loadingFirst = false;

			if ($USERINFO.getData('UNVERIFIED')) {
				unverifyShareMsg();
				return;
			}

			jsonResponse.getShareFileInfo($root, settings.fileinfo, true, false);
		},
		'showReqReshare': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#Cooperation');
			var settings = $root.data('settings');
			settings.type = 'request';

			settings.handle.changeMode.apply($root, [settings.type]);
			//logTracking
			var webData = $LOGMODEL.getData();
			webData['ti'].t = LogType.tracking.page;
			webData['obj'].dp = settings.log.dp;
			webData['obj'].dt = "RequestAccessRole";
			webData['obj'].di = settings.fileinfo.id;
			$LOGMODEL.sendData(webData);
			/*if(settings.log.origin && settings.log.origin == 'Document' ) {
				$this.css('margin-top', '0');
				$this.addClass('allowScroll');
				$this.prepend($('<div class="allowScrollMargin"></div>'));
			}
			$('body').append($root);
			layout.dim.create();
			$root.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();*/

		},
		'popup': {
			'pocreate': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');

				$root.children('.convert_popup').hide();
				$root.children('.convert_popup2').show();
				$root.cooperation('checkSize');

				if (!getCookie('DOCUMENT_EDITING_POPUP_CHECKED')) {
					if ($root.children('.convert_popup').find('input').is(':checked')) {
						var todayDate = new Date();
						todayDate.setDate(todayDate.getDate() + 365);
						document.cookie = "DOCUMENT_EDITING_POPUP_CHECKED" + "=" + "true" + ";expires=" + todayDate.toGMTString() + ";path=/";
					}
				}

				if (settings.convert.cb) {
					settings.convert.cb();
					settings.convert.cb = null;
					//common.toast(settings.selector.toast, LanguagePack.CREATE_POFORMAT, 1);
				}
			},
			'poclose': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				if (settings.convert.cb) {
					settings.convert.cb = null;
				}
				$root.children('.convert_popup').hide();
				common.toast(settings.selector.toast, LanguagePack.POFORMAT_POPUP_CANCEL);

				if (settings.fileinfo.length > 1) {
					settings.handle.changeModeMulti.apply($root, [settings.type]);
				} else {
					settings.handle.changeMode.apply($root, [settings.type, 'poclose']);
				}


				/*if(settings.type == 'custom') {

				} else {
					if(settings.appendLi && !settings.self) {
						layout.dim.remove();
						$root.hide().children().removeClass('other');
						var top = settings.appendLi.prop('offsetTop');
						var height = settings.appendLi.height();
						var $listbox = settings.appendLi.closest('.list_box');
						var scrollHeight = $listbox.prop('scrollHeight');
						$this.css('top', top + height);
						settings.appendLi.parent().children().last().after($root);
						$('body').bind('click', closeCooper);
						$root.show();
					}
				}*/
				$root.cooperation('checkSize');
			},

			/*				'poclose2' : function(e) {
								if(e.preventDefault) e.preventDefault();
								var $this = $(this);
								var $root = $this.parents('#Cooperation');
								var settings = $root.data('settings');
								if(settings.convert.cb) {
									settings.convert.cb = null;
								}
								$root.children('.convert_popup2').hide();
								settings.handle.changeMode.apply($root, [settings.type]);
								$root.cooperation('checkSize');
							},*/


			'close': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				$root.children().removeClass('showpopup showpopup2');
			},
			'userremove': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				$root.children().removeClass('showpopup');
				if (settings.changeType == 'read') {
					settings.type = settings.changeType;
					jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 1, false, true);
				} else if (settings.changeType == 'edit') {
					if (settings.fileinfo.isPotype) {
						jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, false, true);
					} else {
						if ($root.parent('body').length == 0) {
							$('body').append($root);
							layout.dim.create();
							$root.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
						}
						$root.children('.share_popup').hide();
						if (getCookie('DOCUMENT_EDITING_POPUP_CHECKED')) {
							jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, false, true);
							$root.children('.convert_popup2').show();
						} else {
							settings.convert.cb = function () {
								jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, false, true);
							};
							$root.children('.convert_popup').show();
						}
						$root.cooperation('checkSize', 3);
					}
				}
			},
			'userremain': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				$root.children().removeClass('showpopup');
				if (settings.changeType == 'read') {
					settings.type = settings.changeType;
					jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 1, true);
				} else if (settings.changeType == 'edit') {
					if (settings.fileinfo.isPotype) {
						jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, true);
					} else {
						if ($root.parent('body').length == 0) {
							$('body').append($root);
							layout.dim.create();
							$root.css('z-index', layout.dim.getZindex() + 1).addClass('other').show();
						}
						$root.children('.share_popup').hide();
						if (getCookie('DOCUMENT_EDITING_POPUP_CHECKED')) {
							jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, true);
							$root.children('.convert_popup2').show();
						} else {
							settings.convert.cb = function () {
								jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 2, true);
							};
							$root.children('.convert_popup').show();
						}
						$root.cooperation('checkSize', 3);
					}
				}
			},
			'changeme': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				$root.children().removeClass('showpopup2');

				var $lis = settings.selector.box6.userlist.children('li.change');

				var isCreate = false;

				var arr = {
					'modify': [],
					'remove': []
				};

				for (var i = 0; i < $lis.length; i++) {
					var $li = $lis.eq(i);
					var data = $li.data('data');
					var user = {};

					if ($li.hasClass('delete')) {
						user.email = data.email;
						arr.remove.push(user);
					} else {
						if (data.idUser) {
							user.idUser = data.idUser;
						}

						user.email = data.email;
						user.authority = data.authority;
						if (user.authority == 1) {
							user.authority = 2;
							isCreate = true;
						} else if (user.authority == 2) {
							user.authority = 1;
						}
						arr.modify.push(user);
					}
				}
				if (settings.removeMe) {
					if (arr.modify.length) {
						var result = function () {
							/*var result2 = function() {
								common.toast(settings.selector.toast, LanguagePack.COOPERATION_REOMVE_USER);
								var result3 = function() {
									if($root.children('.share_popup').is(':visible')) {
									}
								};
								setTimeout(result3, 2000);
							};*/
							jsonResponse.removeShareUser($root, settings.fileinfo.workid, arr.remove, null);
						}
						jsonResponse.modifyAuthority($root, settings.fileinfo.workid, arr.modify, result);
					} else {
						/*							var result2 = function() {
														common.toast(settings.selector.toast, LanguagePack.COOPERATION_REOMVE_USER);
														var result3 = function() {
															if($root.children('.share_popup').is(':visible')) {
																settings.selector.box6.init.children('.box1').children('.btn_close').trigger('click');
															}
														};
														setTimeout(result3, 2000);
													};*/
						jsonResponse.removeShareUser($root, settings.fileinfo.workid, arr.remove, null);
					}
				} else {
					if (arr.remove.length) {
						var result = function () {
							jsonResponse.modifyAuthority($root, settings.fileinfo.workid, arr.modify, null);
						}
						jsonResponse.removeShareUser($root, settings.fileinfo.workid, arr.remove, result);
					} else {
						jsonResponse.modifyAuthority($root, settings.fileinfo.workid, arr.modify, null);
					}
				}
			}

		},
		'addUser': {
			'focus': function (e) {
				if (e.stopPropagation) e.stopPropagation();
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				$root.trigger('click');

				var settings = $root.data('settings');
				var $box = $this.parents('.shareBox');
				var $input = $this.children().children('input');

				$box.addClass('focus');
				$input.trigger('focus');

				if (!$(e.target || e.srcElement).hasClass('btn')) {
					if ($input.val().length) {
						settings.selector.box6.searchlist.show();
						settings.selector.box6.recentlist.parents('.user_addList').hide();
						settings.selector.box6.recentlist.children('li.selected').removeClass('selected');
					} else {
						if (settings.selector.box6.recentlist.children().length) {
							settings.selector.box6.recentlist.parents('.user_addList').show();
						}
					}
				}
				$root.cooperation('checkSize');
				$this.find('#share_popup_token_box').children('span.name.selected').removeClass('pre selected');
				if ($('#share_popup_token_box').children('span').length && settings.selector.box6.add.css('display') != 'none') settings.selector.box6.btn2.children('a').show();
				else settings.selector.box6.btn2.children('a.ok').hide();
			},
			'blur': function (e) {
				if (e.stopPropagation) e.stopPropagation();
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');

				setTimeout(function () {
					if (mousedown) {
						mousedown = false;
						return;
					}
					if (settings.type == 'request') {
						settings.selector.box8.recentlist.parents('.user_addList').hide();
						settings.selector.box8.recentlist.children('li.on').removeClass('on');
						settings.selector.box8.recentlist.children('li.selected').removeClass('selected');
					} else {
						settings.selector.box6.recentlist.parents('.user_addList').hide();
						settings.selector.box6.recentlist.children('li.on').removeClass('on');
						settings.selector.box6.recentlist.children('li.selected').removeClass('selected');
					}
					if ($('#share_popup_token_box').children('span').length && settings.selector.box6.add.css('display') != 'none') settings.selector.box6.btn2.children('a').show();
					else settings.selector.box6.btn2.children('a.ok').hide();
				}, 100);
			},
			'focus2': function (e) {
				if (e.stopPropagation) e.stopPropagation();
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				var settings = $root.data('settings');
				var $box = $this.parents('.shareBox');
				var $input = $this.children().children('input');

				$box.addClass('focus');
				$input.trigger('focus');

				/*if(settings.selector.ad3.children('input').is(':focus') && settings.selector.ad3.parent().hasClass('over')) {
					if(settings.selector.ad3.children('input').val().length) {
						settings.selector.box6.searchlist.show();
						settings.selector.recentlist2.parents('.user_addList').hide();
					}
				}*/
				if (!$(e.target || e.srcElement).hasClass('btn')) {
					if ($input.val().length) {
						settings.selector.box8.searchlist.show();
						settings.selector.box8.recentlist.parents('.user_addList').hide();
						settings.selector.box8.recentlist.children('li.selected').removeClass('selected');
					} else {
						if (settings.selector.box8.recentlist.children().length) {
							settings.selector.box8.recentlist.parents('.user_addList').show();
						}
					}
				}
				$root.cooperation('checkSize');
				if ($('#share_popup_token_box').children('span').length && settings.selector.box6.add.css('display') != 'none') settings.selector.box6.btn2.children('a').show();
				else settings.selector.box6.btn2.children('a.ok').hide();
			},
			'keydown': function (e) {
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');

				switch (e.keyCode) {
					case 13:
						/* enter */
						return false;
					case 229:
						if (settings.agent && !settings.isPcHome) {
							return true;
						}
						text = $.trim($this.val());
						var size = 3;
						var textLength = text.length + 1;
						if (1 < textLength) {
							size = Math.round(textLength * 1.5);
						}
						if (size > 63) {
							size = 63
						}
						$this.attr('size', size);
						break;
				}
				if ($('#share_popup_token_box').children('span').length && settings.selector.box6.add.css('display') != 'none') settings.selector.box6.btn2.children('a').show();
				else settings.selector.box6.btn2.children('a.ok').hide();
				return true;
			},
			'keypress': function (e) {
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');

				text = $.trim($this.val());
				switch (e.keyCode) {
					default:
						text = $this.val();
						$this.parent().children('span.name.selected').removeClass('pre selected');
				}

				if (settings.agent && !settings.isPcHome) {
					return;
				} else {
					var size = 3;
					var textLength = text.length + 1;
					if (1 < textLength) {
						size = Math.round(textLength * 1.5);
					}
					if (size > 63) {
						size = 63
					}
					$this.attr('size', size);
				}
				if ($('#share_popup_token_box').children('span').length && settings.selector.box6.add.css('display') != 'none') settings.selector.box6.btn2.children('a').show();
				else settings.selector.box6.btn2.children('a.ok').hide();
			},
			'keyup': function (e) {
				if (e.stopPropagation) e.stopPropagation();
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				var text = '';

				switch (e.keyCode) {
					case 8:
						/* <- */
						text = $.trim($this.val());
						if (!text.length) {
							var $prev = $this.prev().prev('span.name');
							if ($prev.length) {
								if ($prev.hasClass('selected')) {
									if ($prev.prev('span.name').length) {
										$prev.prev('span.name').addClass('selected');
									}
									$prev.remove();
									$root.cooperation('checkSize');
								} else if ($prev.hasClass('pre')) {
									$prev.addClass('selected');
								} else {
									$prev.addClass('pre');
								}
							}
						} else {
							if (settings.agent && !settings.isPcHome) {
								return;
							} else {
								var size = 3;
								if (1 < text.length) {
									size = Math.round(text.length * 1.5);
								}
								if (size > 63) {
									size = 63
								}
								$this.attr('size', size);
							}
						}
						break;
					case 27:
						/* esc */
						$this.val('');
						break;
					case 13: /* enter */
					case 186:/* ; */	
					case 188:/* , */
						if (e.preventDefault) e.preventDefault();
						text = $.trim($this.val());
						text = text.replace(';', '');
						text = text.replace(',', '');
						if (text !== $.trim($this.val())) {
							$this.val(text);
						}
						if (settings.type == 'request') {
							if (settings.selector.box8.recentlist.children('li.selected').length) {
								settings.selector.box8.recentlist.children('li.selected').children('a.invite').trigger('click');
							} else if (settings.selector.box8.searchlist.children('li.selected').length) {
								if (settings.selector.box8.searchlist.children('li.selected.focus').length) {
									common.toast(settings.selector.toast, LanguagePack.SHARE_PEOPLEADDERRORMSG);
								} else {
									var data = settings.selector.box8.searchlist.children('li.selected').data('data');

									if (settings.owner.id == data.uid) {
										common.toast(settings.selector.toast, LanguagePack.ALREADY_AUTHORITY);
									} else {
										settings.selector.box8.searchlist.children('li.selected').children().trigger('click');
										text = '';
									}
								}
							} else {
								if (text.length) {
									text = text.toLowerCase();
									var emailreg = /^([a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
									if (!emailreg.test(text) || (text.indexOf("@") > 63)) {
										common.toast(settings.selector.toast, LanguagePack.BUBBLE_ENTEREMAILFORMAT);
									} else {
										if (settings.owner.email.toLowerCase() == text) {
											common.toast(settings.selector.toast, LanguagePack.ALREADY_AUTHORITY);
										} else {
											var $addUser = settings.selector.box8.token_box.children('span.name');
											if ($addUser.length > 50) {
												common.toast(settings.selector.toast, LanguagePack.SHARE_MAXPEOPLECOUNT);
											}
											var isexist = false;
											for (var i = 0; i < $addUser.length; i++) {
												var $item = $addUser.eq(i);
												var data2 = $item.data('data');
												if (!data2.e) {
													continue;
												}
												if (data2.e.toLowerCase() == text) {
													isexist = true;
													break;
												}
											}
											if (isexist) {
												common.toast(settings.selector.toast, LanguagePack.SHARE_PEOPLEADDERRORMSG);
											} else {
												var data = addressData.find({
													'e': text
												});
												if (!data) {
													data = {
														'id': null,
														'uid': null,
														'n': text,
														'e': text
													};
												}
												settings.handle.useradd.apply($root, [data, 1]);
												$this.val('');
												text = '';
											}
											//if($('#share_popup_token_box').children('span').length && settings.selector.box6.add.css('display') != 'none') settings.selector.box6.btn2.children('a').show();
											if ($('#share_popup_token_box').children('span').length && settings.selector.box6.add.css('display') != 'none') settings.selector.box6.btn2.children('a').show();
											else settings.selector.box6.btn2.children('a.ok').hide();
										}
									}
								}
							}
						} else {
							if (settings.selector.box6.recentlist.children('li.selected').length) {
								settings.selector.box6.recentlist.children('li.selected').children('a.invite').trigger('click');
							} else if (settings.selector.box6.searchlist.children('li.selected').length) {
								if (settings.selector.box6.searchlist.children('li.selected.focus').length) {
									common.toast(settings.selector.toast, LanguagePack.SHARE_PEOPLEADDERRORMSG);
								} else {
									var data = settings.selector.box6.searchlist.children('li.selected').data('data');
									if (settings.owner.id == data.uid) {
										common.toast(settings.selector.toast, LanguagePack.ALREADY_AUTHORITY);
									} else {
										var isexist = false;
										var $member = settings.selector.box6.userlist.children('li.user');
										for (var i = 0; i < $member.length; i++) {
											var $item = $member.eq(i);
											var data2 = $item.data('data');
											if (!data2.email) {
												continue;
											}
											if (data2.email.toLowerCase() == data.e.toLowerCase()) {
												isexist = true;
												data = {
													'id': null,
													'uid': (data2.userId ? data2.userId : null),
													'n': data2.username ? data2.username : data2.email,
													'e': data2.email
												};
												settings.handle.useradd.apply($root, [data, 1]);
												$this.val('');
												text = '';
												break;
											}
										}
										if (!isexist) {
											settings.selector.box6.searchlist.children('li.selected').children().trigger('click');
											text = '';
										}
									}
								}
							} else {
								if (text.length) {
									text = text.toLowerCase();
									if (settings.email.toLowerCase() == text) {
										common.toast(settings.selector.toast, LanguagePack.NOTSHAREUSER);
									} else {
										var emailreg = /^([a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
										if (!emailreg.test(text) || (text.indexOf("@") > 63)) {
											common.toast(settings.selector.toast, LanguagePack.BUBBLE_ENTEREMAILFORMAT);
										} else {
											if (settings.owner.email.toLowerCase() == text) {
												common.toast(settings.selector.toast, LanguagePack.ALREADY_AUTHORITY);
											} else {
												var $addUser = settings.selector.box6.token_box.children('span.name');
												if ($addUser.length > 50) {
													common.toast(settings.selector.toast, LanguagePack.SHARE_MAXPEOPLECOUNT);
												} else {
													var isexist = false;
													for (var i = 0; i < $addUser.length; i++) {
														var $item = $addUser.eq(i);
														var data2 = $item.data('data');
														if (!data2.e) {
															continue;
														}
														if (data2.e.toLowerCase() == text) {
															isexist = true;
															break;
														}
													}
													if (isexist) {
														common.toast(settings.selector.toast, LanguagePack.SHARE_PEOPLEADDERRORMSG);
													} else {
														var $member = settings.selector.box6.userlist.children('li.user');
														for (var i = 0; i < $member.length; i++) {
															var $item = $member.eq(i);
															var data2 = $item.data('data');
															if (!data2.email) {
																continue;
															}
															if (data2.email.toLowerCase() == text) {
																isexist = true;
																data = {
																	'id': null,
																	'uid': (data2.userId ? data2.userId : null),
																	'n': data2.username ? data2.username : data2.email,
																	'e': data2.email
																};
																settings.handle.useradd.apply($root, [data, 1]);
																$this.val('');
																text = '';
																break;
															}
														}
														if (!isexist) {
															var data = addressData.find({
																'e': text
															});
															if (!data) {
																data = {
																	'id': null,
																	'uid': null,
																	'n': text,
																	'e': text
																};
															}
															settings.handle.useradd.apply($root, [data, 1]);
															$this.val('');
															text = '';
														}
													}
												}
											}
											//if($('#share_popup_token_box').children('span').length && settings.selector.box6.add.css('display') != 'none') settings.selector.box6.btn2.children('a').show();
											if ($('#share_popup_token_box').children('span').length && settings.selector.box6.add.css('display') != 'none') settings.selector.box6.btn2.children('a').show();
											else settings.selector.box6.btn2.children('a.ok').hide();
										}
									}
								}
							}
						}
						break;
					case 38:
						var $ul;
						var $old;
						var $new;
						if (settings.type == 'request') {
							if (settings.selector.box8.searchlist.is(':visible')) {
								$ul = settings.selector.box8.searchlist;
							} else if (settings.selector.box8.recentlist.is(':visible')) {
								$ul = settings.selector.box8.recentlist;
							}
						} else {
							if (settings.selector.box6.searchlist.is(':visible')) {
								$ul = settings.selector.box6.searchlist;
							} else if (settings.selector.box6.recentlist.is(':visible')) {
								$ul = settings.selector.box6.recentlist;
							}
						}
						if (!$ul) {
							return;
						}
						$old = $ul.children('li.selected');
						if ($old.length) {
							$old.removeClass('selected');
						} else {
							$ul.children().first().addClass('selected');
							return;
						}
						$new = $old.prev();
						if ($new.length) {
							$new.addClass('selected');
						} else {
							$old.addClass('selected');
							return;
						}
						var ulScrollHeight = $ul.prop('scrollHeight');
						var height = $ul.height();
						if (ulScrollHeight > height) {
							var curTop = $new.prop('offsetTop');
							var scrollTop = $ul.scrollTop() - 2;
							if (curTop <= scrollTop) {
								$ul.scrollTop(curTop - height);
							}
						}
						return;
					case 40:
						var $ul;
						var $old;
						var $new;
						if (settings.type == 'request') {
							if (settings.selector.box8.searchlist.is(':visible')) {
								$ul = settings.selector.box8.searchlist;
							} else if (settings.selector.box8.recentlist.is(':visible')) {
								$ul = settings.selector.box8.recentlist;
							}
						} else {
							if (settings.selector.box6.searchlist.is(':visible')) {
								$ul = settings.selector.box6.searchlist;
							} else if (settings.selector.box6.recentlist.is(':visible')) {
								$ul = settings.selector.box6.recentlist;
							}
						}
						if (!$ul) {
							return;
						}
						$old = $ul.children('li.selected');
						if ($old.length) {
							$old.removeClass('selected');
						} else {
							$ul.children().first().addClass('selected');
							return;
						}
						$new = $old.next();
						if ($new.length) {
							$new.addClass('selected');
						} else {
							$old.addClass('selected');
							return;
						}
						var ulScrollHeight = $ul.prop('scrollHeight');
						var height = $ul.height();
						if (ulScrollHeight > height) {
							var curTop = $new.prop('offsetTop');
							var scrollTop = $ul.scrollTop() - 2;
							if (curTop >= scrollTop + height) {
								$ul.scrollTop(curTop);
							}
						}
						return;
					default:
						text = $.trim($this.val());
				}
				if (text != settings.preinputVaule) {
					//						var inputbox_size = $this.attr('size');
					//						if(inputbox_size != 63  && inputbox_size < text.length * 2) {
					if (settings.agent && !settings.isPcHome) {
						return;
					} else {
						var size = 3;
						if (1 < text.length) {
							size = Math.round(text.length * 1.5);
						}
						if (size > 63) {
							size = 63
						}
						$this.attr('size', size);
					}
					//						}

					if (settings.type == 'request') {
						if (e.keyCode) {
							if (text.length) {
								text = text.toLowerCase();
								var count = 0;

								var arr = addressData.sorigin;
								settings.search.arr = addressData.search(text);

								if (settings.search.arr.length) {
									settings.search.c = 0;
									settings.search.sarr = [];


									settings.handle.setSearch.apply($root, [text]);
									settings.selector.box8.searchlist.show();
								} else {
									settings.selector.box8.searchlist.hide();
									settings.selector.box8.searchlist.children().remove();
								}
							}
						}
						if (!text.length) {
							settings.selector.box8.searchlist.hide();
							settings.selector.box8.searchlist.children().remove();

							if (settings.selector.box8.init.children().hasClass('focus')) {
								if (settings.selector.box8.recentlist.children().length) {
									settings.selector.box8.recentlist.parents('.user_addList').show();
								}
							} else {
								settings.selector.box8.recentlist.parents('.user_addList').hide();
								settings.selector.box8.recentlist.children('li.selected').removeClass('selected');
							}
						} else {
							settings.selector.box8.recentlist.parents('.user_addList').hide();
							settings.selector.box8.recentlist.children('li.selected').removeClass('selected');
						}
					} else {
						if (e.keyCode) {
							if (text.length) {
								text = text.toLowerCase();
								var count = 0;

								var arr = addressData.sorigin;
								settings.search.arr = addressData.search(text);

								if (settings.search.arr.length) {
									settings.search.c = 0;
									settings.search.sarr = [];


									settings.handle.setSearch.apply($root, [text]);
									settings.selector.box6.searchlist.show();
								} else {
									settings.selector.box6.searchlist.hide();
									settings.selector.box6.searchlist.children().remove();
								}
							}
						}
						if (!text.length) {
							settings.selector.box6.searchlist.hide();
							settings.selector.box6.searchlist.children().remove();
							/*if(settings.selector.box6.token_box.parent().hasClass('over')) {
								if(settings.selector.box6.init.children().hasClass('focus')) {
									if(settings.selector.box6.recentlist.children().length) {
										settings.selector.box6.recentlist.parents('.user_addList').show();
									}
								} else {
									settings.selector.box6.recentlist.parents('.user_addList').hide();
								}
							}*/
							if (settings.selector.box6.init.children().hasClass('focus')) {
								if (settings.selector.box6.recentlist.children().length) {
									settings.selector.box6.recentlist.parents('.user_addList').show();
								}
							} else {
								settings.selector.box6.recentlist.parents('.user_addList').hide();
								settings.selector.box6.recentlist.children('li.selected').removeClass('selected');
							}
						} else {
							settings.selector.box6.recentlist.parents('.user_addList').hide();
							settings.selector.box6.recentlist.children('li.selected').removeClass('selected');
						}
					}
				}
				settings.preinputVaule = text;
				if ($('#share_popup_token_box').children('span').length && settings.selector.box6.add.css('display') != 'none') settings.selector.box6.btn2.children('a').show();
				else settings.selector.box6.btn2.children('a.ok').hide();
			},
			'addandremove': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this).parents('li');
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				var data = $this.data('data');

				if (settings.owner.id == data.uid) {
					common.toast(settings.selector.toast, LanguagePack.ALREADY_AUTHORITY);
					return;
				}

				if (settings.type == 'request') {
					//console.log(settings.type);
				} else {
					var isexist = false;
					var $member = settings.selector.box6.userlist.children('li.user');
					for (var i = 0; i < $member.length; i++) {
						var $item = $member.eq(i);
						var data2 = $item.data('data');
						if (!data2.email) {
							continue;
						}
						if (data2.email.toLowerCase() == data.e.toLowerCase()) {
							data = {
								'id': null,
								'uid': (data2.userId ? data2.userId : null),
								'n': data2.username ? data2.username : data2.email,
								'e': data2.email
							};
							break;
						}
					}
				}
				if ($this.hasClass('focus')) {
					common.toast(settings.selector.toast, LanguagePack.SHARE_PEOPLEADDERRORMSG);
				} else {
					settings.handle.useradd.apply($root, [data, 1]);
					$this.addClass('focus');
					if (settings.type == 'request') {
						settings.selector.box8.token_box.children('input').val('').trigger('keyup');
					} else {
						settings.selector.box6.token_box.children('input').val('').trigger('keyup');
					}
				}
				if ($('#share_popup_token_box').children('span').length && settings.selector.box6.add.css('display') != 'none') settings.selector.box6.btn2.children('a').show();
				else settings.selector.box6.btn2.children('a.ok').hide();
			},
			'remove': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				var $span = $this.parents('span.name');
				var data = $span.data('data');

				var $search_li;
				if (settings.type == 'request') {
					$search_li = settings.selector.box8.searchlist.children('#search_cooper' + data.e.replace(/@/g, '\\@').replace(/\./g, '\\.').replace(/\+/g, '\\+').replace(/\-/g, '\\-'));
				} else {
					$search_li = settings.selector.box6.searchlist.children('#search_cooper' + data.e.replace(/@/g, '\\@').replace(/\./g, '\\.').replace(/\+/g, '\\+').replace(/\-/g, '\\-'));
				}

				$span.remove();
				if ($search_li.length) {
					$search_li.removeClass('focus');
				}
				if (settings.type == 'request') {
					settings.selector.box8.token_box.children('input').trigger('keyup');
				} else {
					settings.selector.box6.token_box.children('input').trigger('keyup');
				}
				if ($('#share_popup_token_box').children('span').length && settings.selector.box6.add.css('display') != 'none') settings.selector.box6.btn2.children('a').show();
				else settings.selector.box6.btn2.children('a.ok').hide();
			},
			'scroll': function (e) {
				if (e.stopPropagation) e.stopPropagation();
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');

				var arr;

				if (settings.search.arr.length <= 100) {
					return;
				}
				arr = settings.search.arr;

				if (settings.scroll) {
					clearTimeout(settings.scroll);
					settings.scroll = 0;
				}
				settings.scroll = setTimeout(function () {
					var top = $this.scrollTop();
					var height = $this.height();
					var scrollheight = $this.prop('scrollHeight');
					if (top == 0) {
						if (settings.search.c != 0) {
							if (settings.search.c == Math.ceil(arr.length / 100)) {
								settings.search.c--;
							}
							settings.search.c--;
							settings.handle.setSearch.apply($root, null);
							var newscroll = $this.prop('scrollHeight');
							if (scrollheight == newscroll) {
								$this.scrollTop(scrollheight / 2);
							} else {
								if (!settings.search.c) {
									$this.scrollTop(0);
								} else {
									$this.scrollTop(newscroll / 2);
								}
							}
						}
					} else if (top + height == scrollheight) {
						if (settings.search.c != Math.ceil(arr.length / 100)) {
							settings.search.c++;
							if (settings.search.c != Math.ceil(arr.length / 100)) {
								settings.handle.setSearch.apply($root, null);
								var newscroll = $this.prop('scrollHeight');
								if (scrollheight == newscroll) {
									$this.scrollTop(scrollheight / 2);
								} else {
									$this.scrollTop(scrollheight);
								}
							}
						}
					}
					if ($('#share_popup_token_box').children('span').length && settings.selector.box6.add.css('display') != 'none') settings.selector.box6.btn2.children('a').show();
					else settings.selector.box6.btn2.children('a.ok').hide();
				}, 100);
			}
		},
		'user': {
			'change_authority': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				if (settings.stop) {
					return;
				}

				var $li;
				var deleted = false;
				var authority = 1;
				var data = settings.selector.box6.changeauth.data('data');
				$li = settings.selector.box6.userlist.children('li#sharedUser_' + data.email.replace(/@/g, '\\@').replace(/\./g, '\\.').replace(/\+/g, '\\+').replace(/\-/g, '\\-'));

				if ($li.length == 0) {
					return;
				}
				if ($this.hasClass('edit')) {
					authority = 2;
				} else if ($this.hasClass('delete')) {
					authority = 3;
				}

				var data = $li.data('data');
				if (data.authority == authority) {
					if ($li.hasClass('edit_s')) {
						settings.editcount--;
						$li.removeClass('edit_s');
					} else if ($li.hasClass('read_s')) {
						$li.removeClass('read_s');
					} else if ($li.hasClass('delete')) {
						$li.removeClass('delete');
					}
					$li.removeClass('change');
				} else {
					if ($li.hasClass('edit_s')) {
						settings.editcount--;
						if (authority != 2) {
							$li.removeClass('edit_s');
							if (authority == 1) {
								$li.addClass('read');
							} else {
								$li.addClass('delete');
							}
						}
					} else if ($li.hasClass('read_s')) {
						if (authority != 1) {
							$li.removeClass('read_s');
							if (authority == 2) {
								$li.addClass('edit');
								settings.editcount++;
							} else {
								$li.addClass('delete');
							}
						}
					} else if ($li.hasClass('delete')) {
						if (authority != 3) {
							$li.removeClass('delete');
							if (authority == 2) {
								$li.addClass('edit');
								settings.editcount++;
							} else {
								$li.addClass('read');
							}
						}
					} else {
						if (authority == 1) {
							$li.addClass('read_s');
						} else if (authority == 2) {
							$li.addClass('edit_s');
							settings.editcount++;
						} else if (authority == 3) {
							$li.addClass('delete');
						}
						$li.addClass('change');
					}
				}
				settings.selector.box6.changeauth.hide();

				if (authority == 1) {
					$li.children('p').children('span.rt').children('a').text(LanguagePack.COOPERATION_ENABLE_READ + ' ▼');
				} else if (authority == 2) {
					$li.children('p').children('span.rt').children('a').text(LanguagePack.COOPERATION_ENABLE_WRITE + ' ▼');
				} else if (authority == 3) {
					$li.children('p').children('span.rt').children('a').text(LanguagePack.SHARE_STOP + ' ▼');
				}

				if (settings.selector.box6.userlist.children('li.change').length) {
					settings.selector.box6.init.addClass('userautochange');
					if (settings.agentType != 2 && settings.auth == 0) {
						if (settings.editcount) {
							settings.selector.box6.add.children('.notice').show();
						} else {
							settings.selector.box6.add.children('.notice').hide();
						}
					}
				} else {
					settings.selector.box6.init.removeClass('userautochange');
					if (settings.agentType != 2 && settings.auth == 0) {
						if (settings.authType == 'edit') {
							settings.selector.box6.add.children('.notice').show();
						} else {
							settings.selector.box6.add.children('.notice').hide();
						}
					}
				}
				$root.cooperation('checkSize');
			},
			'userChangeAuto': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);
				if ($this.hasClass('click')) {
					return;
				}
				$this.addClass('click');

				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');

				var $lis = settings.selector.box6.userlist.children('li.change');

				var isCreate = false;

				var arr = {
					'modify': [],
					'remove': []
				};

				var changeMyInfo = false;

				for (var i = 0; i < $lis.length; i++) {
					var $li = $lis.eq(i);
					var data = $li.data('data');
					var user = {};

					if (!changeMyInfo) {
						if ($li.hasClass('me')) {
							changeMyInfo = true;
							if ($li.hasClass('delete')) {
								settings.removeMe = true;
							} else {
								settings.removeMe = false;
							}
						}
					}
					if ($li.hasClass('delete')) {
						user.email = data.email;
						arr.remove.push(user);
					} else {
						if (data.idUser) {
							user.idUser = data.idUser;
						}

						user.email = data.email;
						user.authority = data.authority;
						if (user.authority == 1) {
							user.authority = 2;
							isCreate = true;
						} else if (user.authority == 2) {
							user.authority = 1;
						}
						arr.modify.push(user);
					}
				}
				var type = 1;
				if (isCreate && !settings.fileinfo.isPotype) {
					type = 2;
				}
				if (changeMyInfo) {
					$this.removeClass('click');
					$root.children().addClass('showpopup2');
				} else {
					if (type == 1) {
						if (arr.remove.length) {
							if (arr.modify.length) {
								var result = function () {
									jsonResponse.modifyAuthority($root, settings.fileinfo.workid, arr.modify, null, $this);
								}
								jsonResponse.removeShareUser($root, settings.fileinfo.workid, arr.remove, result);
							} else {
								jsonResponse.removeShareUser($root, settings.fileinfo.workid, arr.remove, null, $this);
							}
						} else {
							if (arr.modify.length) {
								jsonResponse.modifyAuthority($root, settings.fileinfo.workid, arr.modify, null, $this);
							}
						}
					} else {
						var $lis = settings.selector.box6.userlist.children('li.user');
						var arr2 = [];
						for (var i = 0; i < $lis.length; i++) {
							var $li = $lis.eq(i);
							if (!$li.hasClass('change')) {
								var user = {};
								var data = $li.data('data');
								if (data.idUser) {
									user.idUser = data.idUser;
								}
								user.email = data.email;
								user.authority = data.authority;
								arr2.push(user);
							}
						}
						arr2 = arr2.concat(arr.modify);

						settings.convert.cb = function () {
							//#GMX-7540
							if (arr.remove.length) {
								var result = function () {
									jsonResponse.createSharedFile($root, settings.fileinfo.id, arr2, true, '', $this);
								}
								jsonResponse.removeShareUser($root, settings.fileinfo.workid, arr.remove, result);
							} else {
								jsonResponse.createSharedFile($root, settings.fileinfo.id, arr2, true, '', $this);
							}
						};
						$root.children('.share_popup').hide();
						$root.children('.convert_popup').show();
						$root.cooperation('checkSize', 3);
						$this.removeClass('click');
					}
				}

			},
			'cancelChangeAuto': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');

				var $lis = settings.selector.box6.userlist.children('li.change');

				for (var i = 0; i < $lis.length; i++) {
					var $li = $lis.eq(i);
					var data = $li.data('data');
					if ($li.hasClass('delete')) {
						$li.removeClass('delete');
					} else if ($li.hasClass('edit_s')) {
						$li.removeClass('edit_s');
					} else if ($li.hasClass('read_s')) {
						$li.removeClass('read_s');
					}
					$li.removeClass('change');
					if (data.authority == 1) {
						$li.children('p').children('span.rt').children('a').text(LanguagePack.COOPERATION_ENABLE_READ + ' ▼');
					} else {
						$li.children('p').children('span.rt').children('a').text(LanguagePack.COOPERATION_ENABLE_WRITE + ' ▼');
					}
				}
				settings.selector.box6.init.removeClass('userautochange');
				settings.editcount = 0;
				if (settings.agentType != 2 && settings.auth == 0) {
					if (settings.authType == 'edit') {
						settings.selector.box6.add.children('.notice').show();
					} else {
						settings.selector.box6.add.children('.notice').hide();
					}
				}
				$root.cooperation('checkSize');
			},
			'preChangeUserAuto': function (e) {
				if (e.preventDefault) e.preventDefault();
				if (e.stopPropagation) e.stopPropagation();
				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				var $li = $this.parents('li');

				if (settings.readOnly2) {
					settings.selector.box6.changeauth.children('.edit').hide();
				} else {
					settings.selector.box6.changeauth.children('.edit').show();
				}
				var newdata = $this.parents('li').data('data');
				var prevdata = settings.selector.box6.changeauth.data('data');
				if (settings.selector.box6.changeauth.is(':visible') && prevdata && prevdata.email == newdata.email) {
					$root.click();
					return;
				}
				settings.selector.box6.changeauth.data('data', newdata);

				if (settings.agent && !settings.isPcHome) {
					settings.selector.box6.changeauth.css('top', (e.clientY + 10) + 'px');
				} else {
					settings.selector.box6.changeauth.css('top', (e.clientY - 85) + 'px');
				}

				settings.selector.box6.changeauth.show();

				$root.one('click', function () {
					settings.selector.box6.changeauth.hide();
				});
			}
		},
		'external': {
			'sendemail': function (e) {
				if (e.preventDefault) e.preventDefault();

				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				if (settings.stop) {
					return;
				}

				//AOM-9087
				if (settings.fileinfo.workid == null && settings.owner.id != settings.id) {
					var popupMessage = new Array();
					popupMessage[0] = LanguagePack.SHARE_UNAUTHORIZED_MSG;
					var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
						popupMessage: popupMessage
					}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
					popup.create();
					popup.show();
					//var $view = $('#popup_message_view');
					//$root.cooperation('sendsize', $view.width(), $view.height());
					return;
				}

				if (settings.auth == 0 && !settings.fileinfo.workid) {
					var mode = settings.fileinfo.customMode;
					if (!mode) {
						mode = (settings.fileinfo.User.length ? true : false);
					}
					var msg = LanguagePack.FILE_SHARED_PUBLIC_MSG;
					jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 1, mode, null, msg);
				}

				if (settings.agentType == 2) {
					var url = $this.closest('.share_popup').find('div.weblnk p.copy input').val();
					var settings2 = {
						'url': url,
						'fileName': settings.fileinfo.name,
					};
					outlookData = JSON.stringify(settings2);
					sendMessageToNative('outlook_send', getoutlookData());
				} else {
					var settings2 = {
						'fileId': settings.fileinfo.id,
						'type': 'weblink',
						'locale': local,
						'fileType': settings.fileinfo.type,
						'fileName': settings.fileinfo.name,
						'usercnt': 0,
						'externalAuthority': settings.externalAuthority,
						'location' : settings.docPos
					};
					$("#address").sendEmail(settings2);
				}

				//logTracking
				var webData = $LOGMODEL.getData();
				webData['ti'].t = LogType.tracking.event;
				webData['obj'].ec = 'ux';
				webData['obj'].ea = 'cl';
				webData['obj'].dp = settings.log.dp;
				webData['obj'].di = settings.fileinfo.id;
				webData['obj'].el = "email";
				if (settings.type == "weblink") {
					webData['obj'].dt = "CopyShareLink";
				} else {
					webData['obj'].dt = "ShareCommon";
				}
				$LOGMODEL.sendData(webData);
				//}
			},
			'sendfacebook': function (e) {
				if (e.preventDefault) e.preventDefault();

				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				if (settings.stop) {
					return;
				}
				//AOM-9087
				if (settings.fileinfo.workid == null && settings.owner.id != settings.id) {
					var popupMessage = new Array();
					popupMessage[0] = LanguagePack.SHARE_UNAUTHORIZED_MSG;
					var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
						popupMessage: popupMessage
					}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
					popup.create();
					popup.show();
					//var $view = $('#popup_message_view');
					//$root.cooperation('sendsize', $view.width(), $view.height());
					return;
				}

				//							GMX-5319
				if (multiShare) {
					if (!settings.fileinfo.workid) {
						var mode = settings.fileinfo.customMode;
						if (!mode) {
							mode = (settings.fileinfo.User.length ? true : false);
						}
						var msg = LanguagePack.FILE_SHARED_PUBLIC_MSG;
						jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 1, mode, null, msg);
					}
				}

				var url = $this.closest('.share_popup').find('div.weblnk p.copy input').val(),
					name = "\'" + settings.fileinfo.name + "\':   " + url,
					img = url + GET_WEBLINK_THUMBNAIL + settings.fileinfo.id.toString() + '?' + getTime(),
					stop = false;
				try {
					fbookDialogOpen(url, name, img, LanguagePack.POLink_DOC_SHARE);
				} catch (err) {
					if (e.stopPropagation) e.stopPropagation();
					stop = true;

				}
				if (!stop) {
					if (settings.auth == 0 && !settings.fileinfo.workid) {
						var mode = settings.fileinfo.customMode;
						if (!mode) {
							mode = (settings.fileinfo.User.length ? true : false);
						}
						var msg = LanguagePack.FILE_SHARED_PUBLIC_MSG;
						jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 1, mode, null, msg);
					}
				}

				//logTracking
				var webData = $LOGMODEL.getData();
				webData['ti'].t = LogType.tracking.event;
				webData['obj'].ec = 'ux';
				webData['obj'].ea = 'cl';
				webData['obj'].di = settings.fileinfo.id;
				webData['obj'].el = "facebook";
				webData['obj'].dp = settings.log.dp;
				if (settings.type == "weblink") {
					webData['obj'].dt = "CopyShareLink";
				}
				$LOGMODEL.sendData(webData);

				//logTracking
				var webData = $LOGMODEL.getData();
				webData['ti'].t = LogType.tracking.event;
				webData['obj'].ec = 'ux';
				webData['obj'].ea = 'cl';
				webData['obj'].dp = settings.log.dp;
				webData['obj'].di = settings.fileinfo.id;
				webData['obj'].el = "facebook";
				if (settings.type == "weblink") {
					webData['obj'].dt = "CopyShareLink";
				} else {
					webData['obj'].dt = "ShareCommon";
				}
				$LOGMODEL.sendData(webData);
				//}

			},
			'sendtwitter': function (e) {
				if (e.preventDefault) e.preventDefault();

				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				if (settings.stop) {
					return;
				}

				//AOM-9087
				if (settings.fileinfo.workid == null && settings.owner.id != settings.id) {
					var popupMessage = new Array();
					popupMessage[0] = LanguagePack.SHARE_UNAUTHORIZED_MSG;
					var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
						popupMessage: popupMessage
					}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
					popup.create();
					popup.show();
					//var $view = $('#popup_message_view');
					//$root.cooperation('sendsize', $view.width(), $view.height());
					return;
				}

				//							GMX-5319
				if (multiShare) {
					if (!settings.fileinfo.workid) {
						var mode = settings.fileinfo.customMode;
						if (!mode) {
							mode = (settings.fileinfo.User.length ? true : false);
						}
						var msg = LanguagePack.FILE_SHARED_PUBLIC_MSG;
						jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 1, mode, null, msg);
					}
				}

				var url = $this.closest('.share_popup').find('div.weblnk p.copy input').val();
				var name;
				if (/MSIE (\d+\.\d+);/.test(navigator.userAgent)) {
					var ver = new Number(RegExp.$1);
					if (ver <= 8) {
						name = LanguagePack.POLink_DOC_SHARE + '\r\n' + settings.fileinfo.name + '\r\n';
					} else
						name = LanguagePack.POLink_DOC_SHARE + '\r' + settings.fileinfo.name + '\r';
				} else {
					name = LanguagePack.POLink_DOC_SHARE + '\r' + settings.fileinfo.name + '\r';
				}
				var x = screen.width / 2 - 533 / 2;
				var y = screen.height / 2 - 533 / 2;

				var stop = false;
				try {
					window.open(twitterWinOpen2(url, name), "", 'left=' + x + ',top=' + y + ",width=533, height=533, scrollbars=1", "_blank");
				} catch (err) {
					if (e.stopPropagation) e.stopPropagation();
					stop = true;
				}
				if (!stop) {
					if (settings.auth == 0 && !settings.fileinfo.workid) {
						var mode = settings.fileinfo.customMode;
						if (!mode) {
							mode = (settings.fileinfo.User.length ? true : false);
						}
						var msg = LanguagePack.FILE_SHARED_PUBLIC_MSG;
						jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 1, mode, null, msg);
					}
				}
				//logTracking
				var webData = $LOGMODEL.getData();
				webData['ti'].t = LogType.tracking.event;
				webData['obj'].ec = 'ux';
				webData['obj'].ea = 'cl';
				webData['obj'].dp = settings.log.dp;
				webData['obj'].di = settings.fileinfo.id;
				webData['obj'].el = "twitter";
				if (settings.type == "weblink") {
					webData['obj'].dt = "CopyShareLink";
				} else {
					webData['obj'].dt = "ShareCommon";
				}
				$LOGMODEL.sendData(webData);
				//}
			},
			'sendqq': function (e) {
				if (e.preventDefault) e.preventDefault();

				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');
				if (settings.stop) {
					return;
				}

				//AOM-9087
				if (settings.fileinfo.workid == null && settings.owner.id != settings.id) {
					var popupMessage = new Array();
					popupMessage[0] = LanguagePack.SHARE_UNAUTHORIZED_MSG;
					var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
						popupMessage: popupMessage
					}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
					popup.create();
					popup.show();
					//var $view = $('#popup_message_view');
					//$root.cooperation('sendsize', $view.width(), $view.height());
					return;
				}

				if (!settings.fileinfo.workid) {
					var mode = settings.fileinfo.customMode;
					if (!mode) {
						mode = (settings.fileinfo.User.length ? true : false);
					}
					var msg = LanguagePack.FILE_SHARED_PUBLIC_MSG;
					jsonResponse.modifyAuthorityWeblink($root, settings.fileinfo.id, 1, mode, null, msg);
				}

				if (settings.externalAuthority == 2) {
					common.toast(settings.selector.toast, LanguagePack.COOPERATION_AUTHENTICATEDFAIL_MSG4);
				} else {
					if (settings.fileinfo.publicAuthority) {
						var url = '';
						if (location.host == "pcofficewebview.polarisoffice.com" || location.host == "polarisoffice.com" || location.host == "www.polarisoffice.com") {
							url = location.protocol + '//' + 'www.polarisoffice.com';
						} else if (location.host == "verifycloud.polarisoffice.com" || location.host == "verify-pcview.polarisoffice.com") {
							url = location.protocol + '//' + 'verifycloud.polarisoffice.com';
						} else {
							url = location.protocol + '//' + location.host;
						}
						var img = url + GET_WEBLINK_THUMBNAIL + settings.fileinfo.id.toString() + '?' + getTime();
						url += '/d/' + $.encodeBase62(settings.fileinfo.id.toString());
						/*var url = location.protocol + '//' + location.host + '/d/' + $.encodeBase62(settings.fileinfo.id.toString());*/
						var name = "\'" + settings.fileinfo.name + "\':   " + url;

						/*var img = location.protocol + '//' + location.host + GET_WEBLINK_THUMBNAIL + settings.fileinfo.id.toString() + '?' + getTime();*/
						if (settings.agentType == 2) {
							if (onCreateOtl) return;
							onCreateOtl = true;
							setTimeout(function () {
								onCreateOtl = false;
							}, 4000);
						}
						try {
							QQDialogOpen(url, LanguagePack.POLink_DOC_SHARE, settings.fileinfo.name, img);
						} catch (err) {
							console.log(err);
						}
					} else {
						common.toast(settings.selector.toast, LanguagePack.COOPERATION_PRIVATE_ACCESSS_MSG2);
					}
				}
			},
		},
		'recent': {
			'close': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);
				$this.parents('.user_addList').hide();
			},
			'detail': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);
				var $li = $this.parents('li');
				if ($li.hasClass('on')) {
					$li.removeClass('on');
				} else {
					$li.addClass('on');
					$li.parent().scrollTop($li.prop('offsetTop') - 30);
				}
			},
			'invite': function (e) {
				if (e.preventDefault) e.preventDefault();

				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var data = $this.parents('li').data('data');
				var settings = $root.data('settings');

				if (settings.type == 'request') {
					settings.selector.box8.recentlist.children('li.on').removeClass('on');
				} else {
					settings.selector.box6.recentlist.children('li.on').removeClass('on');
				}
				var arr = [];
				for (var i = 0; i < data.length; i++) {
					var json = {
						'name': data[i].name,
						'email': data[i].email
					};
					arr.push(json);
				}
				$root.cooperation('setemails', arr);
			},
			'remove': function (e) {
				if (e.preventDefault) e.preventDefault();

				var $this = $(this);
				var id = $this.parents('li').attr('id').split('cooper_recent_')[1];
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');

				inviteList.a_delete({
					'type': 'GROUP',
					'id': id
				}, function (res) {
					if (!res.resultCode) {
						if (settings.type == 'request') {
							settings.selector.box8.recentlist.children('#cooper_recent_' + id).remove();
							if (!settings.selector.box8.recentlist.children().length) {
								settings.selector.box8.recentlist.parents('.user_addList').hide();
								settings.selector.box8.recentlist.children('li.selected').removeClass('selected');
							}
						} else {
							settings.selector.box6.recentlist.children('#cooper_recent_' + id).remove();
							if (!settings.selector.box6.recentlist.children().length) {
								settings.selector.box6.recentlist.parents('.user_addList').hide();
								settings.selector.box6.recentlist.children('li.selected').removeClass('selected');
							}
						}
					}
				}, function (res) {});
			},
			'removeall': function (e) {
				if (e.preventDefault) e.preventDefault();

				var $this = $(this);
				var $root = $this.parents('#Cooperation');
				var settings = $root.data('settings');

				inviteList.a_delete({
					'type': 'ALL'
				}, function (res) {
					if (!res.resultCode) {
						if (settings.type == 'request') {
							settings.selector.box8.recentlist.children().remove();
							settings.selector.box8.recentlist.parents('.user_addList').hide();
						} else {
							settings.selector.box6.recentlist.children().remove();
							settings.selector.box6.recentlist.parents('.user_addList').hide();
						}
					}
				}, function (res) {});
			}
		},
		'showDocPos' : function(e){
			commonPreventEvent(e);
			var $this = $(this),
				$parent = $this.closest('.share_popup'),
				$root = $this.parents('#Cooperation'),
				settings = $root.data('settings'),
				url = '';

			if (location.host == "pcofficewebview.polarisoffice.com" || location.host == "polarisoffice.com" || location.host == "www.polarisoffice.com") {
				url = location.protocol + '//' + 'www.polarisoffice.com';
			} else if (location.host == "verify-pcview.polarisoffice.com") {
				url = location.protocol + '//' + 'verifycloud.polarisoffice.com';
			} else if (location.host == "vf-ca-pcview.polarisoffice.com") {
				url = location.protocol + '//' + 'vf-ca-cloud.polarisoffice.com';
			} else {
				url = location.protocol + '//' + location.host;
			}
			url += '/d/' + $.encodeBase62(settings.fileinfo.id.toString());

			if($parent.find(".docPosShare").is(":checked")){
				settings.checkedPosShare = true;
				url += '/l/' + settings.docPos;
			} else {
				settings.checkedPosShare = false;
				//$this.prop('checked' , false);
			}

			$root.find('.share_popup .shareBox div.weblnk p.copy input').val(url);

		},
		'showDocPosInfo' : function(e){
            commonPreventEvent(e);
            var $this = $(this),
                $parent = $this.closest('.location_share'),
                $info = $parent.find('.location_share_txt');
            if($info.css('display') == 'none'){
                $info.show();
            } else {
                $info.hide();
            }			
			var popHeight = $('#Cooperation').cooperation('checkSize');
			sendMessageToNative('changesize', popHeight);
        },
		'addCommentShareLink' : function(e){
			commonPreventEvent(e);
			sendMessageToNative('addSL_toComment', $(this).closest('.share_popup').find('div.weblnk p.copy input').val());
		}
	};

	var jsonResponse = {
		'addShareUser': function () {
			var arg = arguments;
			var webdata = {
				'id': arg[1],
				'attendanceList': arg[2],
				'publicAuthority': arg[3]
			};
			if (arg[4]) {
				webdata.message = arg[4];
			}
			popcorn.addShareUser(webdata, function (res) {
				jsonReceive.addShareUser.onSuccessCB(res, arg[0], arg[5]);
			}, function (res) {});
		},
		'removeShareUser': function () {
			var arg = arguments;
			var webdata = {
				'id': arg[1],
				'attendanceList': arg[2]
			};
			popcorn.removeShareUser(webdata, function (res) {
				jsonReceive.removeShareUser.onSuccessCB(res, arg[0], arg[3], arg[4]);
			}, function (res) {});
		},
		'createSharedFile': function () {
			var arg = arguments;
			var webdata = {
				'fileId': arg[1],
				'attendanceList': arg[2]
			};
			if (arg[4]) {
				webdata.message = arg[4];
			}

			if (arg[6]) {
				webdata.publicAuthority = arg[6];
			}
			popcorn.createSharedFile(webdata, function (res) {
				jsonReceive.createSharedFile.onSuccessCB(res, arg[0], arg[3], arg[5], arg[2]);
			}, function (res) {});
		},
		'getShareFileInfo': function () {
			var arg = arguments;
			var webdata = {
				'fileId': '' + arg[1].id,
				'workId': arg[1].id == '' ? arg[1].workid : ''
			};
			popcorn.getShareFileInfo(webdata, function (res) {
				jsonReceive.getShareFileInfo.onSuccessCB(res, arg[0], arg[2], arg[3], arg[4]);
			}, function (res) {});
		},
		//							GMX-5319
		'getShareFileInfoMulti': function () {
			var arg = arguments;
			if (arg[1].workids) {
				var webdata = {
					'fileIds': arg[1].id,
					'workIds': arg[1].workids
				};
			} else if (arg[1].id) {
				var webdata = {
					'fileIds': arg[1].id
				};
			}
			popcorn.getShareFileInfo(webdata, function (res) {
				jsonReceive.getShareFileInfoMulti.onSuccessCB(res, arg[0], arg[2], arg[3], arg[4]);
			}, function (res) {});
		},
		'modifyAuthority': function () {
			var arg = arguments;
			var webdata = {
				'id': arg[1],
				'attendanceList': arg[2]
			};
			popcorn.modifyAuthority(webdata, function (res) {
				jsonReceive.modifyAuthority.onSuccessCB(res, arg[0], arg[3], arg[4]);
			}, function (res) {});
		},
		'modifyAuthorityWeblink': function () {
			var arg = arguments;
			var webdata = {
				'fileId': arg[1],
				'publicAuthority': arg[2],
				'isCustomMode': arg[3]
			};
			if (typeof arg[4] !== 'undefined' && arg[4] != null) {
				webdata.removeAllUser = arg[4];
			}
			var settings = arg[0].data('settings');
			if (settings.channel != 'undefined' && settings.channel != null) {
				webdata.channel = settings.channel;
			}
			popcorn.modifyAuthorityWeblink(webdata, function (res) {
				jsonReceive.modifyAuthorityWeblink.onSuccessCB(res, arg[0], arg[3], arg[2], arg[5]);
			}, function (res) {});
		},
		//							GMX-5319
		'modifyAuthorityWeblinkMulti': function () {
			var arg = arguments;
			var webdata = {
				'fileIds': arg[1],
				'publicAuthority': arg[2],
				'isCustomMode': arg[3]
			};
			var tempData = [];
			if (typeof arg[4] !== 'undefined' && arg[4] != null) {
				webdata.removeAllUser = arg[4];
			}
			if (typeof arg[5] !== 'undefined' && arg[5] != null) {
				for (var i = 0; i < arg[5].length; i++) {
					tempData.push({
						'coworkId': arg[5][i].workid,
						'fileId': arg[5][i].id,
						'createTime': '0',
						'resultCode': '0',
						'resultMessage': null
					});
				}
			}
			if (webdata.fileIds.length > 0) {
				popcorn.modifyAuthorityWeblink(webdata, function (res) {
					if (tempData.length > 0) {
						if (res.mulitiWeblinkList != null) {
							if (res.id != null) {
								res.mulitiWeblinkList.push({
									'coworkId': res.id,
									'fileId': arg[1][0],
									'createTime': '0',
									'resultCode': '0',
									'resultMessage': null
								});
							}
							for (var i = 0; i < tempData.length; i++) {
								res.mulitiWeblinkList.push(tempData[i]);
							}
						} else {
							res.mulitiWeblinkList = tempData;
						}
					}
					if (res.deniedFiles != null && res.deniedFiles.length > 0) {
						for (var i = 0; i < res.deniedFiles.length; i++) {
							res.mulitiWeblinkList.push({
								'coworkId': null,
								'fileId': res.deniedFiles[i],
								'createTime': '0',
								'resultCode': '0',
								'resultMessage': null
							});
						}
						res.deniedFiles = [];
					}
					//alert('a'+JSON.stringify(res));
					jsonReceive.modifyAuthorityWeblinkMulti.onSuccessCB(res, arg[0], arg[3], arg[2], arg[5]);
				}, function (res) {});
			} else {
				popcorn.modifyAuthorityWeblink(webdata, function (res) {

					res.mulitiWeblinkList = [];
					if (tempData.length > 0) {
						if (res.mulitiWeblinkList != null) {
							if (res.id != null) {
								res.mulitiWeblinkList.push({
									'coworkId': res.id,
									'fileId': arg[1][0],
									'createTime': '0',
									'resultCode': '0',
									'resultMessage': null
								});
							}
							for (var i = 0; i < tempData.length; i++) {
								res.mulitiWeblinkList.push(tempData[i]);
							}
						} else {
							res.mulitiWeblinkList = tempData;
						}
					}
					if (res.deniedFiles != null && res.deniedFiles.length > 0) {
						for (var i = 0; i < res.deniedFiles.length; i++) {
							res.mulitiWeblinkList.push({
								'coworkId': null,
								'fileId': res.deniedFiles[i],
								'createTime': '0',
								'resultCode': '0',
								'resultMessage': null
							});
						}
						res.deniedFiles = [];
					}
					//alert('b'+JSON.stringify(res));
					jsonReceive.modifyAuthorityWeblinkMulti.onSuccessCB(res, arg[0], arg[3], arg[2], arg[5]);
				}, function (res) {});
			}

		},
		'deleteSharedFile': function () {
			var arg = arguments;
			var webdata = {
				'idList': arg[1]
			};

			popcorn.deleteSharedFile(webdata, function (res) {
				jsonReceive.deleteSharedFile.onSuccessCB(res, arg[0], arg[1], arg[2]);
			}, function (res) {});
		},
		'reshare': function () {
			var arg = arguments;
			var webdata = {
				'workId': arg[1].workid,
				'fileId': arg[1].id,
				'attendanceList': arg[2]
			};
			if (arg[3]) {
				webdata.message = arg[3];
			}
			popcorn.reshare(webdata, function (res) {
				jsonReceive.reshare.onSuccessCB(res, arg[0], arg[1], arg[2], arg[4]);
			}, function (res) {});
		}
	};

	var jsonReceive = {
		'addShareUser': {
			'onSuccessCB': function () {
				var arg = arguments;
				var settings = arg[1].data('settings');
				if (CheckResult(null, arg[0])) {
					var deniedUserLength = 0;
					var str = "";
					if (typeof (arg[0].deniedList) != 'undefined' && arg[0].deniedList) {
						deniedUserLength = arg[0].deniedList.length;
					}

					if (arg[0].attendanceList.length) {
						if (arg[0].attendanceList.length == 1) {
							str = LanguagePack.COOPERATION_INVITE_ONE_MSG(arg[0].attendanceList[0].email);
						} else {
							str = LanguagePack.COOPERATION_INVITE_MORE_MSG(arg[0].attendanceList[0].email, arg[0].attendanceList.length - 1);
						}
					}
					jsonResponse.getShareFileInfo(arg[1], settings.fileinfo, false, true);

					settings.handle.changeMode.apply(arg[1], ['clear']);
					inviteList.a_get(function () {
						var list = inviteList.get();
						if (JSON.stringify(settings.inviteData) != JSON.stringify(list)) {
							settings.inviteData = list;
							settings.handle.setrecentinvitedlist.apply(arg[1], []);
						}
					}, function (res) {});
					if (deniedUserLength) {
						if (str) {
							str += '<br>(' + LanguagePack.COOPERATION_INVITE_NO_MSG(arg[0].deniedList.length) + ')';
						} else {
							str += LanguagePack.COOPERATION_INVITE_NO_MSG(arg[0].deniedList.length);
						}
					}
					if (str) {
						common.toast(settings.selector.toast, str, false);
					}
				} else {
					if (arg[0].resultCode == 161) {
						common.toast(settings.selector.toast, LanguagePack.COOPERATION_CONSTRAINT_TEAMFOLDER_MSG2);
						if (arg[0].attendanceList) {
							settings.handle.setdeniedList.apply(arg[1], [arg[0].attendanceList]);
						}
					} else if (arg[0].resultCode == 162) {
						common.toast(settings.selector.toast, LanguagePack.COOPERATION_CONSTRAINT_TEAMFOLDER_MSG2);
					} else if (arg[0].resultCode == 172) {
						common.toast(settings.selector.toast, LanguagePack.SHARE_NO_INVITE);
					}
				}
				if (arg[2]) {
					arg[2].removeClass('click');
				}
			},
			'onFailCB': function () {}
		},
		'removeShareUser': {
			'onSuccessCB': function () {
				var arg = arguments;
				if (CheckResult(null, arg[0])) {
					var settings = arg[1].data('settings');
					if (!arg[2]) {
						jsonResponse.getShareFileInfo(arg[1], settings.fileinfo, false, true);
						common.toast(settings.selector.toast, LanguagePack.COOPERATION_REOMVE_USER);
						settings.selector.box6.init.removeClass('userautochange');
					}

				}
				if (arg[2]) {
					arg[2].call();
				}
				if (arg[3]) {
					arg[3].removeClass('click');
				}
			},
			'onFailCB': function () {}
		},
		'createSharedFile': {
			'onSuccessCB': function () {
				var arg = arguments;
				var settings = arg[1].data('settings');
				if (CheckResult(null, arg[0])) {
					var deniedUserLength = 0;
					var str = "";
					if (typeof (arg[0].deniedList) != 'undefined' && arg[0].deniedList) {
						deniedUserLength = arg[0].deniedList.length;
					}
					if (arg[4].length - deniedUserLength) {
						if (arg[4].length - deniedUserLength == 1) {
							str = LanguagePack.COOPERATION_INVITE_ONE_MSG(arg[4][0].email);
						} else {
							str = LanguagePack.COOPERATION_INVITE_MORE_MSG(arg[4][0].email, arg[4].length - deniedUserLength - 1);
						}
					}

					jsonResponse.getShareFileInfo(arg[1], {
						'id': '',
						'workid': arg[0].id
					}, false, true);
					if (!arg[1].children('.convert_popup2').is(':visible')) {
						settings.handle.changeMode.apply(arg[1], ['clear']);
					}
					inviteList.a_get(function () {
						var list = inviteList.get();
						if (JSON.stringify(settings.inviteData) != JSON.stringify(list)) {
							settings.inviteData = list;
							settings.handle.setrecentinvitedlist.apply(arg[1], []);
						}
					}, function (res) {});

					if (deniedUserLength) {
						if (str) {
							str += '<br>(' + LanguagePack.COOPERATION_INVITE_NO_MSG(arg[0].deniedList.length) + ')';
						} else {
							str += LanguagePack.COOPERATION_INVITE_NO_MSG(arg[0].deniedList.length);
						}
					}
					if (str) {
						common.toast(settings.selector.toast, str, false);
					}
				} else {
					if (arg[0].resultCode == 161) {
						common.toast(settings.selector.toast, LanguagePack.COOPERATION_CONSTRAINT_TEAMFOLDER_MSG2);
						if (arg[0].deniedList) {
							settings.handle.setdeniedList.apply(arg[1], [arg[0].deniedList]);
						}
					} else if (arg[0].resultCode == 203) {
						common.toast(settings.selector.toast, LanguagePack.CREATE_FAIL_POFORMAT_MEMORY);
					} else if (arg[0].resultCode == 162) {
						common.toast(settings.selector.toast, LanguagePack.COOPERATION_CONSTRAINT_TEAMFOLDER_MSG2);
					} else if (arg[0].resultCode == 172) {
						common.toast(settings.selector.toast, LanguagePack.SHARE_NO_INVITE);
					} else {
						common.toast(settings.selector.toast, LanguagePack.CREATE_FAIL_POFORMAT);
					}
					if (arg[1].children('.convert_popup2').is(':visible')) {
						arg[1].children('.convert_popup2').hide();
						settings.handle.changeMode.apply(arg[1], [settings.type]);

						arg[1].cooperation('checkSize');
					}
				}
				if (arg[3]) {
					arg[3].removeClass('click');
				}
			},
			'onFailCB': function () {}
		},
		'deleteSharedFile': {
			'onSuccessCB': function () {
				var arg = arguments;
				if (CheckResult(null, arg[0])) {
					var settings = arg[1].data('settings');
					common.toast(settings.selector.toast, LanguagePack.SCREEN_DISABLESHARINGLINK);
					settings.fileinfo.shared = 0;
					settings.log.tsm = 1;
					var result = function () {
						if (arg[1].children('.share_popup').is(':visible')) {
							settings.stop = false;
							arg[1].children('.make').children('.shareBox').children('.box').children('a.btn_close').trigger('click');
						}
					}
					setTimeout(result, 2000);

					if (settings.synccb) {
						settings.synccb.call();
					}

				} else {
					settings.stop = false;
				}
			},
			'onFailCB': function () {}
		},
		'getShareFileInfo': {
			'onSuccessCB': function () {
				var arg = arguments;
				var settings = arg[1].data('settings');
				if (CheckResult(null, arg[0])) {
					//AOM-5836
					if (arg[3]) {
						var change_shared = '';
						if (arg[0].work.shared) {
							change_shared = arg[0].work.shared;
						}

						if (settings.appendLi != null && settings.appendLi.length) {
							if (settings.appendLi.attr('id').indexOf('favorite') > -1) {
								var getfavoriteList_ = $('#favorite_list').data('settings').favoriteList;

								for (var i = 0; i < getfavoriteList_.length; i++) {
									var data_ = getfavoriteList_[i];
									if (data_.fileId == settings.fileinfo.id) {
										var newarr = {
											'deletedTime': data_.deletedTime,
											'editable': data_.editable,
											'fileId': data_.fileId,
											'fileName': data_.fileName,
											'fileRevision': data_.fileRevision,
											'fileType': data_.fileType,
											'hide': data_.hide,
											'lastAccessTime': data_.lastAccessTime,
											'lastModified': data_.lastModified,
											'lastModifiedRevision': data_.lastModifiedRevision,
											'lastRevision': data_.lastRevision,
											'md5': data_.md5,
											'pageCount': data_.pageCount,
											'parentId': data_.parentId,
											'path': data_.path,
											'pinUp': data_.pinUp,
											'referenceId': data_.referenceId,
											'shared': (change_shared == true ? true : false),
											'size': data_.size,
											'starred': data_.starred,
											'starredTime': data_.starredTime,
											'taskId': data_.taskId,
											'teamFile': data_.teamFile,
											'userid': data_.userid,
											'weblinkCreated': data_.weblinkCreated
										};
										getfavoriteList_.splice(i, 1, newarr);
									}
								}

								$('#favorite_list').data('settings').favoriteList = getfavoriteList_;
							}
						}
					}

					arg[1].cooperation('setShareFileInfo', arg[0], arg[2], arg[3]);
					if (typeof arg[4] != 'undefined') {
						arg[4].apply();
					}
				} else {
					var strMsg = '';
					if (arg[0].resultCode == 2106) {
						strMsg = LanguagePack.NODOCEXISTINFOLDER;
					} else if (arg[0].resultCode == 209) {
						strMsg = LanguagePack.SCREEN_NODOCEXIST;
					}
					if (arg[1].is(':visible')) {
						common.toast(settings.selector.toast, strMsg);
					} else {
						var popupMessage = new Array();
						popupMessage[0] = strMsg;
						var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
							popupMessage: popupMessage
						}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
						popup.create();
						popup.show();
						if (settings != null && settings.agentType == 2 && $('#closecooperation').length) {
							var $view = $('#popup_message_view');
							$this.cooperation('sendsize', $view.width(), $view.height());
							sendMessageToNative('layoutcomplete');
						}
					}
				}
			},
			'onFailCB': function () {}
		},
		//							GMX-5319
		'getShareFileInfoMulti': {
			'onSuccessCB': function () {
				var arg = arguments;

				if (CheckResult(null, arg[0])) {
					arg[1].cooperation('setShareFileInfoMulti', arg[0], arg[2], arg[3]);
					if (typeof arg[4] != 'undefined') {
						arg[4].apply();
					}
				} else if (arg[0].resultCode == 209) {
					var popupMessage = new Array();
					popupMessage[0] = LanguagePack.SCREEN_NODOCEXIST;
					var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
						popupMessage: popupMessage
					}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
					popup.create();
					popup.show();
				}
			},
			'onFailCB': function () {}
		},

		'modifyAuthority': {
			'onSuccessCB': function () {
				var arg = arguments;
				var settings = arg[1].data('settings');
				if (CheckResult(null, arg[0])) {
					if (!arg[2]) {
						jsonResponse.getShareFileInfo(arg[1], settings.fileinfo, false, false);
						common.toast(settings.selector.toast, LanguagePack.COOPERATION_MODIFY_AUTH_MSG);
						if (settings.selector.box6.init.hasClass('userautochange')) {
							settings.selector.box6.init.removeClass('userautochange');
						} else {
							settings.handle.changeMode.apply(arg[1], ['clear']);
						}
						if (arg[1].children().hasClass('request')) {
							settings.handle.changeMode.apply(arg[1], ['clear']);
						}
						arg[1].cooperation('checkSize');
					}

				}
				if (arg[2]) {
					arg[2].call();
				}
				if (arg[3]) {
					arg[3].removeClass('click');
				}
			},
			'onFailCB': function () {}
		},
		'modifyAuthorityWeblink': {
			'onSuccessCB': function () {
				var arg = arguments;
				var settings = arg[1].data('settings');
				if (CheckResult(null, arg[0])) {
					if (arg[4]) {
						common.toast(settings.selector.toast, arg[4]);
					}

					var data = settings.fileinfo;
					if (arg[0].id) {
						data = {
							'id': data.id,
							'workid': arg[0].id
						}
					}
					jsonResponse.getShareFileInfo(arg[1], data, arg[2], true);
					//							GMX-5319
					settings.selector.box6.init.removeClass('userautochange');
				} else {
					var strMsg = '';
					if (arg[0].resultCode == 161) {
						strMsg = LanguagePack.COOPERATION_CONSTRAINT_TEAMFOLDER_MSG2;
					} else if (arg[0].resultCode == 203) {
						strMsg = LanguagePack.CREATE_FAIL_POFORMAT_MEMORY;
					} else if (arg[0].resultCode == 10000 && settings.fileinfo.type == 'hwp') {
						strMsg = '한글(HWP) 2000 버전부터 편집 가능으로 공유할 수 있습니다.';
					} else if (arg[0].resultCode == 2106) {
						strMsg = LanguagePack.NODOCEXISTINFOLDER;
					} else if (arg[0].resultCode == 209) {
						strMsg = LanguagePack.SCREEN_NODOCEXIST;
					} else {
						strMsg = LanguagePack.CREATE_FAIL_POFORMAT;
					}
					if (arg[1].is(':visible')) {
						common.toast(settings.selector.toast, strMsg);
						if (arg[1].children('.convert_popup2').is(':visible')) {
							arg[1].children('.convert_popup2').hide();
							settings.handle.changeMode.apply(arg[1], [settings.type]);
							arg[1].cooperation('checkSize');
						}
					} else {
						var popupMessage = new Array();
						popupMessage[0] = strMsg;
						var popup = new PopupMessage(PopupType.DEFAULT, ButtonType.CONFIRM, LanguagePack.KEYWORD_ALERT, {
							popupMessage: popupMessage
						}, defaultAlertCB, defaultAlertCB, defaultAlertCB);
						popup.create();
						popup.show();
						if (settings != null && settings.agentType == 2 && $('#closecooperation').length) {
							var $view = $('#popup_message_view');
							arg[1].cooperation('sendsize', $view.width(), $view.height());
							sendMessageToNative('layoutcomplete');
						}
					}
				}
			},
			'onFailCB': function () {}
		},
		//							GMX-5319
		'modifyAuthorityWeblinkMulti': {
			'onSuccessCB': function () {
				var arg = arguments;
				var settings = arg[1].data('settings');
				if (CheckResult(null, arg[0])) {
					if (arg[4]) {
						common.toast(settings.selector.toast, arg[4]);
					}
					var data = settings.fileinfo;
					var arrs = [];
					var arrs2 = [];
					/*if(arg[0].id) {
						data =  {'id' : '', 'workid' : arg[0].id}
					}*/
					//						if($.isArray(settings.fileinfo.id)) {

					if (arg[0].mulitiWeblinkList) {
						for (var i = 0; i < arg[0].mulitiWeblinkList.length; i++) {
							arrs.push(arg[0].mulitiWeblinkList[i].coworkId);
							arrs2.push(arg[0].mulitiWeblinkList[i].fileId);
						}
						if (arg[0].deniedFiles) {
							for (var i = 0; i < arg[0].deniedFiles.length; i++) {
								arrs.push(arg[0].deniedFiles[i]);
								arrs2.push(arg[0].deniedFiles[i]);
							}
						}
						data = {
							'id': arrs2,
							'workids': arrs
						};
					}
					jsonResponse.getShareFileInfoMulti(arg[1], data, arg[2], true);
					settings.selector.box6.init.removeClass('userautochange');
				} else {
					if (arg[0].resultCode == 161) {
						common.toast(settings.selector.toast, LanguagePack.COOPERATION_CONSTRAINT_TEAMFOLDER_MSG2);
					} else if (arg[0].resultCode == 203) {
						common.toast(settings.selector.toast, LanguagePack.CREATE_FAIL_POFORMAT_MEMORY);
					} else {
						common.toast(settings.selector.toast, LanguagePack.CREATE_FAIL_POFORMAT);
					}
					if (arg[1].children('.convert_popup2').is(':visible')) {
						arg[1].children('.convert_popup2').hide();
						settings.handle.changeMode.apply(arg[1], [settings.type]);
						/*if(settings.appendLi) {
							var top = settings.appendLi.prop('offsetTop');
							var height = settings.appendLi.height();
							var $listbox = settings.appendLi.closest('.list_box');
							var scrollHeight = $listbox.prop('scrollHeight');
							$this.css('top', top + height);
							settings.appendLi.parent().children().last().after(arg[1]);
						}*/
						arg[1].cooperation('checkSize');
					}
				}
			},
			'onFailCB': function () {}
		},
		'reshare': {
			'onSuccessCB': function () {
				var arg = arguments;
				var settings = arg[1].data('settings');
				if (CheckResult(null, arg[0])) {
					var deniedUserLength = 0;
					var str = "";
					if (typeof (arg[0].deniedList) != 'undefined' && arg[0].deniedList) {
						deniedUserLength = arg[0].deniedList.length;
					}
					str = LanguagePack.COOPERATION_COMPLETE_AUTHENTICATED_MSG;

					var result = function () {
						if (arg[1].children('.share_popup').is(':visible')) {
							settings.stop = false;
							arg[1].children('.make').children('.shareBox').children('.box').children('a.btn_close').trigger('click');
						}
						//
					}
					setTimeout(result, 2000);
					if (typeof settings.errorcb != 'undefined' && settings.errorcb) {
						settings.errorcb();
					}
					if (deniedUserLength) {
						if (str) {
							str += '<br>(' + LanguagePack.COOPERATION_INVITE_NO_MSG(arg[0].deniedList.length) + ')';
						} else {
							str += LanguagePack.COOPERATION_INVITE_NO_MSG(arg[0].deniedList.length);
						}
					}
					if (str) {
						common.toast(settings.selector.toast, str, false);
					}
				} else {
					if (arg[0].resultCode == 161) {
						common.toast(settings.selector.toast, LanguagePack.COOPERATION_CONSTRAINT_TEAMFOLDER_MSG2);
					} else if (arg[0].resultCode == 162) {
						common.toast(settings.selector.toast, LanguagePack.COOPERATION_CONSTRAINT_TEAMFOLDER_MSG2);
					} else if (arg[0].resultCode == 172) {
						common.toast(settings.selector.toast, LanguagePack.SHARE_NO_INVITE);
					}
				}
				if (arg[4]) {
					arg[4].removeClass('click');
				}
			},
			'onFailCB': function () {}
		}
	};

	var common = {
		'toast': function (selector, msg, keep) {
			selector.children("span").html(msg);
			selector.fadeIn('fast');
			if (keep) {
				return;
			}
			setTimeout(function () {
				selector.fadeOut('slow', function () {});
			}, 3000);
		},
		'isMember': function (userInfo, email) {
			for (var i = 0; i < userInfo.length; i++) {
				if (userInfo[i].email == email)
					return true;
			}
			return false;
		},
		'checkHwpWrite': function () {
			var possiblePattern = /co\.editor\.test[1|2|3|4]\@gmail\.com|\@infraware\.co\.kr|\@infrawareglobal\.com/;
			return possiblePattern.test(gUserEmail);
			// var possibleArr = [ '@infraware.co.kr', '@infrawareglobal.com', 'co.editor.test1@gmail.com', 'co.editor.test2@gmail.com', 'co.editor.test3@gmail.com', 'co.editor.test4@gmail.com'];
			// return possibleArr.some(function(item, index, array){
			// 	return !!~gUserEmail.search(item);
			// });
		}
	};

	$.fn.cooperation = function (method) {
		if (cooperation[method]) {
			return cooperation[method].apply(this, Array.prototype.slice.call(arguments, 1));
		} else if (typeof method === 'object' || !method) {
			return cooperation.init.apply(this, arguments);
		} else {
			$.error('The method ' + method + ' does not exist in $.cooperation');
		}
	};
	$.fn.toast = common.toast;
})($);

function showCooperation(fileinfo, _cb) {
	var $CooperationPopup = $('#Cooperation');
	if ($CooperationPopup.length) {
		if ($CooperationPopup.hasClass('init')) {
			setTimeout(showCooperation(fileinfo, _cb), 200);
		} else {
			if (!fileinfo.type) {
				fileinfo.type = '';
			}
			$CooperationPopup.cooperation(fileinfo, _cb);
		}
	} else {
		var $popup = $('<div id="Cooperation" class="ConfirmtPopup_external init popup2" draggable="false" style="top:0px; margin-top: 100px; z-index: 11; display:none;">');
		var $recenttextTest = $('<span id="Cooperation_txt_test"></span>');

		if (!$('body').hasClass(LanguagePack.CURRENT_LAN)) {
			$('body').addClass(LanguagePack.CURRENT_LAN);
		}
		$('body').append($popup);
		$('body').append($recenttextTest);
		var id = 0;
		var email = '';
		var settings = fileinfo;

		if (typeof gUserId != 'undefined') {
			id = gUserId;
		}
		if (typeof userEmail != 'undefined' && userEmail) {
			email = userEmail;
		} else if (typeof gUserEmail != 'undefined' && gUserEmail) {
			email = gUserEmail;
		}
		settings.id = id;
		settings.email = email;
		if (!settings.type) {
			settings.type = '';
		}
		$popup.cooperation(settings, _cb);
	}
}

function getCooperationPopupSize() {
	var $CooperationPopup = $('#Cooperation');
	if ($CooperationPopup.hasClass('init')) {
		return JSON.stringify({
			'width': 0,
			'height': 0
		});
	} else {
		return $CooperationPopup.cooperation('getSize');
	}
}

function getCooperationPopupHeight() {
	var $CooperationPopup = $('#Cooperation');
	if ($CooperationPopup.hasClass('init')) {
		return 0;
	} else {
		var data = $CooperationPopup.cooperation('getSize');
		if (typeof data === 'string') {
			data = JSON.parse(data);
		}
		return data.height;
	}
}

function getCooperationPopupClose() {
	var $CooperationPopup = $('#Cooperation');
	if ($CooperationPopup.hasClass('init')) {
		return false;
	} else {
		return $CooperationPopup.cooperation('getClose');
	}
}

function getCooperationFileInfo() {
	var $CooperationPopup = $('#Cooperation');
	if ($CooperationPopup.hasClass('init')) {
		return {};
	} else {
		return $CooperationPopup.cooperation('getinfo');
	}
}

function updateAddressCooperation() {
	var $CooperationPopup = $('#Cooperation');
	if (!$CooperationPopup.hasClass('init')) {
		$CooperationPopup.cooperation('updateAddress');
	}
}

function showCooperationStart(data) {
	if (typeof data === 'string') {
		data = JSON.parse(data);
	}

	if (data.noticeId) {
		var result = function (res) {
			if (CheckResult(null, res)) {
				if (res.notice.type == 'REQUESTRESHARE') {
					var data2 = {
						'log': {
							'state': 'start'
						},
						'fileinfo': {
							'id': res.notice.fileInfo.id,
							'reqUser': res.notice.attendance
						},
						'type': 'reqAuth',
						'agent': true,
						'isPcHome': false
					};
					showCooperation(data2);
				} else {
					var settings = {
						'log': {
							'state': 'start'
						},
						'fileinfo': {
							'id': data.id
						},
						'type': data.type,
						'agent': true,
						'isPcHome': false
					};
					showCooperation(settings);
				}
			} else {
				var settings = {
					'log': {
						'state': 'start'
					},
					'fileinfo': {
						'id': data.id
					},
					'type': data.type,
					'agent': true,
					'isPcHome': false
				};
				showCooperation(settings);
			}
		};
		var webdata = {
			'noticeId': '' + data.noticeId
		};
		popcorn.getNoticeOne(webdata, result, null);
	} else {
		var settings = {
			'log': {
				'state': 'start'
			},
			'fileinfo': {
				'id': data.id
			},
			'type': data.type,
			'agent': true,
			'isPcHome': false
		};
		showCooperation(settings);
	}
}

function inputEmailInfo(_email) {
	var $this = $('div.token');
	var $root = $this.parents('#Cooperation');
	$root.find('p.btn4 a.ok').click();
	var settings = $root.data('settings');
	settings.selector.box8.init.children().addClass('focus');
	settings.selector.box8.token_box.children('input').trigger('focus');

	if (settings.selector.box8.token_box.children('input').val().length) {
		settings.selector.box8.searchlist.show();
	}
	$root.cooperation('checkSize');
	//$('#addShareUser2').val(_email);
	//$('#addShareUser2').keyup();
	$('#share_popup_input2').val(_email);
	$('#share_popup_input2').keyup();
	var e = $.Event("keyup");
	e.keyCode = 13;
	//$('#addShareUser2').trigger(e)
	$('#share_popup_input2').trigger(e);
	$this.find('a.btn.close').click();
}

function setCoopeartionUser(arr) {
	try {
		var data;
		if (typeof arr === 'string') {
			data = JSON.parse(arr);
		} else {
			data = arr;
		}
		$('#Cooperation').cooperation('setemails', data);
	} catch (err) {
		/* JSON.parse error */ }
}

(function ($) {
	var cooperation2 = {
		'init': function (options) {
			var settings;
			var $this = this;
			if (!$this.length) {
				return;
			}

			if ($this.hasClass('init')) {
				settings = $.extend({
					'selector': {
						'bx': null,
						'user': null,
					},
					'group': {
						'maxt': 0,
						'mint': 0,
						'hm': false,
						'c': 50,
						'timeout': null,
						'scroll': null,
						'ischange': false,
						'newarr': []
					},
					'people': {
						'c': 0,
						'sarr': [],
						'harr': [],
						'person': [],
						'data': {},
						'sdone': 0,
						'hdone': 0,
						'timeout': null,
						'interval': null
					},
					'search': {
						'c': 0,
						'arr': [],
						'sarr': [],
					},
					'id': 0,
					'prev': 0,
					'inviteUser': [],
					'myemail': null,
					'myname': null,
					'agent': false,
					'click': "ontouchend" in document ? true : false,
				}, options);

				var handle = {
					'create': layout.create,
					'changelayout': layout.changeMode,
					'pset': layout.people.set,
					'sset': layout.search.set,
					'jsonset': layout.people.jsonset,
					'sjsonset': layout.search.jsonset,
					'useradd': layout.people.useradd,
					'premove': layout.people.remove,
					'searchupdate': layout.search.update,
					'eshow': layout.external.show,
					'elistshow': layout.external.listshow
				};
				settings.handle = $.extend(settings.handle, handle);

				if (!settings.myemail) {
					if (typeof userEmail != 'undefined' && userEmail) {
						settings.myemail = userEmail;
					} else if (typeof gUserEmail != 'undefined' && gUserEmail) {
						settings.myemail = gUserEmail;
					} else {
						settings.type = 'default';
					}
				}

				$this.data('settings', settings);
				$this.removeClass('init');

				settings.handle.create.apply($this);

				if (settings.agent && !settings.isPcHome) {
					$this.addClass('agent');
					defaultAlertCB = function (e) {
						if (e.preventDefault) e.preventDefault();
						if (e.stopPropagation) e.stopPropagation();

						sendMessageToNative('closesharedinfo');
					};
				}

				$this.bind('dragstart', function (event) {
					if ((event.target || event.srcElement).nodeName == 'A' ||
						(event.target || event.srcElement).nodeName == 'INPUT' ||
						(event.target || event.srcElement).nodeName == 'TEXTAREA' ||
						(event.target || event.srcElement).nodeName == 'OBJECT' ||
						(event.target || event.srcElement).nodeName == 'EMBED') {
						return false;
					}
				});
				$this.bind('selectstart', function (event) {
					if ((event.target || event.srcElement).nodeName !== 'INPUT' &&
						(event.target || event.srcElement).nodeName !== 'TEXTAREA') {
						return false;
					}
				});

				addressData.jsonGetRevision(jsonReceive.updateAddress, function (res) {});
			} else {
				settings = $this.data('settings');
				settings = $.extend(settings, options);
			}

			$this.cooperation2('pshow');
			if (!$this.is(':visible')) {
				layout.dim.create();
				$this.show().css('z-index', layout.dim.getZindex() + 1).children().addClass('other');
				if (!(settings.agent && !settings.isPcHome) && !$this.hasClass('allowScroll')) {
					$this.css('margin-top', '0');
					$this.addClass('allowScroll');
					$this.prepend($('<div class="allowScrollMargin"></div>'));
				}
			}
		},
		'pset': function (selector, list) {
			var $this = this;
			if ($this.hasClass('init')) {
				return;
			}
			var settings = $this.data('settings');
			settings.handle.pset.apply(selector, [list, false]);
		},
		'sset': function (selector, list) {
			var $this = this;
			if ($this.hasClass('init')) {
				return;
			}
			var settings = $this.data('settings');
			settings.handle.sset.apply(selector, [list, false]);
		},
		'updateAddress': function () {
			var $this = this;
			if ($this.hasClass('init')) {
				return;
			}
			var settings = $this.data('settings');

			if (settings.people.done == 0) {
				return;
			}
			var list = addressData.chageDataList['popup_cooperation2'];

			var $people = settings.selector.bx.children('.box.people');

			var plength = $people.children('dl').length;

			for (var i = 0; i < list.length; i++) {
				var arr;
				var arr2;
				var $selector;
				var done;
				var iscontain = false;
				if (list[i].type == 'new') {
					if (list[i].sh) {
						$selector = $people;
						arr = settings.people.sarr;
						done = settings.people.sdone;
						if (plength < 100) {
							iscontain = true;
						}
					} else {
						continue;
					}
					if (done == 1) {
						if (!iscontain) {
							iscontain = addressData.iscontain(arr, list[i]);
						}
						if (iscontain) {
							settings.handle.pset.apply($selector, [
								[list[i]], true
							]);
						}
					}

				} else if (list[i].type == 'modify') {
					if (list[i].sh) {
						$selector = $people;
						arr = settings.people.sarr;
						done = settings.people.sdone;
						if (plength < 100) {
							iscontain = true;
						}
					} else {
						continue;
					}
					settings.handle.premove.apply($selector, [
						[list[i]]
					]);

					if (done == 1) {
						if (!iscontain) {
							iscontain = addressData.iscontain(arr, list[i]);
						}
						if (iscontain) {
							settings.handle.pset.apply($selector, [
								[list[i]], true
							]);
						}
					}
				} else if (list[i].type == 'change') {
					if (list[i].sh) {
						$selector = $people;
						arr = settings.people.sarr;
						done = settings.people.sdone;
						if (plength < 100) {
							iscontain = true;
						}
					} else {
						continue;
					}

					settings.handle.premove.apply($people, [
						[list[i]]
					]);

					if (done == 1) {
						if (!iscontain) {
							iscontain = addressData.iscontain(arr, list[i]);
						}
						if (iscontain) {
							settings.handle.pset.apply($selector, [
								[list[i]], true
							]);
						}
					}
				}
			}

			addressData.chageDataList['popup_cooperation2'] = [];

			var user = settings.selector.user.children();
			if (!user.length) {
				if (settings.people.person.length) {
					for (var i = 0; i < settings.people.person.length; i++) {
						var data = {
							'id': null,
							'uid': settings.people.person[i].id,
							'e': settings.people.person[i].e
						};
						var arr = addressData.find(data);
						if (arr) {
							data = arr;
							$people.children('#address_' + arr['id']).addClass('selected').children('dt').children('input').attr('checked', 'checked');
						} else {
							if (settings.people.person[i].an) {
								data.n = settings.people.person[i].an;
							} else {
								data.n = settings.people.person[i].e;
							}
						}
						settings.handle.useradd.apply(settings.selector.user, [data, 0]);
					}
					settings.handle.searchupdate.apply($this, [3]);
				}
			}
		},
		'eshow': function (list) {
			var $this = this;
			if ($this.hasClass('init')) {
				return;
			}
			var settings = $this.data('settings');
			settings.handle.eshow.apply(settings.selector.bx.children('.externals'), [list]);
		},
		'elistshow': function (list) {
			var $this = this;
			if ($this.hasClass('init')) {
				return;
			}
			var settings = $this.data('settings');
			var $select = settings.selector.bx.children('.select');
			var $input = $select.children('label').children('input').attr('checked', false);
			$select.children('span').text(LanguagePack.SHARE_PEOPELEXTERNALADD(0));
			settings.handle.elistshow.apply(settings.selector.bx.children('.externalpeople'), [list]);
		},
		'elistreset': function (id) {
			var $this = this;
			if ($this.hasClass('init')) {
				return;
			}
			var settings = $this.data('settings');
			settings.handle.changelayout.apply($this, ['externals']);
			settings.selector.bx.children('.externals').children('dl.' + id).children('dd').children('a.remove').trigger('click');
		},
		'edeauthorize': function (id) {
			var $this = this;
			if ($this.hasClass('init')) {
				return;
			}
			var settings = $this.data('settings');
			settings.selector.bx.children('.externals').children('dl.' + id).addClass('off');
		},
		'externalreuslt': function (result, mail, id) {
			var $this = this;
			if ($this.hasClass('init')) {
				return;
			}
			if (!parseInt(result)) {
				var settings = $this.data('settings');
				settings.handle.changelayout.apply($this, ['externalpeople']);
				jsonResponse.getExternalEmail($this, mail, id, 1, 1000);
			} else {
				common.toast($this.children('.messenger_pop').children('.try'), LanguagePack.POPUP_RETRY);
			}
		},
		'pshow': function () {
			var $this = this;
			if ($this.hasClass('init')) {
				return;
			}
			var settings = $this.data('settings');
			var $tab = settings.selector.bx.children('.tab');
			$tab.children('.on').removeClass('on');
			$tab.children().eq(0).addClass('on');
			settings.handle.changelayout.apply($this, ['people']);
		},
		'getInviteUser': function () {
			var $this = this;
			if ($this.hasClass('init')) {
				return JSON.stringify([]);
			}
			var settings = $this.data('settings');
			return JSON.stringify(settings.inviteUser);
		}
	};

	var layout = {
		'dim': {
			'create': function () {
				var $dim = $('#dim');
				if (!$dim.length) {
					$('body').append('<div id="dim" class="dim"></div>');
					return;
				} else {
					$dim.css('z-index', parseInt($dim.css('z-index')) + 1);
				}
			},
			'remove': function () {
				var $dim = $('#dim');
				var zindex = $dim.css('z-index');
				if (zindex == '9') {
					$dim.remove();
				} else {
					$dim.css('z-index', parseInt($dim.css('z-index')) - 1);
				}
			},
			'getZindex': function () {
				var $dim = $('#dim');
				return parseInt($dim.css('z-index'));
			}
		},
		'create': function () {
			var $this = this;
			var clientType = (navigator.userAgent.indexOf('macdialog') != -1) ? 'mac' : 'win';
			var settings = $this.data('settings');
			var $wrapper = $('<div />', {
				'class': 'messenger_pop'
			});

			var $toast = $('<p />', {
				'class': 'try',
				'display': 'none',
				'html': '<span></span>'
			});


			var $sheader = $('<section />', {
				'class': 'header'
			});

			var $pbtn = $('<p />', {
				'class': 'btn'
			});

			var $pbtngclose = $('<a />', {
				'href': '#',
				'html': '<img src="' + CF_PATH + '/maxage1/common/img/msg/btn_close.svg" alt="close"/>',
				'click': events.close
			});

			var $fieldset = $('<fieldset />', {
				'class': 'invite',
				'html': '<legend>' + LanguagePack.SHARE_ADDPEOPLE2 + '</legend>'
			});

			var $viewuser = $('<div />', {
				'class': 'invite_search'
			});

			var $invite_box = $('<div />', {
				'class': 'invite_box off'
			});
			var $checkuser = $('<ul />');

			var $plabel = $('<p />', {
				'class': 'input',
				'html': '<label for="friend_search2">' + LanguagePack.SHARE_ADDPEOPLEMSG(clientType) + '</label>'
			});
			var $input = $('<input />', {
				'type': 'text',
				'id': 'friend_search2',
				'class': 'placeholder',
				'keyup': events.people.keyup, //find
				'keydown': events.people.keydown
			});
			$fieldset.append($viewuser.append($invite_box.append($checkuser)).append($plabel.append($input)));

			var $sbox = $('<section />', {
				'class': 'chat_box ' + settings.type
			});

			var $ul = $('<ul />', {
				'class': 'tab'
			});
			var $lip = $('<li />', {
				'class': 'first on'
			});
			var $tabp = $('<a />', {
				'href': '#',
				'text': LanguagePack.SHARE_PEOPLE,
				'click': events.people.show
			});
			var $liexport = $('<li />', {
				'class': 'last'
			});
			var $tabexport = $('<a />', {
				'href': '#',
				'text': LanguagePack.SHARE_ADDPEOPLE2,
				'click': events.external.show
			});

			var $boxpeople = $('<div />', {
				'class': 'box people',
				'scroll': events.people.scroll
			});

			var $nopeople = $('<p />', {
				'class': 'no_invite',
				'html': LanguagePack.SHARE_NOPEOPLE
			});
			$boxpeople.append($nopeople);

			var $boxsearch = $('<div />', {
				'class': 'box search',
				'scroll': events.search.scroll
			});

			$boxpeople.addClass('on');
			var $boxexternalpeople = $('<div />', {
				'class': 'box externalpeople'
			});

			var $noexternalpeople = $('<p />', {
				'class': 'no_invite off',
				'html': LanguagePack.SHARE_NOEXTERNALPEOPLE
			});
			$boxexternalpeople.append($noexternalpeople);

			var $coobtn = $('<p />', {
				'class': 'btn_bottom'
			});
			var $coobtn_ok = $('<a />', {
				'href': '#',
				'class': 'ok disabled',
				'text': LanguagePack.KEYWORD_FILEADD,
				'click': events.ok
			});
			var $coobtn_cancel = $('<a />', {
				'href': '#',
				'class': 'cancel',
				'text': LanguagePack.KEYWORD_CANCEL,
				'click': events.back
			});

			var $externalp = $('<p />', {
				'class': 'select'
			});
			var $externallabel = $('<label />', {
				'for': 'full_select'
			});
			var $externalinput = $('<input />', {
				'id': 'full_select',
				'type': 'checkbox',
				'click': events.external.useradd2
			});
			var $externalspan = $('<span />', {
				'text': LanguagePack.SHARE_PEOPELEXTERNALADD(0)
			});

			var $external = $('<div />', {
				'class': 'box externals'
			});
			var $exth3 = $('<h3 />', {
				'text': LanguagePack.SHARE_IMPORTARRESS
			});
			var $extp = $('<p />', {
				'class': 'txt',
				'text': LanguagePack.SHARE_IMPORTARRESSMSG
			});
			var $extdl = $('<dl />', {
				'class': 'bring google off'
			});
			var $extdt = $('<dt />', {
				'class': 'default',
				'text': 'Gmail'
			});
			var $extdt2 = $('<dt />', {
				'class': 'name',
				'text': ''
			});
			var $extdd = $('<dd />');
			var $extremove = $('<a />', {
				'href': '#',
				'class': 'remove',
				'text': LanguagePack.KEYWORD_UNLOCK,
				'click': events.external.logout
			});
			var $extadd = $('<a />', {
				'href': '#',
				'text': LanguagePack.SHARE_IMPORT,
				'click': events.external.getemail
			});

			var $extdl2;
			if (settings.agent) {
				var agnt = navigator.userAgent.toLowerCase();
				var outlook_class = 'outlook';
				var outlook_str = 'Outlook';
				if (agnt.search("mac") >= 0) {
					outlook_class += ' mac';
					outlook_str = LanguagePack.DESKTOP_ADDRESS;
				}
				$extdl2 = $('<dl />', {
					'class': 'bring off ' + outlook_class
				});
				var $extdt3 = $('<dt />', {
					'class': 'default',
					'text': outlook_str
				});
				var $extdd2 = $('<dd />');
				var $extadd2 = $('<a />', {
					'href': '#',
					'text': LanguagePack.SHARE_IMPORT,
					'click': events.external.getemail
				});
				$extdl2.append($extdt3).append($extdd2.append($extadd2));
			}

			$coobtn.append($coobtn_ok).append($coobtn_cancel);

			$pbtn.append($pbtngclose);
			$sheader.append($pbtn);

			$ul.append($lip.append($tabp)).append($liexport.append($tabexport));

			$externalp.append($externallabel.append($externalinput).append('<em> ' + LanguagePack.SHARE_ALLCHECK + '</em>')).append($externalspan);
			/*$extp_0.append($extlabel).append($extinput).append($extpeopleadd);*/
			$extdl.append($extdt).append($extdt2).append($extdd.append($extremove).append($extadd));
			$external.append($exth3).append($extp).append($extdl).append($extdl2) /*.append($exth3_0).append($extp_0)*/ ;

			$sbox.append($ul).append($fieldset).append($externalp).append($boxpeople).append($boxsearch).append($external).append($boxexternalpeople).append($coobtn);
			$this.append($wrapper.append($toast).append($sheader).append($sbox));

			settings.selector.bx = $sbox;
			settings.selector.user = $checkuser;
			settings.selector.pinput = $input;

			$input.bind("keyup", keyupPlaceHolderEvent);
			$input.bind("click", clickPlaceHolderEvent);
			$input.attr("autocomplete","off");

			mozillaForceKeyup('input#friend_search2');

			/*$extinput.bind("keyup", keyupPlaceHolderEvent);
			$extinput.bind("click", clickPlaceHolderEvent);

			mozillaForceKeyup('input#peoplePlus2');*/

		},
		'changeMode': function () {
			var $this = this;
			var settings = $this.data('settings');
			var $bx = settings.selector.bx;
			var arg = arguments;
			var newClass = arg[0];
			var $selector;

			var prev = $bx.children('.box.on');

			$bx.removeAttr('Class');
			$bx.attr('class', 'chat_box ' + newClass);

			prev.removeClass('on');

			if (settings.people.interval) {
				clearInterval(settings.people.interval);
				settings.people.interval = null
			}
			if (settings.people.timeout) {
				clearTimeout(settings.people.timeout);
				settings.people.timeout = null;
			}
			var arr = newClass.split(' ');
			var str = '';
			for (var i = 0; i < arr.length; i++) {
				str = '.' + arr[i];
			}
			$selector = $bx.children('.box' + str);
			$selector.addClass('on');

			if (newClass.lastIndexOf('externalpeople') != -1) {
				$selector.addClass('sloading');
			} else if (newClass.lastIndexOf('people') != -1) {
				settings.handle.searchupdate.apply($this, [1]);
				if (addressData.complete) {
					if (settings.people.sdone == 0) {
						settings.people.c = 0;
						settings.handle.jsonset.apply($selector, [true]);
						settings.people.sdone = 1;
						$selector.removeClass('sloading');
						addressData.jsonUpateAddress(jsonReceive.updateAddress, function (res) {});
					} else if (settings.people.sdone == 1) {
						settings.people.c = 0;
						if (addressData.sorigin.length > 100) {
							settings.handle.jsonset.apply($selector, [true]);
						}
						$selector.scrollTop(0);
						addressData.jsonUpateAddress(jsonReceive.updateAddress, function (res) {});
					}
				} else {
					$selector.addClass('sloading');
					settings.people.interval = setInterval(function () {
						if (addressData.complete) {
							settings.people.c = 0;
							clearInterval(settings.people.interval);
							settings.handle.jsonset.apply($selector, [true]);
							settings.people.sdone = 1;
							$selector.removeClass('sloading');
							addressData.jsonUpateAddress(jsonReceive.updateAddress, function (res) {});
						}
					}, 1000);
				}
			} else if (newClass.lastIndexOf('externals') != -1) {
				jsonResponse.getExternalList($this);
			}
			var ua = typeof gUA != 'undefined' ? gUA.toLowerCase() : navigator.userAgent.toLowerCase();
			//logTracking
			var webData = $LOGMODEL.getData();
			webData['ti'].t = LogType.tracking.page;

			if (ua.indexOf("polarisofficelink") != -1) {
				if (ua.indexOf("mac") >= 0)
					webData['obj'].dp = "Cowork.macsync";
				else
					webData['obj'].dp = "Cowork.winsync";
			} else if (ua.indexOf("polarispcoffice") != -1 || ua.indexOf('podialog') != -1) {
				webData['obj'].dp = "Cowork.pcoffice";
			} else if (ua.indexOf('macdialog') != -1) {
				webData['obj'].dp = "Cowork.macoffice";
			} else {
				webData['obj'].dp = "Cowork.web";
			}

			if (settings.type == 'group') {
				webData['obj'].dt = "GroupList";
				$LOGMODEL.sendData(webData);

			} else if (settings.type == 'people') {
				if (arg[0] == 'externals') {
					webData['obj'].dt = "ContactAdd";
					$LOGMODEL.sendData(webData);
				} else if (arg[0] == 'people') {
					webData['obj'].dt = "ContactList";
					$LOGMODEL.sendData(webData);
				}
			}
		},
		'external': {
			'show': function () {
				var $this = this;
				var arg = arguments;
				$this.children('dl').addClass('off');
				if (arg[0].length) {
					for (var i = 0; i < arg[0].length; i++) {
						var data = arg[0][i];
						var $dl = $this.children('dl.' + data.providerId);
						$dl.removeClass('off');
						$dl.children('dt.name').text(data.email);
						$dl.data('data', data);
					}
				}
			},
			'listshow': function () {
				var $this = this;
				var arg = arguments;
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');

				$this.removeClass('sloading');

				if ($this.children('dl').length) {
					$this.children('dl').remove();
				}

				if (arg[0].length) {
					for (var i = 0; i < arg[0].length; i++) {
						var data = arg[0][i];

						if (settings.myemail.toLowerCase() == data.email.toLowerCase()) {
							continue;
						}
						var $dl = $('<dl />', {
							'click': events.external.useradd
						});
						$dl.data('data', data);
						var $dt = $('<dt />');

						var $input = $('<input />', {
							'type': 'checkbox',
							'click': events.external.useradd
						});

						var $img = $('<img />', {
							'src': CF_PATH + '/maxage1/common/img/account/no_thum.svg',
							'width': '38px',
							'height': '38px',
							'alt': 'img'
						});
						var $dd = $('<dd />');

						if (data.name == '') {
							data.name = data.email;
						}
						var $sname = $('<span />', {
							'class': 'name',
							'text': data.name,
							'title': data.name
						});
						var $semail = $('<span />', {
							'class': 'mail',
							'text': data.email,
							'title': data.email
						});

						$dt.append($input).append($img);
						$dd.append($sname).append($semail);
						$dl.append($dt).append($dd);

						$this.append($dl);
					}
				}

				var $select = settings.selector.bx.children('.select');
				$select.children('label').children('em').text(' ' + LanguagePack.SHARE_ALLCHECK + '(' + $this.children('dl').length + ')');

				if ($this.children('dl').length) {
					$this.children('p').addClass('off');
				} else {
					$this.children('p').removeClass('off');
				}
			}
		},
		'people': {
			'jsonset': function () {
				var $this = $(this);
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');
				var arg = arguments;
				var isNext = arg[0];

				if (settings.people.c < 0) {
					return;
				}
				var prev = settings.people.c * 100;
				var last = prev + 100;
				var arr = [];

				var origin;
				var peoplearr;
				if ($this.hasClass('people')) {
					origin = addressData.sorigin;
					peoplearr = settings.people.sarr;
				} else {
					origin = addressData.horigin;
					peoplearr = settings.people.harr;
				}
				$this.children('dl').remove();
				if (last > origin.length) {
					if (!prev) {
						arr = origin.slice(prev, origin.length);
					} else {
						arr = origin.slice(prev - 100, origin.length);
					}
					for (var i = 0; i < arr.length; i++) {
						peoplearr.push(arr[i]);
					}
				} else {
					if (!prev) {
						arr = origin.slice(prev, last);
					} else {
						arr = origin.slice(prev - 100, last);
					}
					peoplearr = arr;
				}

				$root.cooperation2('pset', $this, peoplearr);

				if ($this.hasClass('people')) {
					var user = settings.selector.user.children();
					if (user.length) {
						for (var i = 0; i < user.length; i++) {
							var data = user.eq(i).data('data');
							if (data.id) {
								$this.children('#address_' + data.id).addClass('selected').children('dt').children('input').attr('checked', 'checked');
							} else {
								var arr = addressData.find(data);
								if (arr) {
									$this.children('#address_' + arr['id']).addClass('selected').children('dt').children('input').attr('checked', 'checked');
								}
							}
						}
					}
				}
			},
			'useradd': function () {
				var $this = $(this);
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');
				var arg = arguments;
				var data = arg[0];

				var $li = $('<li />', {
					'id': 'user_' + data.id,
					'class': 'name ' + (arg[1] ? 'enable' : ''),
					'title': data.n
				});

				var delimg = '';
				var $li_child = $('<div />');

				if (arg[1]) {
					delimg = '<img src="' + CF_PATH + '/maxage1/common/img/msg/btn_del02.svg" class="del" alt="Delete">';
					$li_child = $('<a />', {
						'href': '#',
						'click': events.people.cancel
					});
				}
				$li.data('data', data);

				var imgurl = CF_PATH + '/maxage1/common/img/account/no_thum.svg';
				var bgimg = '<span class="back_img">image Background</span>';
				if (data.uid) {
					imgurl = '/api/1/account/download/portrait/' + data.uid + '?' + settings.time;
					if (!arg[1]) {
						if (data.uid == settings.owerid) {
							delimg = '<img src="' + CF_PATH + '/maxage1/common/img/msg/me.png" class="del" alt=""></span>';
						} else {
							var isAddress = addressData.find(data);
							if (!isAddress) {
								imgurl = CF_PATH + '/maxage1/common/img/account/no_thum.svg';
							}
							delimg = '<img src="' + CF_PATH + '/maxage1/common/img/v4/link_check.svg" class="del" alt=""></span>';
						}
					}
				} else {
					var isAddress = addressData.find(data);
					if (!isAddress) {
						imgurl = CF_PATH + '/maxage1/common/img/account/no_thum.svg';
					}
				}

				var $img = $('<img />', {
					'src': imgurl,
					'width': '38px',
					'height': '38px',
					'alt': 'img'
				});

				var $name = $('<em />', {
					'text': data.n
				});

				$li.append($li_child.append($img).append(bgimg).append($name).append(delimg));
				settings.selector.user.append($li);
				var $div = settings.selector.user.parent();
				$div.scrollTop($div.prop('scrollHeight'));
			},
			'remove': function () {
				var $this = this;
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');
				var arg = arguments;

				for (var i = 0; i < arg[0].length; i++) {
					$this.children('dl#address_' + arg[0][i].id).remove();
				}
				if ($this.children('dl').length) {
					$this.children('p').addClass('off');
					settings.selector.bx.find('.btn_bottom a.ok').removeClass('disabled');
				} else {
					$this.children('p').removeClass('off');
					settings.selector.bx.find('.btn_bottom a.ok').addClass('disabled');
				}
			},
			'set': function () {
				var $this = this;
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');
				var arg = arguments;

				for (var i = 0; i < arg[0].length; i++) {
					var info = arg[0][i];
					if (typeof info.e == 'undefined') {
						continue;
					}

					if (typeof info.n == 'undefined') {
						info.n = info.e;
					}

					var $dl = $('<dl />', {
						'id': 'address_' + info.id,
						'click': events.people.useradd
					});
					$dl.data('data', info);
					var $dt = $('<dt />');
					var imgurl = CF_PATH + '/maxage1/common/img/account/no_thum.svg';
					var poimg = '';
					if (info.uid) {
						imgurl = '/api/1/account/download/portrait/' + info.uid + '?' + settings.time;
						poimg = '<span class="link_check"><img src="' + CF_PATH + '/maxage1/common/img/v4/link_check.svg" alt=""></span>';
					}
					var $checkbox = $('<input />', {
						'type': 'checkbox',
						'click': events.people.useradd
					});
					var $img = $('<img />', {
						'src': imgurl,
						'width': '38px',
						'height': '38px',
						'alt': 'img'
					});
					var $dd = $('<dd />');
					var $sname = $('<span />', {
						'class': 'name',
						'text': info.n,
						'title': info.n
					});
					var $semail = $('<span />', {
						'class': 'mail',
						'text': info.e,
						'title': info.e
					});
					var $addrbtn = '';

					if (typeof info.sh == 'undefined' || info.sh) {
						$addrbtn = $('<a />', {
							'href': '#',
							'class': 'btn_popup',
							'html': '<span>' + LanguagePack.KEYWORD_HIDE + '</span>',
							'click': events.people.peoplehide
						});
					} else {
						$addrbtn = $('<a />', {
							'href': '#',
							'class': 'btn_popup',
							'html': '<span>' + LanguagePack.KEYWORD_UNHIDE + '</span>',
							'click': events.people.peopleshow
						});
					}

					$dt.append($checkbox).append($img).append('<span class="back_img">image Background</span>').append(poimg);
					$dd.append($sname).append($semail).append($addrbtn);
					$dl.append($dt).append($dd);

					if (arg[1]) {
						var find = false;
						var old = $this.children('dl');
						for (var j = 0; j < old.length; j++) {
							var $olddl = old.eq(j);
							if ('' + $olddl.data('data').n > info.n) {
								$olddl.before($dl);
								find = true;
								break;
							}
						}
						if (!find) {
							$this.append($dl);
						}
					} else {
						$this.append($dl);
					}
				}
				if ($this.children('dl').length && !$this.children('p').hasClass('off')) {
					$this.children('p').addClass('off');
					settings.selector.bx.find('.btn_bottom a.ok').removeClass('disabled');
				}
			}
		},
		'search': {
			'jsonset': function () {
				var $this = $(this);
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');

				if (settings.search.c < 0) {
					return;
				}
				var prev = settings.search.c * 100;
				var last = prev + 100;
				var arr = [];

				var origin = settings.search.arr;
				var peoplearr = settings.search.sarr;

				if (last > origin.length) {
					if (!prev) {
						arr = origin.slice(prev, origin.length);
					} else {
						arr = origin.slice(prev - 100, origin.length);
					}
					for (var i = 0; i < arr.length; i++) {
						peoplearr.push(arr[i]);
					}
				} else {
					if (!prev) {
						arr = origin.slice(prev, last);
					} else {
						arr = origin.slice(prev - 100, last);
					}
					peoplearr = arr;
				}

				$this.children().remove();
				$root.cooperation2('sset', $this, peoplearr);

				var user = settings.selector.user.children();
				if (user.length) {
					for (var i = 0; i < user.length; i++) {
						var data = user.eq(i).data('data');
						if (data.id) {
							$this.children('#address_' + data.id).addClass('selected').children('dt').children('input').attr('checked', 'checked');
						} else {
							var arr = addressData.find(data);
							if (arr) {
								$this.children('#address_' + arr['id']).addClass('selected').children('dt').children('input').attr('checked', 'checked');
							}
						}
					}
				}
			},
			'set': function () {
				var $this = this;
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');
				var arg = arguments;

				for (var i = 0; i < arg[0].length; i++) {
					var data = arg[0][i];
					var $dl = $('<dl />', {
						'id': 'address_' + data.id,
						'click': events.people.useradd2
					});
					$dl.data('data', data);
					var $dt = $('<dt />');
					var imgurl = CF_PATH + '/maxage1/common/img/account/no_thum.svg';
					var poimg = '';
					if (data.uid) {
						imgurl = '/api/1/account/download/portrait/' + data.uid + '?' + settings.time;
						poimg = '<span class="link_check"><img src="' + CF_PATH + '/maxage1/common/img/v4/link_check.svg" alt=""></span>';
					}
					var $checkbox = $('<input />', {
						'type': 'checkbox',
						'click': events.people.useradd2
					});
					var $img = $('<img />', {
						'src': imgurl,
						'width': '38px',
						'height': '38px',
						'alt': 'img'
					});
					var $dd = $('<dd />');
					var $sname = $('<span />', {
						'class': 'name',
						'text': data.n,
						'title': data.n
					});
					var $semail = $('<span />', {
						'class': 'mail',
						'text': data.e,
						'title': data.e
					});

					$dt.append($checkbox).append($img).append('<span class="back_img">image Background</span>').append(poimg);
					$dd.append($sname).append($semail);
					$dl.append($dt).append($dd);

					$this.append($dl);
				}
			},
			'update': function () {
				var $this = this;
				var settings = $this.data('settings');
				var arg = arguments;
				if (arg[0] == 1) {
					var $selector = settings.selector.bx.children('.box.people');
					$selector.children('dl.selected').removeClass('selected').children('dt').children('input').removeAttr('checked');
					settings.selector.user.children().remove();
				}

				if (!settings.selector.user.children().length) {
					settings.selector.user.parent().addClass('off');
					settings.selector.bx.children('.people').removeClass('line_1');
					settings.selector.bx.children('.search').removeClass('line_1');
				} else {
					settings.selector.user.parent().removeClass('off');
					settings.selector.bx.children('.people').addClass('line_1');
					settings.selector.bx.children('.search').addClass('line_1');
				}
			}
		},
	};

	var events = {
		'back': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#cooperation2');
			var settings = $root.data('settings');

			if (settings.selector.bx.hasClass('externalpeople')) {
				settings.handle.changelayout.apply($root, ['externals']);
			} else {
				if (settings.agent && !settings.isPcHome) {
					sendMessageToNative('closesharedinfo');
				} else {
					layout.dim.remove();
					$root.hide().children().removeClass('other');
				}
			}
		},
		'ok': function (e) {
			if (e.preventDefault) e.preventDefault();

			var $this = $(this);
			var $root = $this.parents('#cooperation2');
			var settings = $root.data('settings');
			var arr = [];
			if (settings.selector.bx.hasClass('externalpeople')) {
				var $checkedlist = settings.selector.bx.children('.externalpeople').find('dl > dt > input:checked');
				if ($checkedlist.length) {
					var $dl = $checkedlist.parents('dl');
					for (var i = 0; i < $dl.length; i++) {
						var data = $dl.eq(i).data('data');
						var json = {
							'n': data.name,
							'e': data.email
						};
						arr.push(json);
					}
					addressData.jsonAddAddress(arr, jsonReceive.addAddress, function (res) {});
					settings.handle.changelayout.apply($root, ['externals']);
					return;
				}
			} else if (settings.selector.bx.hasClass('people')) {
				var $spanlist = settings.selector.user.children('.enable');
				for (var i = 0; i < $spanlist.length; i++) {
					var $span = $spanlist.eq(i);
					var data = $span.data('data');
					arr.push({
						'name': data.n,
						'email': data.e
					});
				}
			} else if (settings.selector.bx.hasClass('group')) {
				var $checked = settings.selector.bx.children('.group').children('.chat_group_add').children('li').children('label').children('input:checked');
				if ($checked.length) {
					var data = $checked.parents('li').data('data');
					for (var i = 0; i < data.al.length; i++) {
						var json = {
							'name': data.al[i].n,
							'email': data.al[i].e
						};
						arr.push(json);
					}
				}
			}
			if (arr.length) {
				if (settings.agent && !settings.isPcHome) {
					settings.inviteUser = arr;
					sendMessageToNative('invitesharedinfo', getInviteUser());
				} else {
					$('#Cooperation').cooperation('setemails', arr);
					layout.dim.remove();
					$root.hide().children().removeClass('other');
				}
			}
		},
		'close': function (e) {
			if (e.preventDefault) e.preventDefault();
			var $this = $(this);
			var $root = $this.parents('#cooperation2');
			var settings = $root.data('settings');

			if (settings.agent && !settings.isPcHome) {
				sendMessageToNative('closesharedinfo');
			} else {
				layout.dim.remove();
				$root.hide().children().removeClass('other');
				$this.removeClass('allowScroll');
				$this.css('margin-top', '100px');
				$this.children('div.allowScrollMargin').remove();
			}
		},
		'external': {
			'addpeople': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');
				var $input = $this.prev();
				var text = $.trim($input.val());
				if (text == '') {
					$input.val('');
					return;
				}
				var emailreg = /^([a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
				if (!emailreg.test(text) || (text.indexOf("@") > 63)) {
					var $root = $this.parents('#cooperation2');
					common.toast($root.children('.messenger_pop').children('.try'), LanguagePack.BUBBLE_ENTEREMAILFORMAT);
				} else if (settings.myemail.toLowerCase() == text) {
					common.toast($root.children('.messenger_pop').children('.try'), LanguagePack.NOTSHAREUSER);
				} else {
					var $root = $this.parents('#cooperation2');
					var data = {
						'e': text
					};
					jsonResponse.addPeople($root, [data]);
				}
			},
			'keydown': function (e) {
				switch (e.keyCode) {
					case 13:
						/* enter */
						return false;
				}
				return true;
			},
			'keyup': function (e) {
				if (e.stopPropagation) e.stopPropagation();
				var $this = $(this);
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');

				switch (e.keyCode) {
					case 13:
						if (e.preventDefault) e.preventDefault();
						$this.next().trigger('click');
						break;
				}
			},
			'show': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);

				var $tab = $this.parents('ul');
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');

				$tab.children('.on').removeClass('on');
				$tab.children().last().addClass('on');

				settings.handle.changelayout.apply($root, ['externals']);

				if (settings.isopen) {
					settings.isopen = false;
				}
			},
			'getemail': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);
				var $dl = $this.parents('dl');
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');
				var ua = typeof gUA != 'undefined' ? gUA.toLowerCase() : navigator.userAgent.toLowerCase();

				//logTracking
				var webData = $LOGMODEL.getData();
				webData['ti'].t = LogType.tracking.event;
				webData['obj'].ec = 'ux';
				webData['obj'].ea = 'cl';
				if (settings.agentType == 0) {
					webData['obj'].dp = "Cowork.web";
				} else if (settings.agentType == 1) {
					var agnt = navigator.userAgent.toLowerCase();
					if (agnt.indexOf("mac") >= 0)
						webData['obj'].dp = "Cowork.macsync";
					else
						webData['obj'].dp = "Cowork.winsync";
				} else if (settings.agentType == 2) {
					webData['obj'].dp = "Cowork.pcoffice";
				}
				webData['obj'].dt = "ContactAdd";
				webData['obj'].el = "Google";

				if ($dl.hasClass('off')) {
					if ($dl.hasClass('google')) {
						if (ischina == "true") {
							return;
						}
						if (settings.agent) {
							if (ua.search("polarispcoffice") != -1 || ua.indexOf('podialog') != -1 || ua.indexOf('macdialog') != -1) {
								localStorage.setItem('external_gmail', "coopeaton2");
								oncooperUrl(location.protocol + '//' + location.host + '/view/redirection?type=google_address', $root);
								sendMessageToNative('Email_open', oncoopergetUrl());
								$LOGMODEL.sendData(webData);
								return;
							}
						} else {
							settings.popup = window.open("about:blank");
						}
						jsonResponse.getExternalGmail($root, 'https://www.googleapis.com/auth/contacts https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile');
					} else if ($dl.hasClass('outlook')) {
						webData['obj'].el = "Device";
						sendMessageToNative('outlook_add');
					}
				} else {
					var data = $dl.data('data');
					settings.handle.changelayout.apply($root, ['externalpeople']);
					jsonResponse.getExternalEmail($root, data.providerId, data.providerUserId, 1, 1000);
				}

				$LOGMODEL.sendData(webData);
			},
			'logout': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);
				var $dl = $this.parents('dl');
				if (!$dl.hasClass('off')) {
					var $root = $this.parents('#cooperation2');
					var data = $dl.data('data');
					jsonResponse.deauthorizeMail($root, data.providerId, data.providerUserId);
				}
			},
			'useradd': function (e) {
				if (e.stopPropagation) e.stopPropagation();
				var $this = $(this);

				if (!$this.is('input')) {
					$this.children('dt').children('input').trigger('click');
					return;
				}
				var $bx = $this.parents('.box');
				setTimeout(function () {
					var $root = $bx.parents('#cooperation2');
					var settings = $root.data('settings');
					var $dl = $bx.children('dl');
					var $select = settings.selector.bx.children('.select');
					var $input = $select.children('label').children('input');
					var length = $dl.children('dt').children('input:checked').length;

					if ($dl.length == length) {
						$input.attr('checked', true);
					} else {
						if ($input.is(':checked')) {
							$input.attr('checked', false);
						}
					}
					var length = $bx.children('dl').children('dt').children('input:checked').length;
					$select.children('span').text(LanguagePack.SHARE_PEOPELEXTERNALADD(length));
				}, 0);
			},
			'useradd2': function (e) {
				if (e.stopPropagation) e.stopPropagation();
				var $this = $(this);
				var $select = $this.parents('.select');
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');
				var $bx = settings.selector.bx.children('.externalpeople');
				var $dl = $bx.children('dl');
				var length;
				if ($this.is(':checked')) {
					$dl.children('dt').children('input').attr('checked', true);
					length = $dl.length;
				} else {
					$dl.children('dt').children('input').attr('checked', false);
					length = 0;
				}
				$select.children('span').text(LanguagePack.SHARE_PEOPELEXTERNALADD(length));
			}
		},
		'people': {
			'scroll': function (e) {
				if (e.stopPropagation) e.stopPropagation();
				var $this = $(this);
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');

				var arr;

				if ($this.hasClass('people')) {
					if (addressData.sorigin.length <= 100) {
						return;
					}
					arr = addressData.sorigin;
				} else {
					if (addressData.horigin.length <= 100) {
						return;
					}
					arr = addressData.horigin;
				}
				if (settings.people.scroll) {
					clearTimeout(settings.people.scroll);
					settings.people.scroll = 0;
				}
				settings.people.scroll = setTimeout(function () {
					var top = $this.scrollTop();
					var height = $this.height();
					var scrollheight = $this.prop('scrollHeight');
					if (top == 0) {
						if (settings.people.c != 0) {
							if (settings.people.c == Math.ceil(arr.length / 100)) {
								settings.people.c--;
							}
							settings.people.c--;
							settings.handle.jsonset.apply($this, [false]);
							var newscroll = $this.prop('scrollHeight');
							if (scrollheight == newscroll) {
								$this.scrollTop(scrollheight / 2);
							} else {
								if (!settings.people.c) {
									$this.scrollTop(0);
								} else {
									$this.scrollTop(newscroll / 2);
								}
							}
						}
					} else if (top + height == scrollheight) {
						if (settings.people.c != Math.ceil(arr.length / 100)) {
							settings.people.c++;
							if (settings.people.c != Math.ceil(arr.length / 100)) {
								settings.handle.jsonset.apply($this, [true]);
								var newscroll = $this.prop('scrollHeight');
								if (scrollheight == newscroll) {
									$this.scrollTop(scrollheight / 2);
								} else {
									$this.scrollTop(scrollheight);
								}
							}
						}
					}
				}, 100);
			},
			'cancel': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this).parents('li');
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');
				var data = $this.data('data');

				settings.selector.bx.children('.search').children('#address_' + data.id).removeClass('selected').children('dt').children('input').removeAttr('checked');

				if (settings.selector.bx.children('.people').children('#address_' + data.id).length) {
					settings.selector.bx.children('.people').children('#address_' + data.id).trigger('click');
				} else {
					$this.remove();
				}
				settings.handle.searchupdate.apply($root, [2]);
			},
			'useradd': function (e) {
				if (e.stopPropagation) e.stopPropagation();
				var $this = $(this);
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');

				var $checkbox = $this;
				var $dl = $this.is('dl') ? $this : $this.parents('dl');

				var checked = true;

				if ($this.is('input')) {
					if ($dl.hasClass('selected')) {
						checked = false;
					} else {
						checked = true;
					}
				} else if ($this.is('dl')) {
					$dl = $this;
					$checkbox = $this.children().first().children('input');
					checked = $checkbox.is(':checked') ? false : true;
				}

				var data = $dl.data('data');
				if (settings.people.person.length) {
					for (var i = 0; i < settings.people.person.length; i++) {
						if (data.e == settings.people.person[i].e) {
							common.toast($root.children('.messenger_pop').children('.try'), LanguagePack.SHARE_DUPLICATE_PEOPEL);
							$this.addClass('selected');
							$this.children().first().children('input').attr('checked', 'checked');
							return;
						}
					}
				}

				if (settings.selector.user.children('#user_' + data.id).length) {
					checked = false;
				}

				if (checked) {
					$checkbox.attr('checked', 'checked');
					$dl.addClass('selected');
					if (settings.selector.user.children().length > 50) {
						common.toast($root.children('.messenger_pop').children('.try'), LanguagePack.SHARE_MAXPEOPLECOUNT);
						return;
					}
					var data2 = {
						'id': data.id,
						'uid': data.uid,
						'n': data.n,
						'e': data.e
					}
					settings.handle.useradd.apply(settings.selector.user, [data2, 1]);
					settings.handle.searchupdate.apply($root, [3]);
				} else {
					$checkbox.removeAttr('checked');
					$dl.removeClass('selected');
					settings.selector.user.children('#user_' + data.id).remove();
					settings.handle.searchupdate.apply($root, [2]);
				}
			},
			'useradd2': function (e) {
				if (e.stopPropagation) e.stopPropagation();
				var $this = $(this);
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');

				var $checkbox = $this;
				var $dl = $this.is('dl') ? $this : $this.parents('dl');

				var data = $dl.data('data');

				var $user = settings.selector.user.children('#user_' + data.id);
				if (!$user.length) {
					settings.selector.bx.children('.search').children('#address_' + data.id).addClass('selected').children('dt').children('input').attr('checked', 'checked');
					if (settings.selector.bx.children('.people').children('#address_' + data.id).length) {
						settings.selector.bx.children('.people').children('#address_' + data.id).trigger('click');
					} else {
						var data2 = {
							'id': data.id,
							'uid': data.uid,
							'n': data.n,
							'e': data.e
						}
						settings.handle.useradd.apply(settings.selector.user, [data2, 1]);
						settings.handle.searchupdate.apply($root, [3]);
					}
				} else {
					if (!$user.hasClass('enable')) {
						common.toast($root.children('.messenger_pop').children('.try'), LanguagePack.SHARE_DUPLICATE_PEOPEL);
					} else {
						settings.selector.bx.children('.search').children('#address_' + data.id).removeClass('selected').children('dt').children('input').removeAttr('checked');
						if (settings.selector.bx.children('.people').children('#address_' + data.id).length) {
							settings.selector.bx.children('.people').children('#address_' + data.id).trigger('click');
						} else {
							$user.remove();
							settings.handle.searchupdate.apply($root, [2]);
						}
					}
				}
				settings.selector.pinput.focus();
			},
			'keydown': function (e) {
				switch (e.keyCode) {
					case 13:
						/* enter */
						return false;
				}
				return true;
			},
			'keyup': function (e) {
				if (e.stopPropagation) e.stopPropagation();
				var $this = $(this);
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');
				var text = '';
				switch (e.keyCode) {
					case 27:
						/* esc */
						$this.val('');
						break;
					case 13:/* enter */
					case 186:/* ; */
						if (e.preventDefault) e.preventDefault();
						text = $.trim($this.val());
						if (text.length) {
							text = text.toLowerCase();
							if (settings.myemail.toLowerCase() == text) {
								common.toast($root.children('.messenger_pop').children('.try'), LanguagePack.NOTSHAREUSER);
							} else {
								var emailreg = /^([a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
								if (!emailreg.test(text) || (text.indexOf("@") > 63)) {
									common.toast($root.children('.messenger_pop').children('.try'), LanguagePack.BUBBLE_ENTEREMAILFORMAT);
								} else {
									if (settings.selector.user.children().length > 50) {
										common.toast($root.children('.messenger_pop').children('.try'), LanguagePack.SHARE_MAXPEOPLECOUNT);
									} else {
										var $user = settings.selector.user.children();
										var isexist = false;
										var isenable = false;
										for (var i = 0; i < $user.length; i++) {
											var $item = $user.eq(i);
											var data2 = $item.data('data');
											if (data2.e.toLowerCase() == text) {
												isexist = true;
												if ($item.hasClass('enable')) {
													isenable = true;
												}
												break;
											}
										}
										if (!isexist) {
											var isexist = false;
											var $search = settings.selector.bx.children('.search').children('dl');
											for (var i = 0; i < $search.length; i++) {
												var $item = $search.eq(i);
												var data2 = $item.data('data');
												if (data2.e.toLowerCase() == text) {
													isexist = true;
													settings.selector.bx.children('.search').children('#address_' + data2.id).trigger('click');
													break;
												}
											}
											if (!isexist) {
												var data = {
													'id': null,
													'uid': null,
													'n': text,
													'e': text
												};
												settings.handle.useradd.apply(settings.selector.user, [data, 1]);
												settings.handle.searchupdate.apply($root, [3]);
											}
											$this.val('');
											text = '';
										} else {
											common.toast($root.children('.messenger_pop').children('.try'), LanguagePack.SHARE_DUPLICATE_PEOPEL);
										}
									}
								}
							}
						}
						break;
					default:
						text = $this.val();
				}
				if (text.length) {
					text = text.toLowerCase();
					var $bx = settings.selector.bx.children('.search');
					var count = 0;

					var arr = addressData.sorigin;
					settings.search.arr = addressData.search(text);

					if (settings.search.arr.length) {
						settings.search.c = 0;
						settings.search.sarr = [];
						settings.handle.sjsonset.apply($bx, [true]);
					} else {
						$bx.children().remove();
						var $nopeople = $('<p />', {
							'class': 'no_invite',
							'html': LanguagePack.SHARE_NOMATCHPEOPLE
						});
						$bx.append($nopeople);
					}
					settings.selector.bx.children('.people').removeClass('on');
					$bx.addClass('on');
				} else {
					settings.selector.bx.children('.search').removeClass('on');
					settings.selector.bx.children('.people').addClass('on');
				}
			},
			'show': function (e) {
				if (e.preventDefault) e.preventDefault();
				var $this = $(this);

				var $tab = $this.parents('ul');
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');

				settings.selector.pinput.prev().removeClass('off');
				settings.selector.pinput.val('');

				$tab.children('.on').removeClass('on');
				$tab.children().eq(0).addClass('on');

				settings.handle.changelayout.apply($root, ['people']);
			}
		},
		'search': {
			'scroll': function (e) {
				if (e.stopPropagation) e.stopPropagation();
				var $this = $(this);
				var $root = $this.parents('#cooperation2');
				var settings = $root.data('settings');

				var arr;

				if (settings.search.arr.length <= 100) {
					return;
				}
				arr = settings.search.arr;

				if (settings.people.scroll) {
					clearTimeout(settings.people.scroll);
					settings.people.scroll = 0;
				}
				settings.people.scroll = setTimeout(function () {
					var top = $this.scrollTop();
					var height = $this.height();
					var scrollheight = $this.prop('scrollHeight');
					if (top == 0) {
						if (settings.people.c != 0) {
							if (settings.search.c == Math.ceil(arr.length / 100)) {
								settings.search.c--;
							}
							settings.search.c--;
							settings.handle.sjsonset.apply($this, [false]);
							var newscroll = $this.prop('scrollHeight');
							if (scrollheight == newscroll) {
								$this.scrollTop(scrollheight / 2);
							} else {
								if (!settings.search.c) {
									$this.scrollTop(0);
								} else {
									$this.scrollTop(newscroll / 2);
								}
							}
						}
					} else if (top + height == scrollheight) {
						if (settings.search.c != Math.ceil(arr.length / 100)) {
							settings.search.c++;
							if (settings.search.c != Math.ceil(arr.length / 100)) {
								settings.handle.sjsonset.apply($this, [true]);
								var newscroll = $this.prop('scrollHeight');
								if (scrollheight == newscroll) {
									$this.scrollTop(scrollheight / 2);
								} else {
									$this.scrollTop(scrollheight);
								}
							}
						}
					}
				}, 100);
			}
		}
	};

	var jsonResponse = {
		'addPeople': function () {
			var arg = arguments;
			var webdata = {
				'l': arg[1]
			};
			popcorn.addPeople(webdata, function (res) {
				jsonReceive.addPeople.onSuccessCB(res, arg[0]);
			}, function (res) {});
		},
		'getExternalList': function () {
			var arg = arguments;
			popcorn.getExternalList(function (res) {
				jsonReceive.getExternalList.onSuccessCB(res, arg[0]);
			}, function (res) {});
		},
		'getExternalEmail': function () {
			var arg = arguments;
			var webdata = {
				'providerId': arg[1],
				'providerUserId': arg[2],
				'startIndex': arg[3],
				'maxResult': arg[4]
			};
			popcorn.getExternalEmail(webdata, function (res) {
				jsonReceive.getExternalEmail.onSuccessCB(res, arg[0], arg[1]);
			}, function (res) {});
		},
		'getExternalGmail': function () {
			var arg = arguments;
			var webdata = {
				'scope': arg[1]
			};
			popcorn.getExternalGmail(webdata, function (res) {
				jsonReceive.getExternalGmail.onSuccessCB(res, arg[0]);
			}, function (res) {});
		},
		'deauthorizeMail': function () {
			var arg = arguments;
			var webdata = {
				'providerId': arg[1],
				'providerUserId': arg[2]
			};
			popcorn.disconnectExternalMail(webdata, function (res) {
				jsonReceive.deauthorizeMail.onSuccessCB(res, arg[0], arg[1]);
			}, function (res) {});
		},
	};

	var jsonReceive = {
		'addAddress': function (res) {
			if (CheckResult(null, res, chat_agent)) {
				common.toast($('#cooperation2').children('.messenger_pop').children('.try'), LanguagePack.SHARE_PEOPLEADDMSG);
				$('#cooperation2').cooperation2('updateAddress');
			}
		},
		'getExternalList': {
			'onSuccessCB': function () {
				var arg = arguments;
				if (CheckResult(null, arg[0], chat_agent)) {
					arg[1].cooperation2('eshow', arg[0].connectionTypeList);
				}
			},
			'onFailCB': function () {

			}
		},
		'getExternalEmail': {
			'onSuccessCB': function () {
				var arg = arguments;
				if (CheckResult(null, arg[0], chat_agent)) {
					arg[1].cooperation2('elistshow', arg[0].socialContacts);
				} else {
					if (arg[0].resultCode == Enum.account.NOTPERMITTINON) {
						common.toast(arg[1].children('.messenger_pop').children('.try'), LanguagePack.SHARE_UNAUTHORIZEDEMAIL);
						arg[1].cooperation2('elistreset', arg[2]);
					}
				}
			},
			'onFailCB': function () {

			}
		},
		'getExternalGmail': {
			'onSuccessCB': function () {
				var arg = arguments;
				var settings = arg[1].data('settings');
				if (CheckResult(null, arg[0], chat_agent)) {
					localStorage.setItem('external_gmail', "coopeaton2");
					if (!settings.agent) {
						settings.popup.location.href = arg[0].linkUrl;
					} else {
						oncooperUrl(arg[0].linkUrl, $('#cooperation2'));
						sendMessageToNative('Email_open', oncoopergetUrl());
					}

				} else {
					if (!settings.agent) {
						settings.popup.close();
					}
				}
			},
			'onFailCB': function () {

			}
		},
		'deauthorizeMail': {
			'onSuccessCB': function () {
				var arg = arguments;
				if (CheckResult(null, arg[0], chat_agent)) {
					arg[1].cooperation2('edeauthorize', arg[2]);
				}
			},
			'onFailCB': function () {

			}
		},
		'updateAddress': function (res) {
			if (CheckResult(null, res, chat_agent)) {
				$('#cooperation2').cooperation2('updateAddress');
			}
		},
	};

	var common = {
		'toast': function (selector, msg, keep) {
			selector.children("span").html(msg);
			selector.fadeIn('fast');
			if (keep) {
				return;
			}
			setTimeout(function () {
				selector.fadeOut('slow', function () {});
			}, 3000);
		},
		'closetoast': function (selector) {
			selector.hide();
		}
	}

	$.fn.cooperation2 = function (method) {
		if (cooperation2[method]) {
			return cooperation2[method].apply(this, Array.prototype.slice.call(arguments, 1));
		} else if (typeof method === 'object' || !method) {
			return cooperation2.init.apply(this, arguments);
		} else {
			$.error('The method ' + method + ' does not exist in $.cooperation2');
		}
	};
	
})($);

var cooperUrl = null;
var $contactParent = null;

function oncooperUrl(url, p) {
	cooperUrl = url;
	$contactParent = p;
}

function oncoopergetUrl() {
	return cooperUrl;
}

function externalcb2(result, mail, id) {
	if ($contactParent) {
		if ($contactParent.attr('id') == 'cooperation2') {
			$contactParent.cooperation2('externalreuslt', result, mail, id);
		} else {
			$contactParent.chatgroup('externalreuslt', result, mail, id);
		}
	}
}

function showGroup(settings) {
	if (typeof settings === 'string') {
		settings = JSON.parse(settings);
	}
	var $group = $('#cooperation2');
	if ($group.length) {
		if ($group.hasClass('init')) {
			setTimeout(function () {
				showGroup(settings);
			}, 200);
		} else {
			$group.cooperation2(settings);
		}
	} else {
		var $popup;
		var $popup = $('<div id="cooperation2" class="ConfirmtPopup_external init" style="top:0px; margin-top: 100px; z-index: 11; display:none;">');
		$('body').append($popup);
		var id = 0;
		var email = '';

		if (typeof gUserId != 'undefined') {
			id = gUserId;
		}
		if (typeof userEmail != 'undefined' && userEmail) {
			email = userEmail;
		} else if (typeof gUserEmail != 'undefined' && gUserEmail) {
			email = gUserEmail;
		}
		settings.id = id;
		settings.email = email;
		if (!settings.type) {
			settings.type = 'people';
		}
		$popup.cooperation2(settings);
	}
}

function getInviteUser() {
	var $popup = $('#cooperation2');
	if ($popup.hasClass('init')) {
		return JSON.stringify([]);
	}
	return $popup.cooperation2('getInviteUser');
}

function getLinkUrl() {
	return saveUrl;
}

function getoutlookData() {
	return outlookData;
}

function closeCooper(e) {
	var $src = $(e.srcElement);
	var id = $src.attr('id');
	if (id == 'clip_url' || id == 'getLocaRecentList' || id == 'reload_local_home') {
		return;
	}
	var $popup = $('#Cooperation');
	$popup.cooperation('close');
}

function getPosition() {
	var $popup = $('#Cooperation');
	return $popup.cooperation('getPosition');
}

function goDownWin(e) {
	commonPreventEvent(e);

	var webData = $LOGMODEL.getData();
	webData['ti'].t = LogType.tracking.event;
	webData['obj'].dp = "ShareSetting.web";
	webData['obj'].dt = "Share";
	webData['obj'].ec = "ux";
	webData['obj'].ea = "cl";
	webData['obj'].el = "LinkPCOfficeInstall";
	$LOGMODEL.sendData(webData);

	var link_url = script_prefix + '/products/windows';
	window.open(link_url, "_blank");
}

function supportHWPShare_viewModeOnly(status) {
	if (status == '0') {
		hwpWrite = true;
	} else {
		hwpWrite = false;
	}
}