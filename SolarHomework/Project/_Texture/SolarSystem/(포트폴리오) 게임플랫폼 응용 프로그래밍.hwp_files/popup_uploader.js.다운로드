(function($) {
	var pouploader = {
		'init' : function(options) {
			var settings;
			var $this = this; 
			if(!$this.length) {
				return;
			}
			layout.dim.create();
			
			if($this.hasClass('init')) { 
				settings = $.extend({ 
					'selector' : {
						'treefolder' : null,
						'treefolderSub' : null,
						'treefile' : null,
						'selected' : null,
						'checklist' : null,
						'close' : null
					},
					'type' : 'share',
					'agent' : false 
				}, options); 
				 
				var handle = {
						'create' : layout.create,
						'createRoot' : layout.treeFolder.createRoot,
						'createSub' : layout.treeFolder.createSub,
						/*'updateSub' : layout.treeFolder.updateSub,
						'removeSub' : layout.treeFolder.removeSub,
						'updateMoveSub' : layout.treeFolder.updateMoveSub,*/
						'createFile' : layout.treeFile.createFile,
						'createUpdate' : layout.checklist.createUpdate,
						'sort' : layout.sort
				};
				settings.handle = $.extend(settings.handle, handle);
				
				$this.data('settings', settings);
				$this.removeClass('init'); 
				settings.handle.create.apply($this);
				$this.show();
			} else {
				$this.children('.ConfirmtPopup_external').css('z-index', layout.dim.getZindex() + 1).children().addClass('other');
				$this.show();
			}
			if(listData.revision) {
				listData.jsonSync(http.SyncSuccess, null);
			} else {
				listData.jsonGetList(null, http.GetListRootSuccess, null);
			}
		},
		'initFodlerFile' : function() {
			var $this = $(this);
			var settings = $this.data('settings');
			settings.selector.treefolder.children().remove();
			settings.handle.createRoot.apply($this, [listData.rootid]);
			var index = listData.getList(listData.rootid);
			if(index != -1) {
				var arr = listData.getItemData('DIR', index);
				var info = {
						'id' : listData.rootid,
						'selector' : settings.selector.treefolderSub
				};
				settings.handle.createSub.apply($this, [info, arr, 1]);
			}
			settings.selector.selected = settings.selector.treefolder.children('dt').children('a');
			settings.selector.selected.trigger('click');

		},
		'close' : function() {
			var $this = $(this);
			if(!$this.hasClass('init') && $this.is(':visible')) {
				var settings = $this.data('settings');
				settings.selector.close.trigger('click');
			}
		},
		'createList' : function(parentid, id) {
			var $this = $(this);
			var index = listData.getList(id);
			var type = '';
			if(index != -1) {
				var settings = $this.data('settings');
				var $li = settings.selector.treefolderSub.find('li#pouploader_sub_' + parentid + '_' + id);
				if($li.hasClass('t')) {
					type = 't';
				} else if($li.hasClass('t_0')) {
					type = 't_0';
				}
				if(!$li.hasClass('close')) {
					var arr = listData.getItemData('DIR', index);
					var info = {
						'id' : id,
						'selector' : $li.children('ul')
					};
					settings.handle.createSub.apply($this, [info, arr, 1]);
					if(!arr.length)  {
						type += 'normal';
					} else {
						type += 'open';
					}
				}
				$li.children('span').children('a').children('img').attr('src', common.getImg(type));
				
				var arr = listData.getItemData('FILENOSHARE', index);
				settings.handle.createFile.apply($this, [id, arr]);
			} 
		},
		'sync' : function() {
			listData.jsonSync(http.SyncSuccess, null); 
		}
	};
	
	var layout = {
			'dim' : {
				'create' : function() {
					var $dim = $('#dim');
					if(!$dim.length) {
						$('body').append('<div id="dim" class="dim"></div>');
						return;
					} else {
						$dim.css('z-index', parseInt($dim.css('z-index')) + 1);
					}
				},
				'remove' : function() {
					var $dim = $('#dim');
					var zindex = $dim.css('z-index');
					if(zindex == '9') {
						$dim.remove();
					} else {
						$dim.css('z-index', parseInt($dim.css('z-index')) - 1);
					}
				},
				'getZindex' : function() {
					var $dim = $('#dim');
					return parseInt($dim.css('z-index'));
				}
			},
			'create' : function() {
				var $this = this; 
				var settings = $this.data('settings');
				var	$wrapper = $('<div />', {
					'class'    : 'ConfirmtPopup_external',
					'css' : {
						'width' : 'width:100%',
						'margin-top' : -202 + 'px',
						'z-index' : layout.dim.getZindex() + 1
					}
				});

				$wrapper.bind('selectstart', function() { if ((event.target || event.srcElement).nodeName !== 'INPUT') return false; });
				
				var	$popup = $('<div />', {
					'class'    : 'popup other share_doc',
					'css' : {
						'width' : 594 + 'px',
						'margin' : 'auto'
					}
				});
				var $h1 = $('<h1 />', {
					'text' : LanguagePack.KEYWORD_COOPERATION
				});
				var $treefolder = $('<dl />',{
					'class'    : 'tree_folder'
				});
				var $treeFile = $('<p />', {
					'class'    : 'file_list'
				});
				
				var $checkList =  $('<ul />', {
					'class'    : 'upload_list'
				});
				var $no_data = $('<span class="no_data"><em>' + LanguagePack.SHAREUPLOADER_SELECTFILE + '</em></span>');
				$checkList.append($no_data);
				
				
				var $ok = $('<p />', {
					'class'    : 'btn_share'
				});
				var $okbtn =  $('<a />', {
					'href' : '#',
					'text' : LanguagePack.Share,
					'click' : events.ok
				});
				$ok.append($okbtn);
				
				if(settings.agent) {
					var $closebtn2 =  $('<a />', {
						'href' : '#',
						'text' : LanguagePack.KEYWORD_CLOSE,
						'click' : events.close
					});
					$ok.append(' ').append($closebtn2);
				}
				
				var $close = $('<span />',{
					'class' : 'btn_close'
				});
				var $closebtn = $('<a />', {
					'href' : '#',
					'html' : '<img src="' + CF_PATH + '/resources/image/Polaris/popup_button_close.png" alt="Close">',
					'click' : events.close
				});
				$close.append($closebtn);
				
				$popup.append($h1).append($treefolder).append($treeFile).append($checkList).append($ok).append($close);
				
				$this.append($wrapper.append($popup));
				
				settings.selector.treefolder = $treefolder;
				settings.selector.treefile = $treeFile;
				settings.selector.checklist = $checkList;
				settings.selector.close = $closebtn;
				
				if(settings.agent) {
					$wrapper.css({'margin-top': '0px', 'top': '0px', 'width' : '360px'});  
					$popup.css({'border': 'none', 'box-shadow': 'none', 'border-radius' : '0px'}); 
					$h1.css('border-radius' , '0px');
				} 
			},
			'treeFile' : {
				'createFile' : function(id, list) {
					var $this = this; 
					var settings = $this.data('settings');
					if(id != settings.selector.treefile.attr('id')) {
						settings.selector.treefile.children().remove();
						settings.selector.treefile.attr('id', id);
					
						for(var i=0; i< list.length; i++) {
							var data = list[i];
							var $filebtn =  $('<a />', {
								'id' : 'uploader_filelist_' + data.fileId,
								'href' : '#',
								'css' : { 'display' : 'none'},
								'click' : events.treefile.checkList
							});
							$filebtn.data('data', data);
							
							var index = data.fileName.lastIndexOf(".");
							var type = data.fileName.substring(index + 1).toLowerCase(); 
							var name = data.fileName;
							if(type == 'slide' || type == 'sheet' || type == 'word') {
								name = name.substr(0, index);	
							}
							var $span = $('<span />');
							var $img = $('<img />', {
								'src' : CF_PATH + '/resources/image/Polaris/pv_ic_' + type + '.png'
							});
							settings.selector.treefile.append($filebtn.append($span.append($img).append(name)));
							$filebtn.show('fast');
						}
						if(list.length) {
							settings.handle.sort.apply(settings.selector.treefile.children('a'), [1]);
							var $checkedList = settings.selector.checklist.children('li');
							
							for(var i=0; i < $checkedList.length; i++) {
								var id = $checkedList.eq(i).attr('id').split('uploader_file_')[1];
								settings.selector.treefile.children('#uploader_filelist_' + id).addClass('on');
							}
						}
					} 
					
					if(!settings.selector.treefile.children('a').length) {
						settings.selector.treefile.append('<span class="no_data"><em>' + LanguagePack.KEYWORD_NOEXISTFILE + '</em></span>');
					}
				}
			},
			'treeFolder' : {
				'createRoot' : function(id) {
					var $this = this; 
					var settings = $this.data('settings');
					var	$root = $('<dt />', {
						'id'    : 'pouploader_' + id
					});
					var $rootbtn =  $('<a />', {
						'href' : '#',
						'text' : LanguagePack.KEYWORD_DRIVE(gUserLevel),
						'click' : events.treefolder.show
					});
					$root.append($rootbtn);
					
					var $ul = $('<ul />');
					var	$sub = $('<dd />').append($('<table />').append($('<tbody />').append($('<tr />').append($('<td />').append($ul)))));
					
					settings.selector.treefolder.append($root).append($sub);
					settings.selector.treefolderSub = $ul;
				},
				'createSub' : function(info, list, type) {
					var $this = this; 
					var settings = $this.data('settings');
					var $parent; 
					
					$parent = info.selector;
					
					for(var i=0; i< list.length; i++) {
						var data = list[i];
						var img; 
						
						var t = '';
						var str = '';
						if(data.isTeamFolder) {
							if(data.referenceId) {
								t = 't_0';
							} else {
								t = 't';
							}
							img = common.getImg(t +'close');
						} else {
							t = 'd';
							img = common.getImg('close');
						}
						
						var $li = $('<li />', {
							'id' : 'pouploader_sub_' + info.id + '_' + data.fileId,
							'class' : 'close ' +  t,
							'css' : { 'display' : 'none'},
							'click' : events.treefolder.show
						}); 
						var $span = $('<span />');
						
						var $a = $('<a />', {
							'href' : '#',
							'html' : '<img src="' + img + '">',
							'click' : events.treefolder.toogle
						});
						var $ul = $('<ul />'); 
						$li.append($span.append($a).append('<em>' + data.fileName + '</em>')).append($ul);
						
						$parent.append($li);
						$li.show('fast');
					}
					settings.handle.sort.apply($parent.children(), [type]);
				}
			},
			'checklist' : {
				'createUpdate' : function(data) {
					var $this = this; 
					var settings = $this.data('settings');
					var $li = $('<li />', {
						'id' : 'uploader_file_' + data.fileId
					}); 
					$li.data('data', data);
					
					var $a = $('<a />', {
						'href' : '#',
						'html' : '<img src="' + CF_PATH + '/resources/image/Polaris/btn_del.png" alt="Delete">',
						'click' : events.checklist.cancel
					}); 
					var name = data.fileName;
					var index = name.lastIndexOf(".");
					var type = name.substring(index + 1).toLowerCase(); 
					if(type == 'slide' || type == 'sheet' || type == 'word') {
						name = name.substr(0, index);	
					}
					$this.append($li.append(name + ' (' + getSize(2, data.size) + ')').append($a));
					
					if($this.children('span.no_data').is(':visible')) {
						$this.children('span.no_data').hide();
					}
				}
			},
			'sort' : function(type, selector) {
				var $this = this; 
				if(typeof $this == undefined) {
					return;
				}
				if(type == 1) {
					if($this.is('li')) {
						$this.sort(function(a, b) {
							var keyA = $(a).children('span').children('em').text();
							var keyB = $(b).children('span').children('em').text();
							return vsort('DIR', 'DIR', keyA, keyB, 1);
						});
					} else {
						$this.sort(function(a, b) {
							var keyA = $(a).data('data').fileName;
							var keyB = $(b).data('data').fileName;
							return vsort('FILE', 'FILE', keyA, keyB, 1);
						});
					}
					$this.parent().append($this);
				} else {
					if($this.is('li')) {
						var name = selector.children('span').children('em').text();
						var id = selector.attr('id').split('pouploader_sub_')[1];
						for(var i = 0; i < $this.length; i++) {
							var $li = $($this[i]);
							if(id == $li.attr('id').split('pouploader_sub_')[1]) {
								continue;
							}
							var keyA = $li.children('span').children('em').text();
							var keyB = name;
							var value = vsort('DIR', 'DIR', keyA, keyB, 1);
							if (value == 1) {
								$($li).before(selector);
								return;
							}
						} 
						$this.parent().append(selector);
					}
				}
			}
	};
	
	var events = {
			'ok' : function(e) {
				if(e.preventDefault) e.preventDefault();
				var $root = $(this).parents('#pouploader');
				var settings = $root.data('settings');
				var arr = [];
				var $list = settings.selector.checklist.children('li');
				
				var isshare = false;
				if(settings.type == 'share') {
					for(var i=0; i < $list.length; i++) {
						var data = $list.eq(i).data('data');
						arr.push({'id' : data.fileId, 'name' : data.fileName});
						if(data.taskId) {
							isshare = true;
						}
					} 
					if(arr.length == 1) {
						onContactShow(arr, isshare, 'sharedfile', true);
					} else {
						onContactShow(arr, 0, 'sharedfile', true);
					}
					$root.pouploader('close');
				}
			},
			'close' : function(e) {
				if(e.preventDefault) e.preventDefault();
				var $root = $(this).parents('#pouploader');
				var settings = $root.data('settings');
				
				if(settings.selector.treefolderSub.length) {
					settings.selector.treefolderSub.children().remove();
				}
				
				settings.selector.treefile.removeAttr('id').children('a').remove();
				
				if(settings.selector.selected) {
					settings.selector.selected.removeClass('on');
					settings.selector.selected = null;
				}
				settings.selector.checklist.children('li').remove();
				settings.selector.checklist.children('span').show();
				
				$root.hide();
				$root.children().children().removeClass('other'); 
				
				layout.dim.remove();
				
				if(settings.agent) {
					$('#shareFile_close').trigger('click');
				}
			},
			'treefile' : {
				'checkList' : function(e) {
					if(e.preventDefault) e.preventDefault();
					var $this = $(this);
					var data = $this.data('data');
					var $root = $this.parents('#pouploader');
					var settings = $root.data('settings');
					if(settings.selector.checklist.children('#uploader_file_' + data.fileId).length) {
						return;
					} else {
						$this.addClass('on');
						settings.handle.createUpdate.apply(settings.selector.checklist, [data]);
					}
				}
			},
			'treefolder' : {
				'show' : function(e) {
					if(e.preventDefault) e.preventDefault();
					if(e.stopPropagation) e.stopPropagation();
					var $this = $(this);
					var $root = $this.parents('#pouploader');
					var settings = $root.data('settings');
					var $checked;
					var isRoot = false; 
					
					if($this.parent().is('dt')) {
						isRoot = true;
						$checked = $this;
					} else {
						$checked = $this.children('span');
					}
					
					if(!settings.selector.selected) {
						settings.selector.selected = $checked;
					} else if(settings.selector.selected != $checked){
						settings.selector.selected.removeClass('on');
						settings.selector.selected = $checked;
					}
					
					$checked.addClass('on');
					
					var id; 
					var isTeamFolder = false;
					if(isRoot) {
						id = $this.parent().attr('id').split('pouploader_')[1];
					} else {
						id = $this.attr('id').split('_')[3];
						if($this.hasClass('t') || $this.hasClass('t_0')) {
							isTeamFolder = true;
						}
					}
					
					var index = listData.getList(id);
					if(index == -1) {
						if(isTeamFolder) {
							listData.jsonGetTeamList(id, http.GetTeamListSuccess, null);
						} else {
							listData.jsonGetList(id, http.GetListSuccess, null);
						}
					} else {
						var arr = listData.getItemData('FILENOSHARE', index);
						settings.handle.createFile.apply($root, [id, arr]);
					}
				},
				'toogle' : function(e) {
					if(e.preventDefault) e.preventDefault();
					var $this = $(this);
	
					var $li = $this.parent().parent('li');
					var type = ''; 
					if($li.hasClass('t')) {
						type = 't';
					} else if($li.hasClass('t_0')) {
						type = 't_0';
					}
					if($li.hasClass('close')) {
						$li.removeClass('close');
						var id = $li.attr('id').split('_')[3];
						if($li.children('ul').children().length) {
							type += 'open';
						} else {
							var index = listData.getList(id);
							if(index != -1) {
								var $root = $this.parents('#pouploader');
								var settings = $root.data('settings');
								var arr = listData.getItemData('DIR', index);
								var info = {
										'id' : id,
										'selector' : $li.children('ul')
								};
								settings.handle.createSub.apply($root, [info, arr, 1]);
								
								if(!arr.length) {
									type += 'normal';
								} else {
									type += 'open';
								}
							}
						}
					} else {
						$li.addClass('close');
						type += 'close';
					}
					$this.children('img').attr('src', common.getImg(type));
				}
			},
			'checklist' : {
				'cancel' : function(e) {
					if(e.preventDefault) e.preventDefault();
					var $this = $(this);
					var $li = $this.parents('li');
					var id = $li.attr('id').split('uploader_file_')[1];
					var $root = $this.parents('#pouploader');
					var settings = $root.data('settings');
					settings.selector.treefile.children('#uploader_filelist_' + id).removeClass('on');
					$li.remove();
					
					if(!settings.selector.checklist.children('li').length) {
						settings.selector.checklist.children('span.no_data').show();
					}	
				}
			},
			'prevent' : function(e) {
				if(e.preventDefault) e.preventDefault();
			}
	};
	
	var http = {
			'GetListSuccess' : function(res) {
				if(res.resultCode == 0) {
					$('#pouploader').pouploader('createList', res.directoryInfo.parentId, res.directoryInfo.fileId);
				}
			},
			'GetTeamListSuccess' : function(res) {
				if(res.resultCode == 0) {
					var id, parentid;
					id = res.list[0].folderInfo.fileId;
					parentid = res.list[0].folderInfo.parentId;
					if(res.list[0].folderInfo.referenceId) {
						parentid = res.list[0].sharedfolderInfo.parentId;
					} else if(res.list[0].folderInfo.parentId == res.list[0].sharedfolderInfo.referenceId) {
						parentid = res.list[0].sharedfolderInfo.fileId;
					}					
					$('#pouploader').pouploader('createList', parentid, id);
				}
			},
			'GetListRootSuccess' : function(res) {
				if(res.resultCode == 0) {
					for(var i=0; i < res.list.length; i++) {
						if(res.list[i].fileName == 'drive') {
							listData.rootid = res.list[i].fileId;
							listData.jsonGetList(listData.rootid, 
							function(res) {
								if(listData.rootid) {
									$('#pouploader').pouploader('initFodlerFile');
								}
							}, null);
							break;
						}
					}
				}
			},
			'SyncSuccess' : function(res) {
				if(res.resultCode == 0) {
					var isTeamfolder = false; 
					for (fileId in listData.teamDataInfo) {
						isTeamfolder = true;
						break;
					}
					if(isTeamfolder) {
						listData.jsonTeamSync(function() {
							$('#pouploader').pouploader('initFodlerFile');
						} , null);
					} else {
						$('#pouploader').pouploader('initFodlerFile');
					}
				}
			}
	};
	
	var common = {
			'getImg' : function(type) {
				var str;
				if(type == 'open') {
					str = CF_PATH + '/resources/image/Polaris/folder_tree_icon_folder_opened.png';
				} else if(type == 'close') {
					str = CF_PATH + '/resources/image/Polaris/folder_tree_icon_folder_closed.png';
				} else if(type == 'normal') {
					str = CF_PATH + '/resources/image/Polaris/folder_tree_icon_folder_normal.png';
				} else if(type == 't_0open') {
					str = CF_PATH + '/resources/image/Polaris/new/btb/folder_tree_icon_team_folder_opened.png';
				} else if(type == 't_0close') {
					str = CF_PATH + '/resources/image/Polaris/new/btb/folder_tree_icon_team_folder_closed.png';
				} else if(type == 't_0normal') {
					str = CF_PATH + '/resources/image/Polaris/new/btb/folder_tree_icon_team_folder_normal.png';
				} else if(type == 'topen') {
					str = CF_PATH + '/resources/image/Polaris/new/btb/folder_tree_icon_team_folder_opened.png';
				} else if(type == 'tclose') {
					str = CF_PATH + '/resources/image/Polaris/new/btb/folder_tree_icon_team_folder_closed.png';
				} else if(type == 'tnormal') {
					str = CF_PATH + '/resources/image/Polaris/new/btb/folder_tree_icon_team_folder_normal.png';
				}
				return str;
			}
	};
	$.fn.pouploader = function(method) {
		if (pouploader[method]) {
			return pouploader[method].apply(this, Array.prototype.slice.call(arguments, 1));
		} else if (typeof method === 'object' || !method) {
			return pouploader.init.apply(this, arguments);
		} else {
			$.error('The method ' + method + ' does not exist in $.pouploader');
		}
	};
	 
})($);

