$(document).ready(function(){
    const file = $("#cloudImageFile");
    buttonDisable($('#submitImg .primary'));
    file.on("change", function(){;
        if($(this).val() !== ""){
            $("input:radio[name='imgSelect']:radio[value='9']").prop('checked', true);
        } 
    })

    //drag & drop
    $(".word_cloud .upload_image_small .upload_file").on("dragover", function(e) {
        e.stopPropagation();
        e.preventDefault();
    }).on("drop", function(e){
        e.preventDefault();
        const files = e.originalEvent.dataTransfer.files[0];
        var reader = new FileReader(); 
		reader.onload = function(e) {
            $('.upload_image_small .upload_file .image').hide();
            $('#previewImg').attr('style', 'background-image:url('+ e.target.result +')');
            $('#previewImg').show()
		}
		reader.readAsDataURL(files);
        $("input:radio[name='imgSelect']:radio[value='9']").prop('checked', true);
        file.prop("files", e.originalEvent.dataTransfer.files);
    });

    $("#submitImg a").on("click",function (e) {
        e.preventDefault();
        const aiType = (file.val() === "" || $("input[name=imgSelect]:checked").val() != 9) ? 'wordCloud' : 'wordCloudImg';
        //크레딧이 부족하다면 API 안태우고 리턴
        const deductCredit = checkDeductCredit(aiType);
        const isPay = isPaymentCredit(deductCredit);
        if(isPay !== 1) {
            isCheckCreditPaymentAvailability(isPay);
            return;
        }
        $(".word_cloud .applied_image").append(loading);
        //워드 클라우드 정상 실행 시
        successServiceMessage(`${LanguagePack.AI_TOOLS_STR185}<br/> ${LanguagePack.AI_TOOLS_STR120(deductCredit, aiUserInfo.userinfo.remainCredit === -1 ? LanguagePack.KEYWORD_PRICE_INFINITE : aiUserInfo.userinfo.remainCredit - deductCredit)}`);
        const inputText = $(".word_cloud textarea").val();

        if(file.val() === "" || $("input[name=imgSelect]:checked").val() != 9){
            getCloudImg().then(res => {
                const keysLength = Object.keys(res).length;
                $(".word_cloud .applied_image .ai_loading").remove()
                if(keysLength === 0) {
                    sendLogMessage(LogType.tracking.event, 'ai.wordcloud.credit', 'WORDCLOUD', 'ux', 'cl', null, {cobj : {type : 'word cloud', used_credit: deductCredit}});
                    sendLogMessage(LogType.tracking.event, 'ai.wordcloud', null, 'ux', 'cl', null, {cobj : {input_number: inputText.length}});
                    successServiceMessage(LanguagePack.AI_TOOLS_STR187);
                    //toastMessage(LanguagePack.AI_TOOLS_STR56);
                    //console.log(res);
                    let img = URL.createObjectURL(res);
                    $(".word_cloud .thum").css("background-image", `url(${img})`);
                    buttonRemoveDisable($("#cloud_down .white"));
                    buttonRemoveDisable($("#cloud_down .primary"));
                    $("#cloud_down .white").off();
                    $("#cloud_down .white").on("click", function(e){
                        fileDownload(res)
                    });
                    $("#cloud_down .primary").off();
                    $("#cloud_down .primary").on("click", function(e){
                        insertImageToDocument(e, res, LanguagePack.AI_TOOLS_STR188);
                    });
                    
                } else {
                    if(res.resultCode === 15106){
                        errorServiceMessage(LanguagePack.AI_TOOLS_STR223)
                    } else if (res.resultCode === 15107 || res.resultCode === 15108 || res.resultCode === 15109 || res.resultCode === 15100) {
                        errorServiceMessage(LanguagePack.AI_TOOLS_STR190);
                    } else if (res.resultCode === 15002) {
                        //toastMessage(LanguagePack.AI_TOOLS_STR45);
                        errorServiceMessage(LanguagePack.AI_TOOLS_STR45);
                    } else if(res.resultCode === 100) {
                        po_editor.execute(null,'sessionError');
                    } else {
                        errorServiceMessage(LanguagePack.AI_TOOLS_STR74 + ' ' + LanguagePack.AI_TOOLS_STR75);
                    }
                }
            })
        } else {
            
            getCloudImgMaking(inputText)
            .then(res => {
                const keysLength = Object.keys(res).length;
                $(".word_cloud .applied_image .ai_loading").remove()
                if(keysLength === 0) {
                    sendLogMessage(LogType.tracking.event, 'ai.wordcloud.credit', 'WORDCLOUD', 'ux', 'cl', null, {cobj : {type : 'word cloud', used_credit: deductCredit}});
                    sendLogMessage(LogType.tracking.event, 'ai.wordcloud', null, 'ux', 'cl', null, {cobj : {input_number: inputText.length}});
                    successServiceMessage(LanguagePack.AI_TOOLS_STR187);
                    //toastMessage(LanguagePack.AI_TOOLS_STR56);
                    //console.log(res);
                    let img = URL.createObjectURL(res);
                    $(".applied_image .ai_loading").remove()
                    $(".word_cloud .thum").css("background-image", `url(${img})`);
                    buttonRemoveDisable($("#cloud_down .white"));
                    buttonRemoveDisable($("#cloud_down .primary"));
                    $("#cloud_down .white").off();
                    $("#cloud_down .white").on("click", function(e){
                        fileDownload(res);
                    });
                    $("#cloud_down .primary").off();
                    $("#cloud_down .primary").on("click", function(e){
                        insertImageToDocument(e, res, LanguagePack.AI_TOOLS_STR188);
                    });
                } else {
                    if(res.resultCode === 15106){
                        errorServiceMessage(LanguagePack.AI_TOOLS_STR223)
                    } else if (res.resultCode === 15107 || res.resultCode === 15108 || res.resultCode === 15109 || res.resultCode === 15100) {
                        errorServiceMessage(LanguagePack.AI_TOOLS_STR190);
                    } else if (res.resultCode === 15002) {
                        //toastMessage(LanguagePack.AI_TOOLS_STR45);
                        errorServiceMessage(LanguagePack.AI_TOOLS_STR45);
                    } else if(res.resultCode === 100) {
                        po_editor.execute(null,'sessionError');
                    } else {
                        errorServiceMessage(LanguagePack.AI_TOOLS_STR74 + ' ' + LanguagePack.AI_TOOLS_STR75);
                    }
                }
            })
        }
    });
    $(".word_cloud .form textarea").on('input', function() {
        if($(this).val().length > 1000){
            $(this).val($(this).val().substring(0, 1000));
        }
        if ($(this).val() !== '' && $(this).val().trim() !== '') {
            buttonRemoveDisable($('#submitImg .primary'));
        }
        else {
            buttonDisable($('#submitImg .primary'));
        }
    })
})
function aiWordCloud() {
    
    return $(function(){
        $("#previewImg .close").off();
        $("#removeImg").bind("click",function(e){
            e.preventDefault();
            $("#cloudImageFile").val("");
            $('.upload_image_small .upload_file .image').show();
            $("#previewImg").removeAttr('style', 'background-image');
            $("#previewImg").hide()
        })
        changeTitle(LanguagePack.AI_TOOLS_STR02);
        $(".word_cloud").css("display","block");
        $('.upload_image_small .upload_file .image').css("cursor","pointer");

        const {status} = po_editor.getCursoredLocation();
        if(status === 'caret_marking') {           
            $('#submitImg .primary').removeClass("disabled");
            $('#submitImg .primary').css("pointer-events","auto");
            $(".word_cloud .form textarea").val(po_editor.getMarkedText().replaceAll(/(\v)/g, "\r\n").slice(0,1000));
        } 
        buttonDisable($("#cloud_down .white"));
        buttonDisable($("#cloud_down .primary"));
        $("input:radio[name='imgSelect']:radio[value='1']").prop('checked', true);
        if($(".word_cloud .thum").css('background-image') != 'none') {
            buttonRemoveDisable($("#cloud_down .white"));
            buttonRemoveDisable($("#cloud_down .primary"));
        }
    })
}

async function getCloudImg() {
    const inputText = $(".word_cloud textarea").val();
    const requestValue = {
        text:inputText,
        mask_number:$("input[name=imgSelect]:checked").val(),
    }
    const formBody = [];
    for (const property in requestValue) {
      const encodedKey = encodeURIComponent(property);
      const encodedValue = encodeURIComponent(requestValue[property]);
      formBody.push(encodedKey + "=" + encodedValue);
    }
    const body = formBody.join("&");
    const data = await fetch(AI_WORD_CLOUD,{
        method:"POST",
        headers:{
            'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8'
        },
        body:body
    }).then(res => {
        const contentType = res.headers.get("content-type");
        if(contentType.includes("application/json")) {
            return res.json()
        } else {
            getAIUserInfo(function(res){
                if(res.resultCode === 0) {
                    aiUserInfo = res;
                }
            });	
            return res.blob()
        }
    })
    .catch(error => error)

    return data
}

async function getCloudImgMaking() {
    //console.log($("#cloudImageFile")[0].files[0]);
    const formData = new FormData();
    formData.append("multipartFile",$("#cloudImageFile")[0].files[0])
    const data = await fetch(AI_WORD_CLOUD_MASKING+`?text=${$(".word_cloud textarea").val()}`,{
        method:"POST",
        body: formData
    
    }).then(res => {
        const contentType = res.headers.get("content-type");
        if(contentType.includes("application/json")) {
            return res.json()
        } else {
            getAIUserInfo(function(res){
                if(res.resultCode === 0) {
                    aiUserInfo = res;
                }
            });	
            return res.blob()
        }
    })

    return data
}

