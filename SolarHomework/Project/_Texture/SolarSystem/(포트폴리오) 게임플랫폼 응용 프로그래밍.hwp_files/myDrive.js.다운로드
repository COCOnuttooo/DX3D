const myDrive = (function(){

    let paths = [];

    const sort = (list) => {
        return list.sort(function (a,b) {
            if(a.fileType == 'DIR' && b.fileType == 'DIR') {
                return a.referenceId !== null ? -1 : 1;
                
            } else if (a.fileType == 'DIR') {
                return -1;
            } else if (b.fileType == 'DIR') {
                return 1;
            }
        })
    }

    function getMyDriveList() {
        const data = {
            fileStatus: "NORMAL",
            path: "PATH://drive/"
        }

        popcorn.getlist(data, function(res) {
            if(res.resultCode === 0) {
                const $target = document.querySelector(".my_polaris_list");
                paths = [];
                $(".my_polaris_list .list").remove();
                $(".my_polaris_list .drive_loc .locations").remove();
                if(res.list.length > 0){
                    
                    $(".my_polaris_list .no_doc").hide()
                    new DriveLocation({initialState:paths});
                    new ListItem({$target, initialState : sort(res.list)});
                    
                } else {
                    $(".my_polaris_list .no_doc").show()
                }
            } else if(res.resultCode === 100) {
                po_editor.execute(null,'sessionError');
            }
    
        }, function(error){console.log(error)})
    }

    function getInnerDirList(dirId) {
        //디렉토리에 대한 ID 가 있는지 검사
        const id = paths.findIndex(item => item.fileId === dirId);

        const data = {
            fileStatus: "NORMAL",
            parentId: dirId
        }

        popcorn.getlist(data, function(res) {
            if(res.resultCode === 0) {
                $(".my_polaris_list .list").remove();
                $(".my_polaris_list .drive_loc .locations").remove();
                const $target = document.querySelector(".my_polaris_list");
                if(id !== -1) {
                    paths = paths.slice(0, id+1);
                } else {
                   paths.push({
                        fileName: res.directoryInfo.fileName,
                        fileId:res.directoryInfo.fileId,
                        referenceId: res.directoryInfo.referenceId,
                        sharedFolderId:res.directoryInfo.sharedFolderId
                   }) 
                }
                if(res.list.length > 0){
                    $(".my_polaris_list .no_doc").hide()
                    new ListItem({$target, initialState : sort(res.list)});
                } else {
                    $(".my_polaris_list .no_doc").show()
                }

                new DriveLocation({initialState:paths});
            } else if(res.resultCode === 100) {
                po_editor.execute(null,'sessionError');
            }
    
        }, function(error){console.log(error)})
    }

    function getShareFolderList(dirId) {
        //디렉토리에 대한 ID 가 있는지 검사
        const id = paths.findIndex(item => item.fileId === dirId);

        const data = {
            fileStatus: "NORMAL",
            fileType: 'ALL',
            recursive: false,
            folderList: [{folderId: dirId, path: null}]
        }

        popcorn.getTeamlist(data, function(res) {
            if(res.resultCode === 0) {
                $(".my_polaris_list .list").remove();
                $(".my_polaris_list .drive_loc .locations").remove();
                const $target = document.querySelector(".my_polaris_list");
                if(id !== -1) {
                    paths = paths.slice(0, id+1);
                } else {
                    const {sharedfolderInfo, folderInfo} = res.list[0];
                   paths.push({
                        fileName: paths.length > 0 ? folderInfo.fileName : sharedfolderInfo.fileName,
                        fileId: paths.length > 0 ? folderInfo.fileId : sharedfolderInfo.fileId,
                        referenceId: sharedfolderInfo.referenceId
                   }) 
                }
                if(res.list[0].fileList.length > 0){
                    $(".my_polaris_list .no_doc").hide()
                    new ListItem({$target, initialState : sort(res.list[0].fileList)});
                } else {
                    $(".my_polaris_list .no_doc").show()
                }
                new DriveLocation({initialState:paths});
            } else if(res.resultCode === 100) {
                po_editor.execute(null,'sessionError');
            }
    
        }, function(error){console.log(error)})
    }

    const eventBinding = () => {
        $('#openDoc .my_polaris').on("click", function(e){
            e.preventDefault();
            $(".open_type_menu").children("a").removeClass("on");
            $(this).addClass("on");
            $(".list_document").children(".file_list").hide();
            $(".list_document .my_polaris_list").show();
            getMyDriveList();
        });
    }
    

    const init = () => {
        eventBinding()
    }
    return {
        init,
        eventBinding,
        paths,
        getInnerDirList,
        getMyDriveList,
        getShareFolderList
    }
})()

$(function(){    
    if(gUserId)
        myDrive.init();
})